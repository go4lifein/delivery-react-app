[{"D:\\Coding\\go4Life\\delivery-crm\\src\\index.js":"1","D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\driver.reducers.js":"2","D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\admin.reducers.js":"3","D:\\Coding\\go4Life\\delivery-crm\\src\\App.js":"4","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Admin.jsx":"5","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Driver.jsx":"6","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Trace.js":"7","D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\index.js":"8","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Loading.js":"9","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Journey.js":"10","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\header.js":"11","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Main.js":"12","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Facts.js":"13","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\getDate.js":"14","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\misc.js":"15","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminLogin.js":"16","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminNavbar.js":"17","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverLogin.js":"18","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverNavbar.js":"19","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrders.js":"20","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AddReport.js":"21","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ChooseOrder.js":"22","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryForm.js":"23","D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\admin.actions.js":"24","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\CustomerSheet.jsx":"25","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ProductSheet.jsx":"26","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderManagement.jsx":"27","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\HeatMap.jsx":"28","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\utils.js":"29","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\admin.js":"30","D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\driver.actions.js":"31","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\driver.js":"32","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ReportForm.js":"33","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverOrderTable.js":"34","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\math.js":"35","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\exportCSV.js":"36","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\WebCam.js":"37","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\LeftRightSwitch.js":"38","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm.js":"39","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDataTable.js":"40","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryInfo.js":"41","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Tracemilk.js":"42","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Visual.jsx":"43","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\TraceProduce.jsx":"44","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Datepicker.js":"45","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\v2\\admin.js":"46","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeckGLExample.js":"47","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ThreeJS.js":"48","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AssignOrders.jsx":"49","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderTable.js":"50","D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\config.js":"51","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\v2\\driver.js":"52","D:\\Coding\\go4Life\\delivery-crm\\src\\store.js":"53","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryReview.js":"54","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryDashboard.jsx":"55","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderTableDelivery.js":"56"},{"size":620,"mtime":1614591233065,"results":"57","hashOfConfig":"58"},{"size":1889,"mtime":1614663344795,"results":"59","hashOfConfig":"58"},{"size":3491,"mtime":1614858024886,"results":"60","hashOfConfig":"58"},{"size":2275,"mtime":1614250992513,"results":"61","hashOfConfig":"58"},{"size":2885,"mtime":1614853673156,"results":"62","hashOfConfig":"58"},{"size":1350,"mtime":1614661509870,"results":"63","hashOfConfig":"58"},{"size":1949,"mtime":1614250992541,"results":"64","hashOfConfig":"58"},{"size":577,"mtime":1614846990330,"results":"65","hashOfConfig":"58"},{"size":244,"mtime":1607494551003,"results":"66","hashOfConfig":"58"},{"size":1083,"mtime":1612869302095,"results":"67","hashOfConfig":"58"},{"size":280,"mtime":1612869302095,"results":"68","hashOfConfig":"58"},{"size":2105,"mtime":1613044767855,"results":"69","hashOfConfig":"58"},{"size":1052,"mtime":1614345066242,"results":"70","hashOfConfig":"58"},{"size":438,"mtime":1612869302095,"results":"71","hashOfConfig":"58"},{"size":490,"mtime":1614250992515,"results":"72","hashOfConfig":"58"},{"size":2897,"mtime":1614587373553,"results":"73","hashOfConfig":"58"},{"size":6555,"mtime":1614859594656,"results":"74","hashOfConfig":"58"},{"size":2478,"mtime":1614660936707,"results":"75","hashOfConfig":"58"},{"size":2449,"mtime":1611905099446,"results":"76","hashOfConfig":"58"},{"size":4939,"mtime":1611908845907,"results":"77","hashOfConfig":"58"},{"size":1488,"mtime":1611735895436,"results":"78","hashOfConfig":"58"},{"size":7850,"mtime":1614663718026,"results":"79","hashOfConfig":"58"},{"size":12371,"mtime":1614602902758,"results":"80","hashOfConfig":"58"},{"size":993,"mtime":1614847020432,"results":"81","hashOfConfig":"58"},{"size":9975,"mtime":1611734940972,"results":"82","hashOfConfig":"58"},{"size":5843,"mtime":1610861740751,"results":"83","hashOfConfig":"58"},{"size":12344,"mtime":1614853523458,"results":"84","hashOfConfig":"58"},{"size":2192,"mtime":1612869302092,"results":"85","hashOfConfig":"58"},{"size":3329,"mtime":1614664565236,"results":"86","hashOfConfig":"58"},{"size":1888,"mtime":1612869302088,"results":"87","hashOfConfig":"58"},{"size":252,"mtime":1607597027408,"results":"88","hashOfConfig":"58"},{"size":1005,"mtime":1608969247598,"results":"89","hashOfConfig":"58"},{"size":11354,"mtime":1612939451936,"results":"90","hashOfConfig":"58"},{"size":2334,"mtime":1614662378233,"results":"91","hashOfConfig":"58"},{"size":116,"mtime":1611503799378,"results":"92","hashOfConfig":"58"},{"size":493,"mtime":1609398971229,"results":"93","hashOfConfig":"58"},{"size":2069,"mtime":1608886959876,"results":"94","hashOfConfig":"58"},{"size":1501,"mtime":1611817920581,"results":"95","hashOfConfig":"58"},{"size":7689,"mtime":1611908234718,"results":"96","hashOfConfig":"58"},{"size":5320,"mtime":1610259809307,"results":"97","hashOfConfig":"58"},{"size":7530,"mtime":1614922398762,"results":"98","hashOfConfig":"58"},{"size":2607,"mtime":1614251120722,"results":"99","hashOfConfig":"58"},{"size":884,"mtime":1614250992535,"results":"100","hashOfConfig":"58"},{"size":310,"mtime":1614250992535,"results":"101","hashOfConfig":"58"},{"size":450,"mtime":1614250992541,"results":"102","hashOfConfig":"58"},{"size":1633,"mtime":1614845439038,"results":"103","hashOfConfig":"58"},{"size":2091,"mtime":1614250992526,"results":"104","hashOfConfig":"58"},{"size":1780,"mtime":1614250992532,"results":"105","hashOfConfig":"58"},{"size":3610,"mtime":1614422662879,"results":"106","hashOfConfig":"58"},{"size":2417,"mtime":1614843968292,"results":"107","hashOfConfig":"58"},{"size":102,"mtime":1614426456445,"results":"108","hashOfConfig":"58"},{"size":1142,"mtime":1614661748115,"results":"109","hashOfConfig":"58"},{"size":407,"mtime":1614595411305,"results":"110","hashOfConfig":"58"},{"size":5823,"mtime":1614661727385,"results":"111","hashOfConfig":"58"},{"size":12056,"mtime":1614923229617,"results":"112","hashOfConfig":"58"},{"size":2893,"mtime":1614922705106,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"ham0x1",{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\go4Life\\delivery-crm\\src\\index.js",[],["242","243"],"D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\driver.reducers.js",["244","245"],"import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\r\n\r\nlet driver = window.localStorage.getItem('driver');\r\nif(driver) {\r\n  driver = JSON.parse(driver);\r\n} else {\r\n  driver = undefined;\r\n}\r\nconst initialState = {\r\n  driver\r\n}\r\n\r\nfunction hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const setDriver = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case UPDATE_DRIVER:\r\n      let driver = action.payload;\r\n      window.localStorage.setItem('driver', JSON.stringify(driver));\r\n      return { ...state, driver}\r\n\r\n    case UPDATE_ORDERS:\r\n\r\n      let orders = action.payload;\r\n      let locations = new Map();\r\n\r\n      let hubs = [];\r\n\r\n      orders.forEach(order => {\r\n        let { subarea, area, region } = order;\r\n        if(!hubs.includes(region)) {\r\n          hubs.push(region)\r\n        }\r\n        \r\n        if(locations.has(region)) {\r\n          let hubAreas = locations.get(region);\r\n          if(hubAreas.has(area)) {\r\n            let subareas = hubAreas.get(area);\r\n            if(!subareas.includes(subarea)) {\r\n              subareas.push(subarea);\r\n            }\r\n            hubAreas.set(area, subareas);\r\n            locations.set(region, hubAreas);\r\n          } else {\r\n            let areaData = [subarea];\r\n            hubAreas.set(area, areaData);\r\n            locations.set(region, hubAreas);\r\n          }\r\n        } else {\r\n          let hubAreas = new Map();\r\n          hubAreas.set(area, [subarea]);\r\n          locations.set(region, hubAreas)\r\n        }\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        orders,\r\n        locations,\r\n        hubs\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\admin.reducers.js",["246"],"D:\\Coding\\go4Life\\delivery-crm\\src\\App.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Admin.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Driver.jsx",["247"],"import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport DriverNavbar from \"../components/DriverNavbar\";\r\nimport DriverLogin from '../components/DriverLogin';\r\nimport {getCookie} from '../helpers/utils'\r\n\r\nconst ChooseOrder = lazy(() => import('../components/ChooseOrder'));\r\nconst OrderDeliveryForm = lazy(() => import('../components/OrderDeliveryForm'));\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nclass Driver extends Component {\r\n  componentDidMount() {\r\n    // if()\r\n  }\r\n  render() {\r\n    const {driver} = this.props;\r\n    return (\r\n      <div>\r\n        {driver ?\r\n          <div>\r\n            <DriverNavbar />\r\n            <Suspense fallback={<Loading />}>\r\n              <Switch>\r\n                <Route \r\n                  path=\"/:orderId/deliver\"\r\n                  component={OrderDeliveryForm}\r\n                />\r\n                <Route \r\n                  path=\"/\"\r\n                  component={ChooseOrder} \r\n                />\r\n              </Switch>\r\n            </Suspense>\r\n          </div> :\r\n          <DriverLogin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Driver);","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Trace.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\index.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Loading.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Journey.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\header.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Main.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Facts.js",["248"],"import  React , { useEffect } from \"react\";\r\nimport \"./facts.scss\";\r\n\r\nimport milkbox from \"./icons/milkbox.svg\";\r\n\r\nexport default function Facts( {data} ) {\r\n\r\n   \r\n   \r\n  return (\r\n    <div className=\"facts\">\r\n      <img src={milkbox} className=\"Milk\" alt=\"milkboxs\" />\r\n    {data &&<button className=\"download-btn\" onClick = {() => window.open(data.pdf_url)}> Download Test Report</button>}\r\n    { data&& \r\n      <div className=\"cards\">\r\n        <div className=\"section1\">\r\n          <div className=\"f1\">\r\n    \r\n            <h1>pH</h1>\r\n            \r\n            <p>{data.ph}</p>\r\n          </div>\r\n          <div className=\"f2\">\r\n            <h1>Fat </h1>\r\n            <p>{data.fat} %</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"section2\">\r\n          <div className=\"f3\">\r\n            <h1>SNF</h1>\r\n            <p>{data.snf} %</p>\r\n          </div>\r\n          <div className=\"f4\">\r\n            <h1>MBRT</h1>\r\n            <p>{data.mbrt} mins</p>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\getDate.js",["249","250"],"import React, { useState } from \"react\";\r\nimport DatePicker , {subDays} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./getdate.scss\";\r\n\r\nexport default function GetDate( {startDate}) {\r\n  \r\n  return (\r\n    <div className=\"datepicker\">\r\n      <DatePicker\r\n        className=\"box\"\r\n        selected={startDate}\r\n        dateFormat=\"MMMM d, yyyy\"\r\n      \r\n       \r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\misc.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminLogin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminNavbar.js",["251","252"],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverLogin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverNavbar.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrders.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AddReport.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ChooseOrder.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryForm.js",["253","254","255","256","257","258","259","260","261","262","263","264"],"import React from 'react';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LeftRightSwitch from './LeftRightSwitch';\r\nimport PlusOne from '@material-ui/icons/Add';\r\nimport RemoveCircle from '@material-ui/icons/Remove';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport WebCam from \"./WebCam\";\r\nimport {Grid } from '@material-ui/core';\r\nimport {max} from '../helpers/math';\r\nimport Review from './OrderDeliveryReview';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी'\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n  },\r\n  {\r\n    label: 'Boxes, Milk - कितने डब्बे डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें'\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      delivery_type: null,\r\n      delivery_img: null,\r\n      complete_delivery: null,\r\n      milk_packets: 0,\r\n      small_boxes: 0,\r\n      large_boxes: 0,\r\n      gable_tops: 0,\r\n      crates: 0,\r\n    }\r\n  }\r\n  handleNext = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n  handleBack = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n  DeliveryType = () => {\r\n    const onChange = (event) => {\r\n      this.setState({\r\n        delivery_type: event.target.value\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\" value={this.state.delivery_type} onChange={onChange}>\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n  DeliveryPhoto = () => {\r\n    const onCapture = (image) => {\r\n      // console.log(image)\r\n      this.setState({\r\n        delivery_img: image\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <div className=\"flex center\" >\r\n          <WebCam \r\n            onCapture={onCapture} \r\n            image={this.state.delivery_img}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  CompleteDelivery = () => {\r\n    \r\n    const onChange = (event) => {\r\n      this.setState({\r\n        complete_delivery: event.target.value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\" value={this.state.complete_delivery} onChange={onChange}>\r\n            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n            <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n  BoxNumbers = () => {\r\n    const {small_boxes, large_boxes, gable_tops, milk_packets} = this.state;\r\n\r\n    return (\r\n      <div className=\"pv-10\">\r\n        \r\n        <Grid container>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Small Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {small_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  small_boxes: small_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  small_boxes: max(0, small_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Large Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {large_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  large_boxes: large_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  large_boxes: max(0, large_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Gable Top</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {gable_tops}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  gable_tops: gable_tops+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  gable_tops: max(0, gable_tops-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Milk Packets</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {milk_packets}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  milk_packets: milk_packets+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  milk_packets: max(0, milk_packets-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n\r\n        {/* <LeftRightSwitch\r\n          center={}\r\n          leftIcon={<RemoveCircle />} \r\n          rightIcon={<PlusOne />} \r\n        /> */}\r\n        {/* <Slider\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={12}\r\n          value={this.state.boxes}\r\n          onChangeCommitted={onChange}\r\n        /> */}\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    const {history, match, orders, customers} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n    if(!orders) {\r\n      window.location = '/';\r\n    }\r\n    console.log(orders)\r\n    let order = orders.find((item) => {\r\n      return Number(item.orderId) === order_id\r\n    });\r\n    console.log(order)\r\n\r\n    if(!order) {\r\n      return <Typography variant=\"h4\">No such order</Typography>\r\n    }\r\n    let {\r\n      address,\r\n      area,\r\n      phone,\r\n      orderId,\r\n      region,\r\n      name,\r\n      subarea,\r\n      region_id,\r\n      customerID,\r\n      driverId,\r\n      location_id,\r\n      orderDate\r\n    } = order;\r\n\r\n    const {activeStep} = this.state;\r\n    const maxSteps = tutorialSteps.length;\r\n    // console.log(this.state);\r\n    return (\r\n      <div >\r\n        <Dialog \r\n          fullScreen \r\n          open\r\n          TransitionComponent={Transition}\r\n        >\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                history.goBack();\r\n              }} \r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              {name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{margin: '60px 10px 20px 10px', padding: '10px 10px'}}>\r\n          <Typography variant=\"h4\" >\r\n            {tutorialSteps[activeStep].label}\r\n          </Typography>\r\n          <Divider />\r\n          {\r\n            activeStep === 0 &&\r\n            <this.DeliveryType />\r\n          }\r\n          \r\n          {\r\n            activeStep === 1 &&\r\n            <this.DeliveryPhoto />\r\n          }\r\n          {\r\n            activeStep === 2 &&\r\n            <this.CompleteDelivery />\r\n          }\r\n          {\r\n            activeStep === 3 &&\r\n            <this.BoxNumbers />\r\n          }\r\n          {\r\n            activeStep === 4 &&\r\n            <Review \r\n              state={this.state}\r\n              props={this.props}\r\n            />\r\n          }\r\n        </div>\r\n        <MobileStepper\r\n          style={{\r\n            borderTop: '1px solid grey'\r\n          }}\r\n          steps={maxSteps}\r\n          position=\"bottom\"\r\n          variant=\"progress\"\r\n          activeStep={activeStep}\r\n          color=\"default\"\r\n          nextButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n              <KeyboardArrowLeft />\r\n              Previous\r\n            </Button>\r\n          }\r\n        />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\admin.actions.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\CustomerSheet.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ProductSheet.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderManagement.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\HeatMap.jsx",["265"],"import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport MapGL, {Source, Layer} from 'react-map-gl';\r\nimport {getLocationCustomerDensity} from '../api/admin';\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\n// mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\nconst navControlStyle= {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\nfunction HeatMap() {\r\n  const [data, setData] = useState([]);\r\n  const [ viewport, setViewport ] = useState({\r\n    latitude: 28.4501751,\r\n    longitude: 77.0738271,\r\n    zoom: 10,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getLocationCustomerDensity()\r\n    .then(res => {\r\n      setData(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const geojson = {\r\n    type: 'FeatureCollection',\r\n    features: [\r\n      // {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\r\n    ]\r\n  };\r\n\r\n\r\n  data.forEach(location => {\r\n    const {customers, latitude, longitude} = location;\r\n    geojson.features.push({\r\n      type: 'Feature',\r\n      properties: {\r\n        value: customers,\r\n      },\r\n      geometry: {\r\n        type: 'Point', \r\n        coordinates: [longitude, latitude]\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <MapGL\r\n        {...viewport}\r\n        onViewportChange={(viewport) => {\r\n          setViewport(viewport)\r\n        }}\r\n        width=\"100vw\"\r\n        height=\"calc(100vh - 70px)\"\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      >\r\n        {/* <NavigationControl style={navControlStyle} /> */}\r\n        <Source type='geojson' data={geojson}>\r\n          <Layer {...{\r\n            type: 'heatmap',\r\n            paint: {\r\n              'heatmap-intensity': 0.1,\r\n              'heatmap-radius': 12,\r\n              'heatmap-weight': [ 'interpolate', [ 'linear' ], [ 'get', 'value' ], 0, 0, 6, 2 ],\r\n              'heatmap-opacity': 1,\r\n            },\r\n          }} />\r\n        </Source>\r\n      </MapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeatMap;","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\utils.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\admin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\driver.actions.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\driver.js",[],["266","267"],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ReportForm.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverOrderTable.js",["268","269","270","271","272","273"],"import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\n// import DataTable from \"react-data-table-component\";\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Card from '@material-ui/core/Card';\r\n// import Link from 'react-router-dom';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction DriverOrderTable(props) {\r\n  \r\n  const {data, history} = props;\r\n\r\n  return (\r\n    <div id=\"order cards\">\r\n      {data.map(item => {\r\n        const {\r\n          address,\r\n          area,\r\n          phone,\r\n          orderId,\r\n          region,\r\n          name,\r\n          subarea,\r\n          region_id,\r\n          customerID,\r\n          driverId,\r\n          location_id,\r\n          orderDate\r\n        } = item;\r\n\r\n        return (\r\n          <Card\r\n            key={orderId.toString()}\r\n            style={{\r\n              margin: 10\r\n            }}\r\n          >\r\n            <CardHeader\r\n              onClick={() => {\r\n                if(item.deliveryId) {\r\n                  alert('Already delivered');\r\n                  return;\r\n                }\r\n                history.push(`/${orderId}/deliver`)\r\n              }}\r\n              title={ \r\n                <div>\r\n                  <div className=\"flex middle\">\r\n                    {/* <Avatar style={{background: 'red'}}>\r\n                      {\"10\"}\r\n                    </Avatar> */}\r\n                    <div style={{marginLeft: 10}}>\r\n                      {name}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <div style={{paddingTop: 10, paddingBottom: 10}}>\r\n                <a href={`tel:+91${phone}`} className=\"flex middle\">\r\n                  <PhoneIcon /> {phone}\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <span style={{fontWeight: 'bold'}}>\r\n                  Address\r\n                </span> {address}, {subarea}, {area}, {region}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(withRouter(DriverOrderTable));","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\math.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\exportCSV.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\WebCam.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\LeftRightSwitch.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDataTable.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryInfo.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Tracemilk.js",["274"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport moment from 'moment-timezone';\r\nimport Header from \"./header.js\"\r\nimport Main from \"./Main.js\"\r\nimport Journey from \"./Journey.js\"\r\nimport Facts from \"./Facts.js\"\r\nimport { getReport } from \"../api/misc\"\r\nimport Loading from \"../components/Loading\"\r\nimport Datepicker from \"./Datepicker.js\"\r\nimport \"./trace.scss\"\r\n\r\nexport default function Tracemilk({ location }) {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    let { search } = location;\r\n\r\n    search = new URLSearchParams(search);\r\n    const pack = search.get('package');\r\n\r\n    const onChange = (e) => {\r\n        console.log(e.target.value)\r\n        setStartDate(moment(e.target.value).format('YYYY-MM-DD'));\r\n    }\r\n    console.log(startDate);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getReport(pack, moment(startDate).subtract(3, 'days').format('YYYY-MM-DD'));\r\n                setData(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setData(null);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        getData();\r\n    }, [startDate]);\r\n\r\n    return (\r\n        <div className=\"trace\">\r\n\r\n            <Header />\r\n\r\n                <p className = \"exp\">Enter Expiry Date</p>\r\n            <Datepicker\r\n                startDate={startDate}\r\n                onChange={onChange}\r\n            />\r\n            {\r\n                startDate &&\r\n                <div>\r\n                    {\r\n                        loading ? \r\n                        <Loading />\r\n                        :\r\n                        <div>\r\n                            {\r\n                                data && startDate ?\r\n                                <>\r\n                                    <Main data={data} load={load} setLoad={setLoad} />\r\n                                    <Journey data={data} />\r\n                                    <Facts data={data} />\r\n                                </>\r\n                                :\r\n                                <p className=\"not-found\">\r\n                                    Record Not Found\r\n                                </p>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Visual.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\TraceProduce.jsx",["275","276","277","278"],"import React, { Suspense,  Component, lazy} from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\n\r\nclass Driver extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Driver;","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Datepicker.js",["279"],"import React, { useState } from 'react'\r\nimport moment from 'moment-timezone'\r\nimport './datepicker.scss'\r\n\r\n\r\nexport default function Datepicker({ startDate = moment().format('YYYY-MM-DD'), onChange }) {\r\n\r\n    return (\r\n        <div className=\"datepicker\">\r\n            <input\r\n                type=\"date\"\r\n                value={moment(startDate).format('YYYY-MM-DD')}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\v2\\admin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeckGLExample.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ThreeJS.js",["280"],"import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nfunction ThreeJS() {\r\n  \r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const scene = new THREE.Scene();\r\n    const renderer = new THREE.WebGLRenderer();\r\n    const camera = new THREE.PerspectiveCamera( 100, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    \r\n    scene.background = new THREE.Color('skyblue');\r\n\r\n    const cuboid = new THREE.BoxGeometry(10, 10, 30);\r\n    const boxEdges = new THREE.EdgesGeometry(cuboid);\r\n    const box = new THREE.LineSegments( boxEdges );\r\n\r\n    // const geometry = new THREE.SphereGeometry( 5, 10, 10 );\r\n    const plane = new THREE.PlaneGeometry(5, 3);\r\n    const planeEdges = new THREE.EdgesGeometry(plane);\r\n    const plane1 = new THREE.LineSegments( planeEdges );\r\n    const plane2 = new THREE.LineSegments( planeEdges );\r\n\r\n    plane1.material.depthTest = true;\r\n    plane1.material.opacity = 1;\r\n    plane1.material.transparent = false;\r\n\r\n    \r\n    plane2.material.depthTest = true;\r\n    plane2.material.opacity = 1;\r\n    plane2.material.transparent = false;\r\n\r\n    scene.add( plane1 );\r\n    scene.add( plane2 );\r\n    scene.add( box );\r\n\r\n\r\n    document.body.appendChild( renderer.domElement );\r\n\r\n    camera.position.z = 40;\r\n    // camera.position.x = -2;\r\n    // camera.position.y = -2;\r\n\r\n    const animate = function () {\r\n      requestAnimationFrame( animate );\r\n\r\n      box.rotation.x += 0.01;\r\n\r\n      renderer.render( scene, camera );\r\n    };\r\n    \r\n    animate();\r\n  }, [container]);\r\n  \r\n  return (\r\n    <div ref={useRef}>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreeJS;","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AssignOrders.jsx",["281"],"import React, { useCallback, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nimport OrderDataTable from './OrderTable';\r\nimport {assignDrivers, getAllOrders} from '../api/v2/admin';\r\n// import DeliveryInfo from \"./DeliveryInfo\";\r\nimport {updateOrdersData} from '../actions/admin.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data)),\r\n  };\r\n}\r\n\r\nfunction AssignOrders(props) {\r\n  const {data, deliveryBoys, onUpdateOrdersData, orderBoxData} = props;\r\n\r\n  let deliveryBoysData = Array.from(deliveryBoys.values());\r\n  deliveryBoysData = deliveryBoysData.sort((a, b) => (a.name.localeCompare(b.name)));\r\n  \r\n  let [selectedRows, setSelectedRows] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(false);\r\n\r\n  const onSelectCustomer = useCallback((selectedCustomer) => {\r\n    setSelectedCustomer(selectedCustomer);\r\n  }, []);\r\n  \r\n  const changeSelection = useCallback(({ allSelected, selectedCount, selectedRows }) => {\r\n    setSelectedRows(selectedRows)\r\n  }, []);\r\n\r\n  const updateDriver = (e) => {\r\n    let order_ids = selectedRows.map(item => item.orderId);\r\n    let driver = e.target.value;\r\n    const data = {\r\n      order_ids, driver\r\n    }\r\n    assignDrivers(data)\r\n    .then(res => {\r\n      getAllOrders()\r\n      .then(res => {\r\n        let orders = res.data;\r\n        onUpdateOrdersData(orders);\r\n      });\r\n      setSelectedRows([]);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div id=\"assign-orders\">\r\n      <Divider />\r\n      <div className=\"flex space-bw middle p-10\">\r\n        <div className=\"flex right middle\">\r\n          \r\n          <FormControl size=\"small\">\r\n            <InputLabel id=\"driver-filter\">Select Driver</InputLabel>\r\n            <Select\r\n              labelId=\"driver-filter\"\r\n              style={{width: 200}}\r\n              disabled={selectedRows.length < 1}\r\n              onChange={updateDriver}\r\n            >\r\n              <MenuItem value=\"null\">None</MenuItem>\r\n              {deliveryBoysData.map(item => (\r\n                <MenuItem value={item.id} key={`driver-${item.id}`}>{item.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"p-10\">\r\n            {\r\n              data.length \r\n            } Customers Filtered\r\n          </div>\r\n          <div className=\"p-10\">\r\n            {\r\n              selectedRows.length \r\n            } Customers Selected\r\n          </div>\r\n          <div className=\"p-10\">\r\n            <Button \r\n              startIcon={<DownloadIcon />}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              onClick={props.exportData}\r\n            >\r\n              Download Excel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OrderDataTable\r\n        data={data}\r\n        orderBoxData={orderBoxData}\r\n        onSelectionChange={changeSelection}\r\n        onRowSelect={onSelectCustomer}\r\n        deliveryBoys={deliveryBoys}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AssignOrders);","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderTable.js",["282"],"import React from 'react';\r\nimport DataTable from \"react-data-table-component\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n\r\nconst sortIcon = <ArrowDownward />;\r\n\r\nfunction OrderDataTable(props) {\r\n  const {data, onRowSelect, onSelectionChange, deliveryBoys, orderBoxData} = props;\r\n\r\n  const columns = [\r\n    // {\r\n    //   name: 'Crate',\r\n    //   selector: 'crate_id',\r\n    //   sortable: true,\r\n    //   width: '70px'\r\n    // },\r\n    {\r\n      name: 'Order Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '130px'\r\n    },\r\n    {\r\n      name: 'Crate Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '120px',\r\n      cell: (row) => {\r\n        const {orderId} = row;\r\n        const boxData = orderBoxData.get(parseInt(orderId));\r\n        return boxData?.crateId;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      selector: 'region',\r\n      width: '100px',\r\n    },\r\n    {\r\n      name: 'Area',\r\n      sortable: true,\r\n      selector: 'area',\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Locality',\r\n      sortable: true,\r\n      selector: 'subarea',\r\n      width: '200px'\r\n    },\r\n    // {\r\n    //   name: 'House',\r\n    //   selector: 'address',\r\n    //   width: '300px'\r\n    // },\r\n    {\r\n      name: 'Driver',\r\n      selector: '_driver',\r\n      cell: (row, idx) => {\r\n        let {driverId} = row;\r\n        if(driverId) {\r\n          let driver = deliveryBoys.get(driverId);\r\n          return driver ? driver.name : '';\r\n        }\r\n        return '';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <DataTable\r\n        striped={true}\r\n        noHeader\r\n        selectableRows\r\n        onSelectedRowsChange={onSelectionChange}\r\n        dense={true}\r\n        selectableRowsComponent={Checkbox}\r\n        sortIcon={sortIcon}\r\n        data={data}\r\n        columns={columns}\r\n        highlightOnHover={true}\r\n        pointerOnHover={true}\r\n        pagination={true}\r\n        paginationPerPage={10}\r\n        // onRowClicked={(row, e) => {\r\n        //   onRowSelect(row);\r\n        // }}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(OrderDataTable);","D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\config.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\v2\\driver.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\store.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryReview.js",["283"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {submitOrderDelivery} from '../api/v2/driver';\r\nimport {dataURItoBlob} from '../helpers/utils';\r\n\r\nfunction Review ({state, props}) {\r\n  const {delivery_type, delivery_img, complete_delivery, milk_packets, small_boxes, large_boxes, gable_tops, boxes} = state;\r\n\r\n  const {history, match, driver} = props;\r\n  const {params} = match;\r\n  let order_id = parseInt(params.orderId);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let disabled = true;\r\n  if(delivery_type && delivery_img && complete_delivery && (milk_packets || small_boxes || large_boxes || gable_tops)) {\r\n    disabled = false;\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    const photoBlob = dataURItoBlob(delivery_img);\r\n    const formData = new FormData();\r\n    formData.append(\"delivery_img\", photoBlob);\r\n    formData.append(\"order_id\", order_id);\r\n    formData.append(\"driver_id\", driver.id);\r\n    formData.append(\"delivery_type\", delivery_type);\r\n    formData.append(\"complete_delivery\", complete_delivery);\r\n    formData.append(\"small_boxes\", small_boxes);\r\n    formData.append(\"large_boxes\", large_boxes);\r\n    formData.append(\"gable_tops\", gable_tops);\r\n    formData.append(\"milk_packets\", milk_packets);\r\n    submitOrderDelivery(formData)\r\n    .then(res => {\r\n      history.push('/');\r\n      setLoading(false);\r\n    })\r\n    .catch(err => {\r\n      setLoading(false);\r\n      alert(err.message);\r\n    });\r\n\r\n  }\r\n\r\n  function mapDeliveryType(delivery_type) {\r\n    switch (delivery_type) {\r\n      \r\n      case \"in_hand\":\r\n        return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n      case \"doorstep\":\r\n        return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n      case \"society_guard\":\r\n        return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n      case \"tower_guard\":\r\n        return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n      case \"order_cancelled\":\r\n        return \"Order Cancelled - आर्डर कैंसिल\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n    }\r\n  }\r\n  function mapCompleteDelivery(complete_delivery) {\r\n    switch (complete_delivery) {\r\n      \r\n      case \"yes\":\r\n        return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n      case \"no\":\r\n        return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pv-10\">\r\n      <Card variant=\"outlined\">\r\n        \r\n        <div className=\"p-10\">\r\n            <Typography variant=\"body\">Select Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n            <Typography variant=\"h6\">\r\n              {mapDeliveryType(delivery_type)}\r\n            </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n          <Typography variant=\"body\">Take Photo - आर्डर की फोटो लीजिये</Typography>\r\n          {\r\n            delivery_img ?\r\n            <div>\r\n              <img alt=\"order\" src={delivery_img} width={300} /> \r\n            </div> :\r\n            <Typography variant=\"h6\"><span style={{color: 'red'}}>Please take picture</span></Typography>\r\n          }\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</Typography>\r\n          <Typography variant=\"h6\">\r\n            {mapCompleteDelivery(complete_delivery)}\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Small Boxes - कितने छोटे डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{small_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Large Boxes - कितने बड़े डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{large_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Gable Top - कितने दूध के डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{gable_tops}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{milk_packets}</Typography>\r\n        </div>\r\n      </Card>\r\n      <div className=\"pv-10\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onSubmit}\r\n          disabled={loading || disabled}\r\n          startIcon={loading ? <CircularProgress size={12} /> : null}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Review;","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryDashboard.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderTableDelivery.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":30},{"ruleId":"288","severity":1,"message":"292","line":20,"column":10,"nodeType":"290","messageId":"291","endLine":20,"endColumn":20},{"ruleId":"288","severity":1,"message":"293","line":36,"column":21,"nodeType":"290","messageId":"291","endLine":36,"endColumn":30},{"ruleId":"288","severity":1,"message":"294","line":8,"column":9,"nodeType":"290","messageId":"291","endLine":8,"endColumn":18},{"ruleId":"288","severity":1,"message":"295","line":1,"column":19,"nodeType":"290","messageId":"291","endLine":1,"endColumn":28},{"ruleId":"288","severity":1,"message":"296","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"297","line":2,"column":22,"nodeType":"290","messageId":"291","endLine":2,"endColumn":29},{"ruleId":"288","severity":1,"message":"298","line":16,"column":8,"nodeType":"290","messageId":"291","endLine":16,"endColumn":19},{"ruleId":"288","severity":1,"message":"299","line":18,"column":8,"nodeType":"290","messageId":"291","endLine":18,"endColumn":20},{"ruleId":"288","severity":1,"message":"300","line":279,"column":36,"nodeType":"290","messageId":"291","endLine":279,"endColumn":45},{"ruleId":"288","severity":1,"message":"301","line":295,"column":7,"nodeType":"290","messageId":"291","endLine":295,"endColumn":14},{"ruleId":"288","severity":1,"message":"302","line":296,"column":7,"nodeType":"290","messageId":"291","endLine":296,"endColumn":11},{"ruleId":"288","severity":1,"message":"303","line":297,"column":7,"nodeType":"290","messageId":"291","endLine":297,"endColumn":12},{"ruleId":"288","severity":1,"message":"304","line":298,"column":7,"nodeType":"290","messageId":"291","endLine":298,"endColumn":14},{"ruleId":"288","severity":1,"message":"305","line":299,"column":7,"nodeType":"290","messageId":"291","endLine":299,"endColumn":13},{"ruleId":"288","severity":1,"message":"306","line":301,"column":7,"nodeType":"290","messageId":"291","endLine":301,"endColumn":14},{"ruleId":"288","severity":1,"message":"307","line":302,"column":7,"nodeType":"290","messageId":"291","endLine":302,"endColumn":16},{"ruleId":"288","severity":1,"message":"308","line":303,"column":7,"nodeType":"290","messageId":"291","endLine":303,"endColumn":17},{"ruleId":"288","severity":1,"message":"309","line":304,"column":7,"nodeType":"290","messageId":"291","endLine":304,"endColumn":15},{"ruleId":"288","severity":1,"message":"310","line":305,"column":7,"nodeType":"290","messageId":"291","endLine":305,"endColumn":18},{"ruleId":"288","severity":1,"message":"311","line":306,"column":7,"nodeType":"290","messageId":"291","endLine":306,"endColumn":16},{"ruleId":"288","severity":1,"message":"312","line":14,"column":7,"nodeType":"290","messageId":"291","endLine":14,"endColumn":22},{"ruleId":"284","replacedBy":"313"},{"ruleId":"286","replacedBy":"314"},{"ruleId":"288","severity":1,"message":"315","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"307","line":27,"column":11,"nodeType":"290","messageId":"291","endLine":27,"endColumn":20},{"ruleId":"288","severity":1,"message":"308","line":28,"column":11,"nodeType":"290","messageId":"291","endLine":28,"endColumn":21},{"ruleId":"288","severity":1,"message":"309","line":29,"column":11,"nodeType":"290","messageId":"291","endLine":29,"endColumn":19},{"ruleId":"288","severity":1,"message":"310","line":30,"column":11,"nodeType":"290","messageId":"291","endLine":30,"endColumn":22},{"ruleId":"288","severity":1,"message":"311","line":31,"column":11,"nodeType":"290","messageId":"291","endLine":31,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":44,"column":8,"nodeType":"318","endLine":44,"endColumn":19,"suggestions":"319"},{"ruleId":"288","severity":1,"message":"320","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"321","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":43},{"ruleId":"288","severity":1,"message":"322","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"323","line":2,"column":18,"nodeType":"290","messageId":"291","endLine":2,"endColumn":23},{"ruleId":"288","severity":1,"message":"296","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"324","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":23},{"ruleId":"288","severity":1,"message":"325","line":36,"column":10,"nodeType":"290","messageId":"291","endLine":36,"endColumn":26},{"ruleId":"288","severity":1,"message":"326","line":9,"column":16,"nodeType":"290","messageId":"291","endLine":9,"endColumn":27},{"ruleId":"288","severity":1,"message":"327","line":12,"column":110,"nodeType":"290","messageId":"291","endLine":12,"endColumn":115},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'hasOnlyDairyProducts' is defined but never used.","Identifier","unusedVar","'hasNoDairy' is defined but never used.","'productId' is assigned a value but never used.","'getCookie' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'subDays' is defined but never used.","'AccountIcon' is defined but never used.","'DownloadIcon' is defined but never used.","'customers' is assigned a value but never used.","'address' is assigned a value but never used.","'area' is assigned a value but never used.","'phone' is assigned a value but never used.","'orderId' is assigned a value but never used.","'region' is assigned a value but never used.","'subarea' is assigned a value but never used.","'region_id' is assigned a value but never used.","'customerID' is assigned a value but never used.","'driverId' is assigned a value but never used.","'location_id' is assigned a value but never used.","'orderDate' is assigned a value but never used.","'navControlStyle' is assigned a value but never used.",["328"],["329"],"'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pack'. Either include it or remove the dependency array.","ArrayExpression",["330"],"'Suspense' is defined but never used.","'lazy' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'OrbitControls' is defined but never used.","'selectedCustomer' is assigned a value but never used.","'onRowSelect' is assigned a value but never used.","'boxes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},"Update the dependencies array to be: [pack, startDate]",{"range":"333","text":"334"},[1415,1426],"[pack, startDate]"]