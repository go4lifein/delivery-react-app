[{"D:\\Coding\\go4Life\\delivery-crm\\src\\index.js":"1","D:\\Coding\\go4Life\\delivery-crm\\src\\reportWebVitals.js":"2","D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\admin.reducers.js":"3","D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\driver.reducers.js":"4","D:\\Coding\\go4Life\\delivery-crm\\src\\App.js":"5","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Admin.jsx":"6","D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Driver.jsx":"7","D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\index.js":"8","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Loading.js":"9","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminNavbar.js":"10","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminLogin.js":"11","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverNavbar.js":"12","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverLogin.js":"13","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryForm.js":"14","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ChooseOrder.js":"15","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\admin.js":"16","D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\admin.actions.js":"17","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AddReport.js":"18","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\CustomerSheet.jsx":"19","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ProductSheet.jsx":"20","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderManagement.jsx":"21","D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\driver.actions.js":"22","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\driver.js":"23","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\WebCam.js":"24","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverOrderTable.js":"25","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ReportForm.js":"26","D:\\Coding\\go4Life\\delivery-crm\\src\\api\\misc.js":"27","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryInfo.js":"28","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\exportCSV.js":"29","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDataTable.js":"30","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\utils.js":"31","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Traceability.js":"32","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\LeftRightSwitch.js":"33","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrders.js":"34","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm.js":"35","D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\math.js":"36","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm2.js":"37","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Trace.js":"38","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\header.js":"39","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Journey.js":"40","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Main.js":"41","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\getDate.js":"42","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Facts.js":"43"},{"size":852,"mtime":1611748879404,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1607155955208,"results":"46","hashOfConfig":"45"},{"size":8491,"mtime":1611823390113,"results":"47","hashOfConfig":"45"},{"size":5181,"mtime":1611736467748,"results":"48","hashOfConfig":"45"},{"size":1580,"mtime":1611816899175,"results":"49","hashOfConfig":"45"},{"size":3067,"mtime":1611503799374,"results":"50","hashOfConfig":"45"},{"size":1263,"mtime":1607632370329,"results":"51","hashOfConfig":"45"},{"size":365,"mtime":1611741838893,"results":"52","hashOfConfig":"45"},{"size":244,"mtime":1607494551003,"results":"53","hashOfConfig":"45"},{"size":5673,"mtime":1611738840209,"results":"54","hashOfConfig":"45"},{"size":2651,"mtime":1611503799368,"results":"55","hashOfConfig":"45"},{"size":2445,"mtime":1611738724799,"results":"56","hashOfConfig":"45"},{"size":2324,"mtime":1611831335820,"results":"57","hashOfConfig":"45"},{"size":18398,"mtime":1611820427347,"results":"58","hashOfConfig":"45"},{"size":8137,"mtime":1611738655478,"results":"59","hashOfConfig":"45"},{"size":1647,"mtime":1611741268674,"results":"60","hashOfConfig":"45"},{"size":506,"mtime":1611741849340,"results":"61","hashOfConfig":"45"},{"size":1488,"mtime":1611735895436,"results":"62","hashOfConfig":"45"},{"size":9975,"mtime":1611734940972,"results":"63","hashOfConfig":"45"},{"size":5843,"mtime":1610861740751,"results":"64","hashOfConfig":"45"},{"size":17599,"mtime":1611737905142,"results":"65","hashOfConfig":"45"},{"size":252,"mtime":1607597027408,"results":"66","hashOfConfig":"45"},{"size":1005,"mtime":1608969247598,"results":"67","hashOfConfig":"45"},{"size":2069,"mtime":1608886959876,"results":"68","hashOfConfig":"45"},{"size":2141,"mtime":1610189432562,"results":"69","hashOfConfig":"45"},{"size":11028,"mtime":1611393335752,"results":"70","hashOfConfig":"45"},{"size":516,"mtime":1611503799367,"results":"71","hashOfConfig":"45"},{"size":6377,"mtime":1611736507019,"results":"72","hashOfConfig":"45"},{"size":493,"mtime":1609398971229,"results":"73","hashOfConfig":"45"},{"size":5320,"mtime":1610259809307,"results":"74","hashOfConfig":"45"},{"size":1735,"mtime":1611819432412,"results":"75","hashOfConfig":"45"},{"size":9905,"mtime":1611736443041,"results":"76","hashOfConfig":"45"},{"size":1501,"mtime":1611817920581,"results":"77","hashOfConfig":"45"},{"size":4676,"mtime":1611831838853,"results":"78","hashOfConfig":"45"},{"size":7366,"mtime":1611831922106,"results":"79","hashOfConfig":"45"},{"size":116,"mtime":1611503799378,"results":"80","hashOfConfig":"45"},{"size":3505,"mtime":1611735849418,"results":"81","hashOfConfig":"45"},{"size":1800,"mtime":1611816859997,"results":"82","hashOfConfig":"45"},{"size":282,"mtime":1611748879440,"results":"83","hashOfConfig":"45"},{"size":1083,"mtime":1611748879404,"results":"84","hashOfConfig":"45"},{"size":1361,"mtime":1611748879404,"results":"85","hashOfConfig":"45"},{"size":507,"mtime":1611748879440,"results":"86","hashOfConfig":"45"},{"size":1053,"mtime":1611748879404,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ham0x1",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},"D:\\Coding\\go4Life\\delivery-crm\\src\\index.js",[],["180","181"],"D:\\Coding\\go4Life\\delivery-crm\\src\\reportWebVitals.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\admin.reducers.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\reducers\\driver.reducers.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\App.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Admin.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\containers\\Driver.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\constants\\index.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Loading.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminNavbar.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AdminLogin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverNavbar.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverLogin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDeliveryForm.js",["182"],"import React, { useState } from 'react';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LeftRightSwitch from './LeftRightSwitch';\r\nimport PlusOne from '@material-ui/icons/Add';\r\nimport RemoveCircle from '@material-ui/icons/Remove';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport WebCam from \"./WebCam\";\r\nimport {submitOrderDelivery} from '../api/driver';\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\nimport {max} from '../helpers/math';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी'\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n  },\r\n  {\r\n    label: 'Boxes, Milk - कितने डब्बे डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें'\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\n\r\nfunction Review ({state, props}) {\r\n  const {delivery_type, delivery_img, complete_delivery, milk_packets, small_boxes, large_boxes, gable_tops, boxes} = state;\r\n\r\n  const {history, match, driver} = props;\r\n  const {params} = match;\r\n  let order_id = parseInt(params.orderId);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let disabled = true;\r\n  if(delivery_type && delivery_img && complete_delivery && (milk_packets || small_boxes || large_boxes || gable_tops)) {\r\n    disabled = false;\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    const photoBlob = dataURItoBlob(delivery_img);\r\n    const formData = new FormData();\r\n    formData.append(\"delivery_img\", photoBlob);\r\n    formData.append(\"order_id\", order_id);\r\n    formData.append(\"driver_id\", driver.id);\r\n    formData.append(\"delivery_type\", delivery_type);\r\n    formData.append(\"complete_delivery\", complete_delivery);\r\n    formData.append(\"small_boxes\", small_boxes);\r\n    formData.append(\"large_boxes\", large_boxes);\r\n    formData.append(\"gable_tops\", gable_tops);\r\n    formData.append(\"milk_packets\", milk_packets);\r\n    submitOrderDelivery(formData)\r\n    .then(res => {\r\n      history.push('/');\r\n      setLoading(false);\r\n    })\r\n    .catch(err => {\r\n      setLoading(false);\r\n      alert(err.message);\r\n    });\r\n\r\n  }\r\n\r\n  function mapDeliveryType(delivery_type) {\r\n    switch (delivery_type) {\r\n      \r\n      case \"in_hand\":\r\n        return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n      case \"doorstep\":\r\n        return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n      case \"society_guard\":\r\n        return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n      case \"tower_guard\":\r\n        return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n      case \"order_cancelled\":\r\n        return \"Order Cancelled - आर्डर कैंसिल\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n    }\r\n  }\r\n  function mapCompleteDelivery(complete_delivery) {\r\n    switch (complete_delivery) {\r\n      \r\n      case \"yes\":\r\n        return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n      case \"no\":\r\n        return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pv-10\">\r\n      <Card variant=\"outlined\">\r\n        \r\n        <div className=\"p-10\">\r\n            <Typography variant=\"body\">Select Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n            <Typography variant=\"h6\">\r\n              {mapDeliveryType(delivery_type)}\r\n            </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n          <Typography variant=\"body\">Take Photo - आर्डर की फोटो लीजिये</Typography>\r\n          {\r\n            delivery_img ?\r\n            <div>\r\n              <img alt=\"order\" src={delivery_img} width={300} /> \r\n            </div> :\r\n            <Typography variant=\"h6\"><span style={{color: 'red'}}>Please take picture</span></Typography>\r\n          }\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</Typography>\r\n          <Typography variant=\"h6\">\r\n            {mapCompleteDelivery(complete_delivery)}\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Small Boxes - कितने छोटे डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{small_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Large Boxes - कितने बड़े डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{large_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Gable Top - कितने दूध के डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{gable_tops}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{milk_packets}</Typography>\r\n        </div>\r\n      </Card>\r\n      <div className=\"pv-10\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onSubmit}\r\n          disabled={loading || disabled}\r\n          startIcon={loading ? <CircularProgress size={12} /> : null}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      delivery_type: null,\r\n      delivery_img: null,\r\n      complete_delivery: null,\r\n      milk_packets: 0,\r\n      small_boxes: 0,\r\n      large_boxes: 0,\r\n      gable_tops: 0,\r\n      crates: 0,\r\n    }\r\n  }\r\n  handleNext = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n  handleBack = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n  DeliveryType = () => {\r\n    const onChange = (event) => {\r\n      this.setState({\r\n        delivery_type: event.target.value\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\" value={this.state.delivery_type} onChange={onChange}>\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n  DeliveryPhoto = () => {\r\n    const onCapture = (image) => {\r\n      // console.log(image)\r\n      this.setState({\r\n        delivery_img: image\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <div className=\"flex center\" >\r\n          <WebCam \r\n            onCapture={onCapture} \r\n            image={this.state.delivery_img}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  CompleteDelivery = () => {\r\n    \r\n    const onChange = (event) => {\r\n      this.setState({\r\n        complete_delivery: event.target.value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\" value={this.state.complete_delivery} onChange={onChange}>\r\n            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n            <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n  BoxNumbers = () => {\r\n    const {small_boxes, large_boxes, gable_tops, milk_packets} = this.state;\r\n\r\n    return (\r\n      <div className=\"pv-10\">\r\n        \r\n        <Grid container>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Small Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {small_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  small_boxes: small_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  small_boxes: max(0, small_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Large Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {large_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  large_boxes: large_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  large_boxes: max(0, large_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Gable Top</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {gable_tops}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  gable_tops: gable_tops+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  gable_tops: max(0, gable_tops-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Milk Packets</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {milk_packets}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  milk_packets: milk_packets+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  milk_packets: max(0, milk_packets-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n\r\n        {/* <LeftRightSwitch\r\n          center={}\r\n          leftIcon={<RemoveCircle />} \r\n          rightIcon={<PlusOne />} \r\n        /> */}\r\n        {/* <Slider\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={12}\r\n          value={this.state.boxes}\r\n          onChangeCommitted={onChange}\r\n        /> */}\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    const {history, match, orders, customers} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n    if(!orders) {\r\n      window.location = '/';\r\n    }\r\n    let order = orders.find((item) => item.order_id === order_id);\r\n    let customer = customers.get(order.customer_id);\r\n\r\n    if(!customer) {\r\n      console.log(order);\r\n      window.location = '/';\r\n    }\r\n\r\n    const {activeStep} = this.state;\r\n    const maxSteps = tutorialSteps.length;\r\n    // console.log(this.state);\r\n    return (\r\n      <div >\r\n        <Dialog \r\n          fullScreen \r\n          open\r\n          TransitionComponent={Transition}\r\n        >\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                history.goBack();\r\n              }} \r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              {customer.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{margin: '60px 10px 20px 10px', padding: '10px 10px'}}>\r\n          <Typography variant=\"h4\" >\r\n            {tutorialSteps[activeStep].label}\r\n          </Typography>\r\n          <Divider />\r\n          {\r\n            activeStep === 0 &&\r\n            <this.DeliveryType />\r\n          }\r\n          \r\n          {\r\n            activeStep === 1 &&\r\n            <this.DeliveryPhoto />\r\n          }\r\n          {\r\n            activeStep === 2 &&\r\n            <this.CompleteDelivery />\r\n          }\r\n          {\r\n            activeStep === 3 &&\r\n            <this.BoxNumbers />\r\n          }\r\n          {\r\n            activeStep === 4 &&\r\n            <Review \r\n              state={this.state}\r\n              props={this.props}\r\n            />\r\n          }\r\n        </div>\r\n        <MobileStepper\r\n          style={{\r\n            borderTop: '1px solid grey'\r\n          }}\r\n          steps={maxSteps}\r\n          position=\"bottom\"\r\n          variant=\"progress\"\r\n          activeStep={activeStep}\r\n          color=\"default\"\r\n          nextButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n              <KeyboardArrowLeft />\r\n              Previous\r\n            </Button>\r\n          }\r\n        />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ChooseOrder.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\admin.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\admin.actions.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\AddReport.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\CustomerSheet.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ProductSheet.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderManagement.jsx",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\actions\\driver.actions.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\driver.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\WebCam.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DriverOrderTable.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\ReportForm.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\api\\misc.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\DeliveryInfo.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\exportCSV.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\OrderDataTable.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\utils.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\Traceability.js",[],["183","184"],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\LeftRightSwitch.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrders.js",["185"],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\helpers\\math.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\components\\PackOrderForm2.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Trace.js",["186","187","188"],"import React , {useState , useEffect} from \"react\";\r\nimport \"./trace.scss\";\r\nimport Header from \"./header.js\";\r\nimport {location ,search} from \"react-router\";\r\nimport Main from \"./Main.js\";\r\nimport moment from \"moment\";\r\nimport Journey from \"./Journey.js\";\r\nimport Facts from \"./Facts.js\";\r\nimport GetDate from \"./getDate.js\";\r\nimport {getReport} from \"../api/misc.js\";\r\nimport Loading from \"../components/Loading.js\";\r\n\r\nexport default function Trace({ location }) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [isA2, setIsA2] = useState(true);\r\n  const [data ,setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Go4Life - Trace Your Milk\"\r\n    let {search} = location;\r\n    search = new URLSearchParams(search);\r\n    const date = new Date(search.get('report_date'));\r\n    const type = search.get('milk_type');\r\n    setStartDate(date);\r\n    setIsA2(type === \"a2\" ? true : false);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n  \r\n    async function getData() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getReport(\"a2\", startDate);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      }\r\n      catch (err) {\r\n        console.log(err);\r\n        setData(null);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getData();\r\n  }, [startDate, isA2]);\r\n\r\n  return (\r\n    <div className=\"trace\">\r\n      <Header />\r\n      <GetDate startDate = {startDate} setStartDate ={setStartDate} isA2 = {isA2} setIsA2 = {setIsA2}/>\r\n      {loading && <Loading />}\r\n      {!data && <p>Record Not Found</p>}\r\n      {data &&\r\n        <>\r\n          <Main data= {data}  />\r\n          <Journey data = {data} />\r\n          <Facts data= {data}  />\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\header.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Journey.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Main.js",[],"D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\getDate.js",["189","190"],"import React, { useState } from \"react\";\r\nimport DatePicker , {subDays} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./getdate.scss\";\r\n\r\nexport default function GetDate( {startDate ,setStartDate ,setIsA2 ,isA2}) {\r\n  \r\n  return (\r\n    <div className=\"datepicker\">\r\n      <DatePicker\r\n        className=\"box\"\r\n        selected={startDate}\r\n        dateFormat=\"MMMM d, yyyy\"\r\n      \r\n        onChange={(date) => setStartDate(date)}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\go4Life\\delivery-crm\\src\\trace\\Facts.js",["191"],"import  React , { useEffect } from \"react\";\r\nimport \"./facts.scss\";\r\n\r\nimport milkbox from \"./icons/milkbox.svg\";\r\n\r\nexport default function Facts( {data} ) {\r\n\r\n   \r\n   \r\n  return (\r\n    <div className=\"facts\">\r\n      <img src={milkbox} className=\"Milk\" alt=\"milkboxs\" />\r\n    {data &&<button className=\"download-btn\" onClick = {() => window.open(data.pdf_url)}> Download Full Report</button>}\r\n    { data&& \r\n      <div className=\"cards\">\r\n        <div className=\"section1\">\r\n          <div className=\"f1\">\r\n    \r\n            <h1>pH</h1>\r\n            \r\n            <p>{data.ph}</p>\r\n          </div>\r\n          <div className=\"f2\">\r\n            <h1>Fat </h1>\r\n            <p>{data.fat} mg</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"section2\">\r\n          <div className=\"f3\">\r\n            <h1>SNF</h1>\r\n            <p>{data.snf} %</p>\r\n          </div>\r\n          <div className=\"f4\">\r\n            <h1>MBRT</h1>\r\n            <p>{data.mbrt} mins</p>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":86,"column":110,"nodeType":"198","messageId":"199","endLine":86,"endColumn":115},{"ruleId":"192","replacedBy":"200"},{"ruleId":"194","replacedBy":"201"},{"ruleId":"196","severity":1,"message":"202","line":95,"column":12,"nodeType":"198","messageId":"199","endLine":95,"endColumn":20},{"ruleId":"196","severity":1,"message":"203","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"204","line":4,"column":19,"nodeType":"198","messageId":"199","endLine":4,"endColumn":25},{"ruleId":"196","severity":1,"message":"205","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":14},{"ruleId":"196","severity":1,"message":"206","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"207","line":2,"column":22,"nodeType":"198","messageId":"199","endLine":2,"endColumn":29},{"ruleId":"196","severity":1,"message":"208","line":1,"column":19,"nodeType":"198","messageId":"199","endLine":1,"endColumn":28},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'boxes' is assigned a value but never used.","Identifier","unusedVar",["209"],["210"],"'crate_id' is assigned a value but never used.","'location' is defined but never used.","'search' is defined but never used.","'moment' is defined but never used.","'useState' is defined but never used.","'subDays' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]