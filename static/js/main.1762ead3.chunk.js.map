{"version":3,"sources":["components/UI/Notifier.js","App.js","index.js","constants/index.js","helpers/utils.js","reducers/notifier.js","components/Loading.js","reducers/admin.reducers.js","reducers/driver.reducers.js","store.js","components/404.js"],"names":["displayed","Notifier","dispatch","useDispatch","notifications","useSelector","store","notifier","useSnackbar","enqueueSnackbar","closeSnackbar","React","useEffect","forEach","id","key","message","options","dismissed","includes","onClose","event","reason","myKey","onExited","removeSnackbar","filter","Admin","lazy","Driver","Trace","Visual","TraceMilkBatch","TraceMilkPouch","Customer","Chaach","Dahi","Newtrace","Tracemilk","App","theme","createMuiTheme","palette","secondary","light","main","dark","contrastText","background","default","paper","ThemeProvider","CssBaseline","base","fallback","Loading","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","UPDATE_DRIVER","UPDATE_ORDERS","UPDATE_ADMIN","UPDATE_ORDERS_DATA","UPDATE_ADMIN_DATA","UPDATE_ORDER_CRATE_DATA","ADD_PRODUCTS","ADD_ORDER_PRODUCTS","ADD_ORDER_BOX","UPDATE_DELIVERY_REPORT","API_URL","getCookies","cookies","cookie","split","data","values","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","setRequestAuthHeader","accessToken","axios","defaults","headers","common","initRequestAuthHeader","userAccessToken","request","config","postRequest","url","method","getRequest","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","handleApiErrorMessage","err","console","error","response","Error","status","statusText","ENQUEUE_SNACKBAR","CLOSE_SNACKBAR","REMOVE_SNACKBAR","enqueueAPIErrorSnackbar","Math","random","notification","variant","autoHideDuration","defaultState","state","action","map","dismissAll","className","initialState","admin","products","Map","orderBoxData","loadingOrderData","processProducts","item","image","thumbnail","set","processOrderProducts","orderProducts","orderId","productId","has","get","push","processOrderBoxData","orderBox","processLocations","locations","hubs","order","subarea","area","region","hubAreas","subareas","areaData","driver","createLogger","createStore","combineReducers","setDriver","payload","window","localStorage","setItem","JSON","stringify","orders","setAdmin","applyMiddleware","NotFound","props","style","maxHeight","maxWidth","src","alt"],"mappings":"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","file":"static/js/main.1762ead3.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { removeSnackbar } from '../../reducers/notifier';\n\nlet displayed = [];\n\nconst Notifier = () => {\n  const dispatch = useDispatch();\n  const notifications = useSelector(store => store.notifier.notifications || []);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const storeDisplayed = (id) => {\n    displayed = [...displayed, id];\n  };\n\n  const removeDisplayed = (id) => {\n    displayed = [...displayed.filter(key => id !== key)];\n  };\n\n  React.useEffect(() => {\n    notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n      if (dismissed) {\n        // dismiss snackbar using notistack\n        closeSnackbar(key);\n        return;\n      }\n\n      // do nothing if snackbar is already displayed\n      if (displayed.includes(key)) return;\n\n      // display snackbar using notistack\n      enqueueSnackbar(message, {\n        key,\n        ...options,\n        onClose: (event, reason, myKey) => {\n          if (options.onClose) {\n            options.onClose(event, reason, myKey);\n          }\n        },\n        onExited: (event, myKey) => {\n          // remove this snackbar from redux store\n          dispatch(removeSnackbar(myKey));\n          removeDisplayed(myKey);\n        },\n      });\n\n      // keep track of snackbars that we've displayed\n      storeDisplayed(key);\n    });\n  }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n  return null;\n};\n\nexport default Notifier;\n","import React, { Suspense, lazy } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Notifier from \"./components/UI/Notifier\";\n\nimport \"./css/style.css\";\nimport \"./App.css\";\nimport NotFound from './components/404';\nimport Loading from \"./components/Loading\";\nconst Admin = lazy(() => import(/* webpackChunkName: \"Admin\" */ \"./containers/Admin.jsx\"));\nconst Driver = lazy(() => import(/* webpackChunkName: \"Driver\" */ \"./containers/Driver.jsx\"));\nconst Trace = lazy(() => import(/* webpackChunkName: \"Trace\" */ \"./trace/Trace.js\"));\n// const TraceProduce = lazy(() => import(/* webpackChunkName: \"TraceProduce\" */ \"./containers/TraceOrder\"));\nconst Visual = lazy(() => import(/* webpackChunkName: \"Visual\" */ \"./containers/Visual\"));\nconst TraceMilkBatch = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./trace/TraceMilkBatch.js\"))\nconst TraceMilkPouch = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./components/TracePouchMilk\"))\nconst Customer = lazy(() => import(/* webpackChunkName: \"Customer\" */ \"./containers/Customer\"))\nconst Chaach = lazy(() => import(/* webpackChunckName: \"Chaach\" */ \"./chaach/containers/chaach\"));\nconst Dahi = lazy(() => import(/* webpackChunckName: \"Dahi\" */ \"./dahi/containers/dahi\"))\nconst Newtrace = lazy(() => import(/* webpackChunkName: \"NewTrace\" */ \"./new_trace/App\"));\nconst Tracemilk = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./milkpouches/containers/pouches\"));\n// const Trace = lazy(() => import(\"./components/Traceability.js\"));\n\nfunction App() {\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = createMuiTheme({\n    palette: {\n      // type: 'light',\n      // primary: colors.green[400],\n      secondary: {\n        light: \"#ff4081\",\n        main: \"#f50057\",\n        dark: \"#c51162\",\n        contrastText: \"#fff\",\n      },\n      background: {\n        default: \"#fff\",\n        paper: \"#fff\",\n      },\n    },\n  });\n\n  return (\n    <>\n      <div id=\"app\">\n        <ThemeProvider theme={theme}>\n          <Notifier />\n          <CssBaseline />\n          <Router base={\"delivery-react-app\"}>\n            <main>\n              <Suspense fallback={<Loading />}>\n                <Switch>\n                  {/* <Route path=\"/trace/produce\" exact component={TraceProduce} /> */}\n                  <Route path=\"/trace\" exact component={Trace} />\n                  <Route path=\"/trace/:pouch\" component={TraceMilkPouch} />\n                  <Route path=\"/visual\" component={Visual} />\n                  <Route path =\"/newtrace\" exact component = {Newtrace} />\n                  <Route path = \"/chaach/:pouch\" exact component = {Chaach} />\n                  <Route path = \"/dahi/:pouch\" exact component = {Dahi} />\n                  <Route path = \"/traces/:pouch\" exact component={TraceMilkPouch} />  \n                  <Route path=\"/trace-milk/:pouch\" exact component={Tracemilk} />\n                  <Route path=\"/trace-batch-milk\" exact component={TraceMilkBatch} />\n                  <Route path=\"/customer\" component={Customer} />\n                  <Route path=\"/admin\" component={Admin} />\n                  <Route path=\"/\" exact component={Driver} />\n                  <Route path=\"/\" component={Driver} />\n            \n                </Switch>\n              </Suspense>\n            </main>\n          </Router>\n        </ThemeProvider>\n      </div>\n      <div id=\"printable\">\n        {/*  for print utility */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {SnackbarProvider} from 'notistack';\n//import reportWebVitals from './reportWebVitals';\n\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <SnackbarProvider>\n      <App />\n\n      </SnackbarProvider>\n   \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// constants for driver\nexport const UPDATE_DRIVER = 'UPDATE_DRIVER';\nexport const UPDATE_ORDERS = 'UPDATE_ORDERS';\n\n// admin constants\nexport const UPDATE_ADMIN = 'UPDATE_ADMIN';\nexport const UPDATE_ORDERS_DATA = 'UPDATE_ORDERS_DATA';\nexport const UPDATE_ADMIN_DATA = 'UPDATE_ADMIN_DATA';\nexport const UPDATE_ORDER_CRATE_DATA = 'UPDATE_ORDER_CRATE_DATA';\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\nexport const ADD_ORDER_PRODUCTS = 'ADD_ORDER_PRODUCTS';\nexport const ADD_ORDER_BOX = 'ADD_ORDER_BOX';\nexport const UPDATE_DELIVERY_REPORT = 'UPDATE_DELIVERY_REPORT';","import axios from \"axios\";\n\nexport const BASE_API_URL = 'https://api.deliver.go4life.in';\n// export const BASE_API_URL = 'http://localhost:5000';\nexport const API_URL = `${BASE_API_URL}/api`;\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\n// export const API_URL = 'http://localhost:5000/api';\n// export const API_URL = 'http://192.168.40.14:5000/api';\n// export const API_URL = 'http://192.168.0.103:5000/api';\n\n// export const API_URL = '/api';\n\nexport function getCookies() {\n  var x = document.cookie;\n  let cookies = x.split(\";\");\n  let data = {};\n  cookies.forEach((cookie) => {\n    let values = cookie.split(\"=\");\n    data[values[0]] = values[1];\n  });\n  return data;\n}\n\nexport function setCookie(name, value, days) {\n  var expires = \"\";\n  if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nfunction setRequestAuthHeader(key = \"x-admin-token\", accessToken) {\n  // alert(key + \" \" + accessToken)\n  axios.defaults.headers.common[key] = accessToken;\n}\n\nexport const userAccessToken = getCookies()[\"x-admin-token\"];\n\nexport function initRequestAuthHeader(key = \"x-admin-token\") {\n  let userAccessToken = getCookies()[key];\n  if(userAccessToken) setRequestAuthHeader(key, userAccessToken);\n}\nif(getCookies()[\"x-admin-token\"]) {\n  initRequestAuthHeader(\"x-admin-token\");\n} else {\n  initRequestAuthHeader(\"x-driver-token\");\n}\n\nexport function request(config) {\n  return axios.request(config);\n}\n\nexport function onlyMilkAndPaneer(products) {\n  const categories = Object.entries(products);\n  categories.forEach(([category, value]) => {\n    value.forEach(product => {\n      const name = product.product;\n      if(name.toLowerCase().includes(\"milk\") === false) return false;\n      if(name.toLowerCase().includes(\"paneer\") ===false) return false;\n    });\n  });\n  return true;\n}\n\n\nexport function hasOnlyDairyProducts(products) {\n  if('Dairy' in products && Object.entries(products).length === 1) {\n    return true;\n  }\n  return false;\n}\n\nexport function hasNoDairy(products) {\n  if(!('Dairy' in products)) {\n    return true;\n  }\n  return false;\n}\n\nexport function postRequest(url, data) {\n  return axios.request({\n    url: url,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n}\n\nexport function getRequest(url) {\n  return axios.request({\n    url: url,\n    method: 'get'\n  });\n}\n\nexport function dataURItoBlob(dataURI) {\n  // convert base64 to raw binary data held in a string\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n  var byteString = atob(dataURI.split(',')[1]);\n\n  // separate out the mime component\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  var ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n  for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ab], {type: mimeString});\n}\n\nexport function handleApiErrorMessage(err) {\n  console.error(\"API ERROR DATA\", err.response)\n  if(!err) {\n    throw new Error(\"No error object provided\");\n  } else if(err.response && err.response.data) {\n    return err.response.data;\n  } else if(err.response && err.response.status) {\n    return err.response.status + ' ' + err.response.statusText ;\n  } else if(err.message) {\n    return err.message;\n  }\n  console.error(err);\n  return \"Some error occured.\";\n}","// https://codesandbox.io/s/github/iamhosseindhv/notistack/tree/master/examples/redux-example?file=/redux/actions.js:0-674\nimport {handleApiErrorMessage} from '../helpers/utils';\n// import Button from '@material-ui/core/Button';\n\n// constants\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\n\n// Actions\nexport const enqueueSnackbar = (notification) => {\n  const key = notification.options && notification.options.key;\n\n  return {\n    type: ENQUEUE_SNACKBAR,\n    notification: {\n      ...notification,\n      key: key || new Date().getTime() + Math.random(),\n    },\n  };\n};\n\nexport const enqueueAPIErrorSnackbar = (error) => {\n  const message = handleApiErrorMessage(error);\n  const key = new Date().getTime() + Math.random();\n  return {\n    type: ENQUEUE_SNACKBAR,\n    notification: {\n      message,\n      key,\n      options: {\n        variant: 'error',\n        autoHideDuration: 3*1000,\n        key,\n        // action: key => (\n        //   <Button onClick={() => closeSnackbar(key)}>Dismiss</Button>\n        // ),\n      },\n    },\n  };\n};\n\nexport const enqueueAPISuccessSnackbar = (message = \"Successfully Updated\") => {\n  const key = new Date().getTime() + Math.random();\n  return {\n    type: ENQUEUE_SNACKBAR,\n    notification: {\n      message,\n      key,\n      options: {\n        variant: 'success',\n        autoHideDuration: 3*1000,\n        key,\n        // action: key => (\n        //   <Button onClick={() => closeSnackbar(key)}>Dismiss</Button>\n        // ),\n      },\n    },\n  };\n};\n\nexport const closeSnackbar = key => ({\n  type: CLOSE_SNACKBAR,\n  dismissAll: !key, // dismiss all if no key has been defined\n  key,\n});\n\nexport const removeSnackbar = key => ({\n  type: REMOVE_SNACKBAR,\n  key,\n});\n\n// reducer\nconst defaultState = {\n  notifications: [],\n};\n\nexport const notifier = (state = defaultState, action) => {\n  switch (action.type) {\n    case ENQUEUE_SNACKBAR:\n      return {\n        ...state,\n        notifications: [\n          ...state.notifications,\n          {\n            key: action.key,\n            ...action.notification,\n          },\n        ],\n      };\n\n    case CLOSE_SNACKBAR:\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => (\n          (action.dismissAll || notification.key === action.key)\n            ? { ...notification, dismissed: true }\n            : { ...notification }\n        )),\n      };\n\n    case REMOVE_SNACKBAR:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          notification => notification.key !== action.key,\n        ),\n      };\n\n    default:\n      return state;\n  }\n};","import { CircularProgress } from '@material-ui/core';\nimport React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className=\"flex center middle p-10\">\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Loading;","import { \n  UPDATE_ADMIN, \n  UPDATE_ORDERS_DATA, \n  UPDATE_ADMIN_DATA,\n  ADD_PRODUCTS,\n  ADD_ORDER_PRODUCTS,\n  ADD_ORDER_BOX, UPDATE_DELIVERY_REPORT\n} from '../constants/index';\n\nimport {getCookies} from '../helpers/utils'\n\nlet admin = getCookies()['x-admin-token'];\n\nconst initialState = {\n  admin,\n  products : new Map(),\n  orderBoxData: new Map(),\n  loadingOrderData: true\n}\n\nfunction processProducts(data, products) {\n  data.forEach(item => {\n    const {id, name, thumbnail: image} = item;\n    products.set(id, {\n      id, name, image\n    })\n  })\n}\n\nfunction processOrderProducts(data, orderProducts) {\n  data.forEach(item => {\n    const {orderId, productId} = item;\n    if(orderProducts.has(orderId)) {\n      orderProducts.get(orderId).push(item);\n    } else {\n      orderProducts.set(orderId, [item]);\n    }\n  });\n}\n\nfunction processOrderBoxData(data, orderBox) {\n  data.forEach(item => {\n    const {orderId} = item;\n    orderBox.set(orderId, item);\n  });\n}\n\nfunction processLocations(data) {\n\n  let locations = new Map();\n\n  let hubs = [];\n\n  data.forEach(order => {\n    let { subarea, area, region } = order;\n    if(!hubs.includes(region)) {\n      hubs.push(region)\n    }\n    \n    if(locations.has(region)) {\n      let hubAreas = locations.get(region);\n      if(hubAreas.has(area)) {\n        let subareas = hubAreas.get(area);\n        if(!subareas.includes(subarea)) {\n          subareas.push(subarea);\n        }\n        hubAreas.set(area, subareas);\n        locations.set(region, hubAreas);\n      } else {\n        let areaData = [subarea];\n        hubAreas.set(area, areaData);\n        locations.set(region, hubAreas);\n      }\n    } else {\n      let hubAreas = new Map();\n      hubAreas.set(area, [subarea]);\n      locations.set(region, hubAreas)\n    }\n  });\n\n  return [locations, hubs];\n  \n}\n\nexport const setAdmin = (state = initialState, action = {}) => {\n  switch(action.type) {\n    case UPDATE_ADMIN:\n      let admin = action.payload;\n      window.localStorage.setItem('admin', JSON.stringify(admin));\n      return { ...state, admin}\n\n    case UPDATE_ADMIN_DATA:\n      // let {customers, areas, subareas, categories, hubs, orders} = action.payload;\n      return { \n        ...state,\n        ...action.payload\n      }\n\n    case UPDATE_ORDERS_DATA:\n\n      let orders = action.payload;\n\n      let [locations, hubs] = processLocations(orders);\n      return {\n        ...state,\n        orders,\n        locations,\n        hubs\n      };\n    \n    case ADD_PRODUCTS:\n\n      let products = new Map();\n      processProducts(action.payload, products);\n\n      return {\n        ...state,\n        products\n      }\n      \n    case ADD_ORDER_PRODUCTS:\n      let orderProducts = new Map();\n      processOrderProducts(action.payload, orderProducts);\n\n      return {\n        ...state,\n        orderProducts\n      }\n    \n    case ADD_ORDER_BOX:\n      let orderBoxData = new Map();\n      processOrderBoxData(action.payload, orderBoxData);\n\n      return {\n        ...state,\n        orderBoxData\n      }\n\n    case UPDATE_DELIVERY_REPORT:\n      \n      {\n        let orders = action.payload;\n\n        let [locations, hubs] = processLocations(orders);\n        return {\n          ...state,\n          orders,\n          locations,\n          hubs\n        };\n      }\n      \n\n    default:\n      return state;\n  }\n}","import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\n\n\nimport {getCookies} from '../helpers/utils'\n\nlet driver = getCookies()['x-driver-token'];\nconst initialState = {\n  driver\n}\n\nfunction hasOnlyDairyProducts(products) {\n  if('Dairy' in products && Object.entries(products).length === 1) {\n    return true;\n  }\n  return false;\n}\n\nfunction hasNoDairy(products) {\n  if(!('Dairy' in products)) {\n    return true;\n  }\n  return false;\n}\n\nexport const setDriver = (state = initialState, action = {}) => {\n  switch(action.type) {\n    case UPDATE_DRIVER:\n      let driver = action.payload;\n      window.localStorage.setItem('driver', JSON.stringify(driver));\n      return { ...state, driver}\n\n    case UPDATE_ORDERS:\n\n      let orders = action.payload;\n      let locations = new Map();\n\n      let hubs = [];\n\n      orders.forEach(order => {\n        let { subarea, area, region } = order;\n        if(!hubs.includes(region)) {\n          hubs.push(region)\n        }\n        \n        if(locations.has(region)) {\n          let hubAreas = locations.get(region);\n          if(hubAreas.has(area)) {\n            let subareas = hubAreas.get(area);\n            if(!subareas.includes(subarea)) {\n              subareas.push(subarea);\n            }\n            hubAreas.set(area, subareas);\n            locations.set(region, hubAreas);\n          } else {\n            let areaData = [subarea];\n            hubAreas.set(area, areaData);\n            locations.set(region, hubAreas);\n          }\n        } else {\n          let hubAreas = new Map();\n          hubAreas.set(area, [subarea]);\n          locations.set(region, hubAreas)\n        }\n      });\n      \n      return {\n        ...state,\n        orders,\n        locations,\n        hubs\n      };\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport {createLogger} from 'redux-logger';\n\nimport { setAdmin } from \"./reducers/admin.reducers\";\nimport { notifier } from \"./reducers/notifier\";\nimport { setDriver } from \"./reducers/driver.reducers\";\n\nconst logger = createLogger();\n\nconst middlewares = []\n\nif(process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger)\n}\n\nconst store = createStore(\n  combineReducers({\n    setDriver,\n    setAdmin,\n    notifier,\n  }),\n  applyMiddleware(...middlewares)\n);\n\nexport default store;","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nfunction NotFound(props) {\n  return (\n    <div className=\"p-10\">\n      <Typography variant=\"h2\">\n        What the 404?\n      </Typography>\n      <div className=\"flex center\" style={{maxHeight: 400, maxWidth: '100%'}}>\n        <img\n          style={{maxHeight: 400, maxWidth: '100%'}}\n          src=\"https://cdn.dribbble.com/users/21546/screenshots/4815369/yelp_emptystates_business.gif\" \n          alt=\"not-found\" \n        />\n      </div>\n    </div>\n  )\n}\nexport default NotFound;"],"sourceRoot":""}