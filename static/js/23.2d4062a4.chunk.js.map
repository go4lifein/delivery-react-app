{"version":3,"sources":["helpers/math.js","components/LeftRightSwitch.js","components/WebCam.js","components/OrderDeliveryForm.js"],"names":["max","a","b","LeftRightSwitch","props","left","onLeft","right","onRight","center","leftIcon","rightIcon","disabledLeft","disabledRight","style","className","size","justifyContent","onClick","disabled","border","flexGrow","paddingRight","paddingLeft","videoConstraints","facingMode","WebcamCapture","onCapture","image","React","useState","takingPhoto","setTakingPhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","background","position","audio","width","height","ref","screenshotFormat","bottom","display","IconButton","color","src","alt","tutorialSteps","label","Transition","forwardRef","Slide","direction","Review","state","delivery_type","delivery_img","complete_delivery","milk_packets","small_boxes","large_boxes","gable_tops","history","boxes","match","driver","params","order_id","parseInt","orderId","loading","setLoading","Card","variant","Typography","mapDeliveryType","Divider","mapCompleteDelivery","Button","photoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","dataURItoBlob","formData","FormData","append","id","submitOrderDelivery","then","res","push","catch","err","alert","message","startIcon","CircularProgress","OrderDeliveryForm","handleNext","setState","activeStep","handleBack","DeliveryType","FormControl","component","RadioGroup","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","DeliveryPhoto","WebCam","CompleteDelivery","BoxNumbers","Grid","container","item","xs","Box","crates","this","orders","customers","window","location","order","find","customer","get","customer_id","console","log","maxSteps","Dialog","fullScreen","open","TransitionComponent","AppBar","Toolbar","edge","goBack","margin","padding","MobileStepper","borderTop","steps","nextButton","backButton","Component","withRouter","connect","setDriver"],"mappings":"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","file":"static/js/23.2d4062a4.chunk.js","sourcesContent":["export function min(a, b) {\r\n  return a < b ? a : b;\r\n}\r\n\r\nexport function max(a, b) {\r\n  return a < b ? b : a;\r\n}\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\n\r\nfunction LeftRightSwitch(props) {\r\n  const {\r\n    left, onLeft, right, onRight, center, \r\n    leftIcon, rightIcon, \r\n    disabledLeft = false, disabledRight = false, \r\n    style={}, className = \"\",\r\n    size=\"large\"\r\n  } = props;\r\n  return (\r\n    <div \r\n      className={`flex p-10 middle ${className}`}\r\n      style={{\r\n        justifyContent: 'space-around',\r\n        ...style\r\n      }}\r\n    >\r\n      <div>\r\n        {\r\n          left ?\r\n          left :\r\n          <IconButton \r\n            size={size}\r\n            onClick={onLeft}\r\n            disabled={disabledLeft}\r\n            style={{border: '1px solid rgba(0, 0, 0, 0.23)'}}\r\n          >\r\n            {leftIcon ? leftIcon : <ArrowLeft />}\r\n          </IconButton>\r\n        }\r\n\r\n      </div>\r\n      <div className=\"flex center middle\" style={{flexGrow: 0.5, paddingRight: 10, paddingLeft: 10}}>\r\n        {center}\r\n      </div>\r\n      <div>\r\n        {\r\n          right ?\r\n          right :\r\n          <IconButton \r\n            size={size}\r\n            onClick={onRight}\r\n            disabled={disabledRight}\r\n            style={{border: '1px solid rgba(0, 0, 0, 0.23)'}} \r\n          >\r\n            {rightIcon ? rightIcon : <ArrowRight />}\r\n          </IconButton>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftRightSwitch;","import React from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CameraIcon from '@material-ui/icons/Camera';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nconst videoConstraints = {\r\n  // width: 1280,\r\n  // height: 720,\r\n  // facingMode: \"user\",\r\n  facingMode: \"environment\"\r\n};\r\n \r\nconst WebcamCapture = ({onCapture, image}) => {\r\n  const [takingPhoto, setTakingPhoto] = React.useState(image ? false : true);\r\n  const webcamRef = React.useRef(null);\r\n \r\n  const capture = React.useCallback(\r\n    () => {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      onCapture(imageSrc);\r\n      setTakingPhoto(false);\r\n    },\r\n    [webcamRef, onCapture]\r\n  );\r\n \r\n  return (\r\n    <div style={{background: '#000'}}>\r\n      {takingPhoto ?\r\n        <div style={{position: 'relative'}}>\r\n          <Webcam\r\n            audio={false}\r\n            width={282}\r\n            height={500}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            videoConstraints={videoConstraints}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={capture}>\r\n              <CameraIcon style={{color: 'white'}} />\r\n            </IconButton>\r\n          </div>\r\n        </div>:\r\n        <div style={{\r\n          position: 'relative'\r\n        }}>\r\n          <img \r\n            src={image} \r\n            alt=\"order_photo\"\r\n            width={282}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={() => setTakingPhoto(true)}>\r\n              <ReplayIcon style={{color: 'white'}} /> \r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;","import React, { useState } from 'react';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LeftRightSwitch from './LeftRightSwitch';\r\nimport PlusOne from '@material-ui/icons/Add';\r\nimport RemoveCircle from '@material-ui/icons/Remove';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport WebCam from \"./WebCam\";\r\nimport {submitOrderDelivery} from '../api/driver';\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\nimport {max} from '../helpers/math';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी'\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n  },\r\n  {\r\n    label: 'Boxes, Milk - कितने डब्बे डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें'\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\n\r\nfunction Review ({state, props}) {\r\n  const {delivery_type, delivery_img, complete_delivery, milk_packets, small_boxes, large_boxes, gable_tops, boxes} = state;\r\n\r\n  const {history, match, driver} = props;\r\n  const {params} = match;\r\n  let order_id = parseInt(params.orderId);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let disabled = true;\r\n  if(delivery_type && delivery_img && complete_delivery && (milk_packets || small_boxes || large_boxes || gable_tops)) {\r\n    disabled = false;\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    const photoBlob = dataURItoBlob(delivery_img);\r\n    const formData = new FormData();\r\n    formData.append(\"delivery_img\", photoBlob);\r\n    formData.append(\"order_id\", order_id);\r\n    formData.append(\"driver_id\", driver.id);\r\n    formData.append(\"delivery_type\", delivery_type);\r\n    formData.append(\"complete_delivery\", complete_delivery);\r\n    formData.append(\"small_boxes\", small_boxes);\r\n    formData.append(\"large_boxes\", large_boxes);\r\n    formData.append(\"gable_tops\", gable_tops);\r\n    formData.append(\"milk_packets\", milk_packets);\r\n    submitOrderDelivery(formData)\r\n    .then(res => {\r\n      history.push('/');\r\n      setLoading(false);\r\n    })\r\n    .catch(err => {\r\n      setLoading(false);\r\n      alert(err.message);\r\n    });\r\n\r\n  }\r\n\r\n  function mapDeliveryType(delivery_type) {\r\n    switch (delivery_type) {\r\n      \r\n      case \"in_hand\":\r\n        return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n      case \"doorstep\":\r\n        return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n      case \"society_guard\":\r\n        return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n      case \"tower_guard\":\r\n        return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n      case \"order_cancelled\":\r\n        return \"Order Cancelled - आर्डर कैंसिल\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n    }\r\n  }\r\n  function mapCompleteDelivery(complete_delivery) {\r\n    switch (complete_delivery) {\r\n      \r\n      case \"yes\":\r\n        return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n      case \"no\":\r\n        return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pv-10\">\r\n      <Card variant=\"outlined\">\r\n        \r\n        <div className=\"p-10\">\r\n            <Typography variant=\"body\">Select Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n            <Typography variant=\"h6\">\r\n              {mapDeliveryType(delivery_type)}\r\n            </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n          <Typography variant=\"body\">Take Photo - आर्डर की फोटो लीजिये</Typography>\r\n          {\r\n            delivery_img ?\r\n            <div>\r\n              <img alt=\"order\" src={delivery_img} width={300} /> \r\n            </div> :\r\n            <Typography variant=\"h6\"><span style={{color: 'red'}}>Please take picture</span></Typography>\r\n          }\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</Typography>\r\n          <Typography variant=\"h6\">\r\n            {mapCompleteDelivery(complete_delivery)}\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Small Boxes - कितने छोटे डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{small_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Large Boxes - कितने बड़े डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{large_boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Gable Top - कितने दूध के डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{gable_tops}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{milk_packets}</Typography>\r\n        </div>\r\n      </Card>\r\n      <div className=\"pv-10\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onSubmit}\r\n          disabled={loading || disabled}\r\n          startIcon={loading ? <CircularProgress size={12} /> : null}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      delivery_type: null,\r\n      delivery_img: null,\r\n      complete_delivery: null,\r\n      milk_packets: 0,\r\n      small_boxes: 0,\r\n      large_boxes: 0,\r\n      gable_tops: 0,\r\n      crates: 0,\r\n    }\r\n  }\r\n  handleNext = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n  handleBack = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n  DeliveryType = () => {\r\n    const onChange = (event) => {\r\n      this.setState({\r\n        delivery_type: event.target.value\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\" value={this.state.delivery_type} onChange={onChange}>\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n  DeliveryPhoto = () => {\r\n    const onCapture = (image) => {\r\n      // console.log(image)\r\n      this.setState({\r\n        delivery_img: image\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <div className=\"flex center\" >\r\n          <WebCam \r\n            onCapture={onCapture} \r\n            image={this.state.delivery_img}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  CompleteDelivery = () => {\r\n    \r\n    const onChange = (event) => {\r\n      this.setState({\r\n        complete_delivery: event.target.value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\" value={this.state.complete_delivery} onChange={onChange}>\r\n            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n            <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n  BoxNumbers = () => {\r\n    const {small_boxes, large_boxes, gable_tops, milk_packets} = this.state;\r\n\r\n    return (\r\n      <div className=\"pv-10\">\r\n        \r\n        <Grid container>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Small Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {small_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  small_boxes: small_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  small_boxes: max(0, small_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Large Boxes</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {large_boxes}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  large_boxes: large_boxes+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  large_boxes: max(0, large_boxes-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          \r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Gable Top</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {gable_tops}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  gable_tops: gable_tops+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  gable_tops: max(0, gable_tops-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Box className=\"flex middle space-bw\">\r\n            <Typography variant=\"h6\">Milk Packets</Typography>\r\n            <LeftRightSwitch\r\n              size=\"small\" \r\n              style={{flexGrow: 0.2}}\r\n              center={\r\n                <Typography variant=\"h6\">\r\n                  {milk_packets}\r\n                </Typography>\r\n              } \r\n              leftIcon={<RemoveCircle />} \r\n              rightIcon={<PlusOne />} \r\n              onRight={() => {\r\n                this.setState({\r\n                  milk_packets: milk_packets+1\r\n                })\r\n              }} \r\n              onLeft={() => {\r\n                this.setState({\r\n                  milk_packets: max(0, milk_packets-1)\r\n                })\r\n              }} \r\n            />\r\n            </Box>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n\r\n        {/* <LeftRightSwitch\r\n          center={}\r\n          leftIcon={<RemoveCircle />} \r\n          rightIcon={<PlusOne />} \r\n        /> */}\r\n        {/* <Slider\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={12}\r\n          value={this.state.boxes}\r\n          onChangeCommitted={onChange}\r\n        /> */}\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    const {history, match, orders, customers} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n    if(!orders) {\r\n      window.location = '/';\r\n    }\r\n    let order = orders.find((item) => item.order_id === order_id);\r\n    let customer = customers.get(order.customer_id);\r\n\r\n    if(!customer) {\r\n      console.log(order);\r\n      window.location = '/';\r\n    }\r\n\r\n    const {activeStep} = this.state;\r\n    const maxSteps = tutorialSteps.length;\r\n    // console.log(this.state);\r\n    return (\r\n      <div >\r\n        <Dialog \r\n          fullScreen \r\n          open\r\n          TransitionComponent={Transition}\r\n        >\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                history.goBack();\r\n              }} \r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              {customer.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{margin: '60px 10px 20px 10px', padding: '10px 10px'}}>\r\n          <Typography variant=\"h4\" >\r\n            {tutorialSteps[activeStep].label}\r\n          </Typography>\r\n          <Divider />\r\n          {\r\n            activeStep === 0 &&\r\n            <this.DeliveryType />\r\n          }\r\n          \r\n          {\r\n            activeStep === 1 &&\r\n            <this.DeliveryPhoto />\r\n          }\r\n          {\r\n            activeStep === 2 &&\r\n            <this.CompleteDelivery />\r\n          }\r\n          {\r\n            activeStep === 3 &&\r\n            <this.BoxNumbers />\r\n          }\r\n          {\r\n            activeStep === 4 &&\r\n            <Review \r\n              state={this.state}\r\n              props={this.props}\r\n            />\r\n          }\r\n        </div>\r\n        <MobileStepper\r\n          style={{\r\n            borderTop: '1px solid grey'\r\n          }}\r\n          steps={maxSteps}\r\n          position=\"bottom\"\r\n          variant=\"progress\"\r\n          activeStep={activeStep}\r\n          color=\"default\"\r\n          nextButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n              <KeyboardArrowLeft />\r\n              Previous\r\n            </Button>\r\n          }\r\n        />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n"],"sourceRoot":""}