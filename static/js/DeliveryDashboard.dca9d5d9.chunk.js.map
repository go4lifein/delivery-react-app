{"version":3,"sources":["api/v2/admin.js","helpers/exportCSV.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","constants/config.js","../node_modules/@material-ui/icons/Replay.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","components/OrderTableDelivery.js","components/DeliveryInfo.js","components/DeliveryPrintSheet.js","components/DeliveryDashboard.jsx"],"names":["getAllOrders","fromDate","moment","format","endDate","url","API_URL","getRequest","getDeliveryBoysData","assignDrivers","data","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","addDriverData","axios","put","headers","getAllFarmers","downloadCSV","array","filename","link","document","createElement","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","String","replace","Grid","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","boxSizing","flexWrap","width","margin","minWidth","justifyContent","breakpoint","styles","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","d","Switch","_props$color","_props$edge","edge","_props$size","icon","thumb","edgeStart","edgeEnd","SwitchBase","type","checkedIcon","switchBase","input","track","height","overflow","position","flexShrink","zIndex","colorAdjust","top","left","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","POUCH_MILK_PRODUCTS","BOX_MILK_PRODUCTS","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","BackdropProps","children","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","mouseDownTarget","Modal","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","onMouseUp","event","target","currentTarget","current","onMouseDown","elevation","paper","paperFullScreen","paperFullWidth","scrollPaper","scrollBody","overflowY","overflowX","textAlign","content","outline","paperScrollPaper","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","max","values","_defineProperty","down","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","sortIcon","OrderDataTable","onRowSelect","deliveryBoys","orderBoxData","columns","selector","sortable","cell","orderDate","orderId","boxData","get","parseInt","crateId","delivery_date","style","idx","driverId","driver","striped","noHeader","dense","highlightOnHover","pointerOnHover","pagination","paginationPerPage","onRowClicked","e","memo","Transition","forwardRef","Slide","OrderDeliveryForm","Review","customer","console","log","driver_id","delivery_type","proof_img","complete_delivery","small_boxes","large_boxes","gable_tops","milk_packets","Card","variant","Divider","mapCompleteDelivery","mapDeliveryType","alt","src","state","this","AppBar","Toolbar","IconButton","onClick","setSelectedCustomer","aria-label","connect","setAdmin","DeliveryPrintSheet","groupData","orderProducts","orders","deliveryBoysOrders","Map","index","driverName","orderProductsData","pouchMilkQty","gableTopQty","productId","qty","includes","alert","largeBox","mediumBox","packet","set","Array","from","entries","id","map","sort","a","b","location_id","totalPouchMilkQty","totalGableTopQty","totalMediumBox","totalLargeBox","totalPackets","order","pageBreakBefore","flex","fontSize","region","area","subarea","phone","address","toString","DeliveryDashboard","update","setState","loading","startDate","onUpdateDeliveryReport","onUpdateAdminData","then","res","deliveryBoysData","person","onAddOrderProducts","products","onAddProducts","onAddOrderBox","lastUpdated","Date","error","message","exportData","filterData","customerID","exportCSV","toDateString","onDateChange","onOrderSelect","selectedOrder","onPrintDeliverySheets","window","print","selectedArea","selectedSubarea","selectedHub","selectedDriver","showWithoutDairy","hiddenAddress","selectedRow","ReactDOM","render","getElementById","onlyDelivered","filter","indexOf","toLowerCase","locations","hubs","localeCompare","areas","subareas","hub","hubName","areaName","TextField","toTimeString","substr","Button","startIcon","Loading","FormControl","InputLabel","Select","labelId","MenuItem","Autocomplete","options","multiple","renderInput","params","location","reload","DeliveryInfo","dispatch","updateDeliveryReport","updateAdminData","addProducts","addOrderProducts","addOrderBox"],"mappings":"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","file":"static/js/DeliveryDashboard.dca9d5d9.chunk.js","sourcesContent":["import {API_URL, getRequest, postRequest} from '../../helpers/utils';\r\nimport moment from 'moment-timezone';\r\nimport axios from 'axios';\r\n\r\nexport function getAllOrders(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/v2/order/assignDrivers`;\r\n  return postRequest(url, data);\r\n}\r\n\r\nexport function getOrderedProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderBoxData(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryReport(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function addDriverData(data) {\r\n  let url = `${API_URL}/delivery/addDeliveryPerson`;\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\nexport function getAllFarmers(){\r\n  let url = `${API_URL}/farmers/getAllFarmers`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\n","function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\nexport default downloadCSV;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","export const POUCH_MILK_PRODUCTS =  [1, 2, 3, 23];\r\nexport const BOX_MILK_PRODUCTS =    [4, 811, 877];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"\n}), 'Replay');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import React from 'react';\r\nimport DataTable from \"react-data-table-component\";\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport moment from 'moment-timezone'\r\n\r\nconst sortIcon = <ArrowDownward />;\r\n\r\nfunction OrderDataTable(props) {\r\n  const {data, onRowSelect, deliveryBoys, orderBoxData} = props;\r\n\r\n  const columns = [\r\n    // {\r\n    //   name: 'Crate',\r\n    //   selector: 'crate_id',\r\n    //   sortable: true,\r\n    //   width: '70px'\r\n    // },\r\n    {\r\n      name: 'Order Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '130px'\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'orderDate',\r\n      sortable: true,\r\n      width: '120px',\r\n      cell: (row) => {\r\n        const {orderDate} = row;\r\n        return moment(orderDate).format('DD-MM-YYYY')\r\n      }\r\n    },\r\n    {\r\n      name: 'Crate Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '120px',\r\n      cell: (row) => {\r\n        const {orderId} = row;\r\n        const boxData = orderBoxData.get(parseInt(orderId));\r\n        return boxData?.crateId;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      selector: 'region',\r\n      width: '100px',\r\n    },\r\n    {\r\n      name: 'Area',\r\n      sortable: true,\r\n      selector: 'area',\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Locality',\r\n      sortable: true,\r\n      selector: 'subarea',\r\n      width: '200px'\r\n    },\r\n    {\r\n      name: 'Delivered on',\r\n      selector: 'delivery_date',\r\n      sortable: true,\r\n      width: '130px',\r\n      cell: (row) => {\r\n        const {delivery_date} = row;\r\n        if(!delivery_date) {\r\n          return <span style={{color: 'red'}}>Not delivered</span>\r\n        }\r\n        return moment(delivery_date).format('DD-MM-YYYY')\r\n      }\r\n    },\r\n    {\r\n      name: 'Driver',\r\n      selector: '_driver',\r\n      cell: (row, idx) => {\r\n        let {driverId} = row;\r\n        if(driverId) {\r\n          let driver = deliveryBoys.get(driverId);\r\n          return driver ? driver.name : '';\r\n        }\r\n        return '';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <DataTable\r\n        striped={true}\r\n        noHeader\r\n        // selectableRows\r\n        // onSelectedRowsChange={onSelectionChange}\r\n        // selectableRowsComponent={Checkbox}\r\n        dense={true}\r\n        sortIcon={sortIcon}\r\n        data={data}\r\n        columns={columns}\r\n        highlightOnHover={true}\r\n        pointerOnHover={true}\r\n        pagination={true}\r\n        paginationPerPage={10}\r\n        onRowClicked={(row, e) => {\r\n          onRowSelect(row);\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(OrderDataTable);","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport moment from 'moment-timezone';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...props\r\n    }\r\n  }\r\n  Review = () => {\r\n    \r\n    let {customer, deliveryBoys} = this.props;\r\n    console.log(customer);\r\n    const {\r\n      driver_id, delivery_date, delivery_type, proof_img, complete_delivery, \r\n      // order_cancel_reason, \r\n      small_boxes, large_boxes, gable_tops, milk_packets} = customer;\r\n\r\n    let driver = deliveryBoys.get(driver_id);\r\n\r\n    function mapDeliveryType(delivery_type) {\r\n      switch (delivery_type) {\r\n        \r\n        case \"in_hand\":\r\n          return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n        case \"doorstep\":\r\n          return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n        case \"society_guard\":\r\n          return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n        case \"tower_guard\":\r\n          return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n        case \"order_cancelled\":\r\n          return \"Order Cancelled - आर्डर कैंसिल\"\r\n        default:\r\n          return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n      }\r\n    }\r\n    function mapCompleteDelivery(complete_delivery) {\r\n      switch (complete_delivery) {\r\n        \r\n        case \"yes\":\r\n          return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n        case \"no\":\r\n          return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n        default:\r\n          return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        \r\n        {\r\n        customer.driver_id ?\r\n        <Card variant=\"outlined\">\r\n          <Grid container>\r\n            <Grid item md={12} lg={6}>\r\n              <div className=\"p-10\">\r\n                <Typography variant=\"body1\">Delivered By</Typography>\r\n                <Typography variant=\"h6\">\r\n                  {driver.name} on {moment(delivery_date).format('DD-MMM-YYYY')}\r\n                </Typography>\r\n              </div>\r\n              <Divider />\r\n              {/* <div className=\"p-10\">\r\n                <Typography variant=\"body1\">Delivered On</Typography>\r\n                <Typography variant=\"h6\">\r\n                  {moment(delivery_date).format('DD-MMM-YYYY')}\r\n                </Typography>\r\n              </div> */}\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n              <Typography variant=\"body1\">Complete Order Delivered? - क्या पूरा आर्डर डिलीवर किया?</Typography>\r\n                <Typography variant=\"h6\">\r\n                  {mapCompleteDelivery(complete_delivery)}\r\n                </Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n                  <Typography variant=\"body1\">Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n                  <Typography variant=\"h6\">\r\n                    {mapDeliveryType(delivery_type)}\r\n                  </Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n              <Typography variant=\"body1\">Small Boxes - कितने डब्बे डिलीवर करे</Typography>\r\n                <Typography variant=\"h6\">{small_boxes}</Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n              <Typography variant=\"body1\">Large Boxes - कितने डब्बे डिलीवर करे</Typography>\r\n                <Typography variant=\"h6\">{large_boxes}</Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n              <Typography variant=\"body1\">Gable Top - कितने दूध के डब्बे डिलीवर करे</Typography>\r\n                <Typography variant=\"h6\">{gable_tops}</Typography>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"p-10\">\r\n              <Typography variant=\"body1\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n                <Typography variant=\"h6\">{milk_packets}</Typography>\r\n              </div>\r\n            </Grid>\r\n            \r\n            <Grid item md={12} lg={6}>\r\n              \r\n              {/* <Divider orientation=\"vertical\" /> */}\r\n              <div className=\"p-10\">\r\n                <Typography variant=\"body1\">Delivery Photo</Typography>\r\n                {\r\n                  proof_img ?\r\n                  <div>\r\n                    <img alt=\"order\" src={proof_img} height={500} /> \r\n                  </div> :\r\n                  <Typography variant=\"h6\"><span style={{color: 'red'}}>No Picture taken</span></Typography>\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Card> :\r\n        \r\n          <Typography variant=\"h3\" style={{color: 'red'}} >\r\n            Not Delivered yet\r\n          </Typography>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    let {customer} = this.props;\r\n    \r\n    return (\r\n      <div >\r\n        {customer && <Dialog \r\n          fullScreen \r\n          open={true}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar\r\n            position=\"fixed\"\r\n            color=\"default\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton \r\n                edge=\"start\" \r\n                color=\"inherit\" \r\n                onClick={() => {\r\n                  this.props.setSelectedCustomer(false);\r\n                }} \r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" >\r\n                {customer.name}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div style={{margin: '60px 10px 20px 10px', padding: '30px 10px'}}>\r\n            <Typography variant=\"h4\" >\r\n              Delivery Information\r\n            </Typography>\r\n            <Divider />\r\n            <this.Review />\r\n          </div>\r\n        </Dialog>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm);\r\n","import React, { Component } from 'react';\r\nimport {POUCH_MILK_PRODUCTS, BOX_MILK_PRODUCTS} from '../constants/config';\r\n\r\nimport '../css/delivery-sheet.css';\r\n\r\nclass DeliveryPrintSheet extends Component {\r\n  groupData = () => {\r\n    \r\n    const { deliveryBoys, orderBoxData, orderProducts, orders } = this.props;\r\n\r\n    let deliveryBoysOrders = new Map();\r\n\r\n    for (let index = 0; index < orders.length; index++) {\r\n      let item = orders[index];\r\n      \r\n      let {driverId} = item;\r\n      let driverName = deliveryBoys.get(driverId)?.name;\r\n      \r\n      const {orderId} = item;\r\n      const boxData = orderBoxData.get(parseInt(orderId));\r\n      const orderProductsData = orderProducts.get(parseInt(orderId));\r\n      \r\n      item.crateId = boxData?.crateId;\r\n      item.driverName = driverName;\r\n\r\n      let pouchMilkQty = 0;\r\n      let gableTopQty = 0;\r\n\r\n      if(orderProductsData) {\r\n        // console.log(orderProductsData)\r\n        orderProductsData.forEach(item => {\r\n          const {productId, qty} = item;\r\n          if(POUCH_MILK_PRODUCTS.includes(productId)) {\r\n            pouchMilkQty += qty;\r\n          } else if(BOX_MILK_PRODUCTS.includes(productId)) {\r\n            gableTopQty += qty;\r\n          }\r\n        })\r\n\r\n      } else {\r\n        // No order product data\r\n        alert(\"Something wrong with data uploaded for order\", orderId);\r\n      }\r\n\r\n      // Handle LargeBox, MediumBox, Packet\r\n      const {largeBox, mediumBox, packet } = boxData || {};\r\n\r\n      item = {\r\n        ...item,\r\n        pouchMilkQty,\r\n        gableTopQty,\r\n        mediumBox,\r\n        largeBox,\r\n        packet \r\n      }\r\n\r\n      if(gableTopQty || pouchMilkQty || largeBox || mediumBox || packet ) {\r\n        // Order went through Amit's system\r\n      } else {\r\n        // Something is wrong\r\n      }\r\n\r\n      if(deliveryBoysOrders.get(driverId)) {\r\n        deliveryBoysOrders.get(driverId).push(item);\r\n      } else {\r\n        deliveryBoysOrders.set(driverId, [item]);\r\n      }\r\n    }\r\n    return deliveryBoysOrders;\r\n  }\r\n  render() {\r\n    let { orders, deliveryBoys, orderBoxData} = this.props;\r\n    let deliveryBoysOrders = Array.from(this.groupData().entries());\r\n\r\n\r\n    return (\r\n      <div id=\"delivery-sheet\">\r\n        \r\n        {/* <div style={{pageBreakBefore:\"always\"}}>\r\n          Dog Page 1\r\n          <img src=\"https://i.ytimg.com/vi/MPV2METPeJU/maxresdefault.jpg\" height=\"400px\" alt=\"dog\" />\r\n        </div>\r\n        <div style={{pageBreakBefore:\"always\"}}>\r\n          Dog Page 2\r\n          <img src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/dog-puppy-on-garden-royalty-free-image-1586966191.jpg\" height=\"400px\" alt=\"dog\" />\r\n        </div>  */}\r\n        \r\n        {\r\n          deliveryBoysOrders.map(([driverId, orders], index) => {\r\n            \r\n            let driver = deliveryBoys.get(driverId);\r\n            orders = orders.sort((a, b) => a.location_id - b.location_id);\r\n\r\n            let totalPouchMilkQty = 0, totalGableTopQty = 0, totalMediumBox = 0, totalLargeBox = 0, totalPackets = 0;\r\n\r\n            orders.forEach(order => {\r\n              let {\r\n                pouchMilkQty,\r\n                gableTopQty,\r\n                mediumBox,\r\n                largeBox,\r\n                packet\r\n              } = order;\r\n              \r\n              totalPouchMilkQty += pouchMilkQty;\r\n              totalGableTopQty += gableTopQty;\r\n              totalMediumBox += mediumBox;\r\n              totalLargeBox += largeBox;\r\n              totalPackets += packet;\r\n            });\r\n\r\n            return (\r\n              <div style={{pageBreakBefore:\"always\"}} key={index.toString()}>\r\n                {/* Driver data Starts here */}\r\n\r\n                {/* Summary*/}\r\n                <div className=\"flex space-bw\"> \r\n                  {/* left side - total counts */}\r\n                  <div style={{flex: \"1\"}}>\r\n                    <div style={{fontSize: 30}}>{driver?.name}</div>\r\n                    <div style={{fontSize: 24}}>Total Orders: {orders.length}</div>\r\n                    <div style={{fontSize: 17}}>\r\n                      <table style={{width: 200}}>\r\n                        <tbody>\r\n                          {\r\n                            totalPouchMilkQty > 0 &&\r\n                            <tr>\r\n                              <td>Pouch Milk</td>\r\n                              <td>{totalPouchMilkQty}</td>\r\n                            </tr>\r\n                          }\r\n                          {\r\n                            totalGableTopQty > 0 &&\r\n                            <tr>\r\n                              <td>Gable Top Milk</td>\r\n                              <td>{totalGableTopQty}</td>\r\n                            </tr>\r\n                          }\r\n                          {\r\n                            totalMediumBox > 0 &&\r\n                            <tr>\r\n                              <td>Medium Box</td>\r\n                              <td>{totalMediumBox}</td>\r\n                            </tr>\r\n                          }\r\n                          {\r\n                            totalLargeBox > 0 &&\r\n                            <tr>\r\n                              <td>Large Boxes</td>\r\n                              <td>{totalLargeBox}</td>\r\n                            </tr>\r\n                          }\r\n                          {\r\n                            totalPackets > 0 &&\r\n                            <tr>\r\n                              <td>Packets</td>\r\n                              <td>{totalPackets}</td>\r\n                            </tr>\r\n                          }\r\n                            \r\n                          </tbody>\r\n                        </table>\r\n                    </div>\r\n                  </div>\r\n                  {/* right side - signature stuff */}\r\n                    <table className=\"signature-table\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Inventory Sign</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Dairy Sign</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Guard Sign</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Crates Taken</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Crates Returned</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Entry Time</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Exit Time</td>\r\n                          <td>__________________</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  <div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Order table */}\r\n                <div>\r\n                  <table className=\"delivery-order-table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Phone</th>\r\n                        <th>Location</th>\r\n                        <th>Address</th>\r\n                        <th>Product</th>\r\n                        <th>Box Code</th>\r\n                        <th>Check Box</th>\r\n                      </tr>\r\n                      {\r\n                        orders.map(order => {\r\n                          const {\r\n                            region, area, subarea, name, phone, address, orderId,\r\n                            pouchMilkQty,\r\n                            gableTopQty,\r\n                            mediumBox,\r\n                            largeBox,\r\n                            packet, crateId\r\n                          } = order;\r\n\r\n                          return (\r\n                            <tr key={orderId}>\r\n                              <td>{name}</td>\r\n                              <td>{phone}</td>\r\n                              <td className=\"location\">{subarea}, {area}, {region}</td>\r\n                              <td className=\"home-address\">{address}</td>\r\n                              <td>\r\n                                <table className=\"delivery-sheet-product-type\">\r\n                                  <tbody>\r\n                                    {\r\n                                      pouchMilkQty > 0 &&\r\n                                      <tr>\r\n                                        <td>Milk Pouch</td>\r\n                                        <td>{pouchMilkQty}</td>\r\n                                      </tr>\r\n                                    }\r\n                                    {\r\n                                      gableTopQty > 0 &&\r\n                                      <tr>\r\n                                        <td>Gable Top</td>\r\n                                        <td>{gableTopQty}</td>\r\n                                      </tr>\r\n                                    }\r\n                                    {\r\n                                      mediumBox > 0 &&\r\n                                      <tr>\r\n                                        <td>Medium Box</td>\r\n                                        <td>{mediumBox}</td>\r\n                                      </tr>\r\n                                    }\r\n                                    {\r\n                                      largeBox > 0 &&\r\n                                      <tr>\r\n                                        <td>Large Boxes</td>\r\n                                        <td>{largeBox}</td>\r\n                                      </tr>\r\n                                    }\r\n                                    {\r\n                                      packet > 0 &&\r\n                                      <tr>\r\n                                        <td>Packets</td>\r\n                                        <td>{packet}</td>\r\n                                      </tr>\r\n                                    }\r\n                                    \r\n                                  </tbody>\r\n                                </table>\r\n                              </td>\r\n                              <td>{crateId}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            );\r\n            \r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeliveryPrintSheet;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport moment from 'moment-timezone';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nimport Loading from './Loading';\r\nimport OrderDataTable from './OrderTableDelivery';\r\nimport DeliveryInfo from './DeliveryInfo';\r\n\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport DeliveryPrintSheet from './DeliveryPrintSheet';\r\n\r\nimport {updateDeliveryReport, updateAdminData, addProducts, addOrderProducts, addOrderBox} from '../actions/admin.actions';\r\nimport {getDeliveryBoysData, getDeliveryReport, getOrderBoxData, getOrderProducts, getOrderedProducts} from '../api/v2/admin';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateDeliveryReport: (data) => dispatch(updateDeliveryReport(data)),\r\n    onUpdateAdminData: (data) => dispatch(updateAdminData(data)),\r\n    onAddProducts: (data) => dispatch(addProducts(data)),\r\n    onAddOrderProducts: (data) => dispatch(addOrderProducts(data)),\r\n    onAddOrderBox: (data) => dispatch(addOrderBox(data))\r\n  };\r\n}\r\n\r\nclass DeliveryDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      phone: \"\",\r\n      startDate: moment().format('YYYY-MM-DD'),\r\n      endDate: moment().format('YYYY-MM-DD'),\r\n      selectedArea: [],\r\n      selectedSubarea: [],\r\n      selectedHub: [],\r\n      selectedDriver: \"all\",\r\n      showWithoutDairy: false,\r\n      hiddenAddress: false,\r\n      selectedRow: []\r\n    }\r\n  }\r\n  update = async () => {\r\n\r\n    try {\r\n      this.setState({loading: true});\r\n\r\n      let {startDate, endDate} = this.state;\r\n      startDate = moment(startDate).format('YYYY-MM-DD');\r\n      endDate = moment(endDate).format('YYYY-MM-DD');\r\n\r\n      const {onUpdateDeliveryReport, onUpdateAdminData} = this.props;\r\n\r\n      let deliveryBoysData = await getDeliveryBoysData().then(res => res.data);\r\n      let deliveryBoys = new Map();\r\n\r\n      deliveryBoysData.forEach(person => {\r\n        deliveryBoys.set(person.id, person);\r\n      })\r\n      onUpdateAdminData({deliveryBoys});\r\n      \r\n      let orderProducts = await getOrderProducts(startDate, endDate).then(res => res.data);\r\n      this.props.onAddOrderProducts(orderProducts)\r\n      \r\n      let products = await getOrderedProducts(startDate, endDate).then(res => res.data);\r\n      this.props.onAddProducts(products);\r\n      \r\n      let orderBoxData = await getOrderBoxData(startDate, endDate).then(res => res.data)\r\n      this.props.onAddOrderBox(orderBoxData)\r\n\r\n\r\n      let data = await getDeliveryReport(startDate, endDate).then(res => res.data);\r\n      onUpdateDeliveryReport(data);\r\n\r\n      this.setState({\r\n        loading: false,\r\n        lastUpdated: new Date()\r\n      });\r\n      // alert(this.state.lastUpdated)\r\n\r\n    } catch(err) {\r\n      console.log(err)\r\n      this.setState({\r\n        error: err.message\r\n      })\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.update();\r\n    \r\n    const { deliveryBoys, orders, orderBoxData, orderProducts } = this.props;\r\n    ReactDOM.render(\r\n      <DeliveryPrintSheet\r\n        deliveryBoys={deliveryBoys}\r\n        orders={orders}\r\n        orderBoxData={orderBoxData}\r\n        orderProducts={orderProducts}\r\n      />,\r\n      document.getElementById(\"printable\")\r\n    );\r\n  }\r\n  exportData = () => {\r\n    \r\n    const { deliveryBoys } = this.props;\r\n\r\n    let rows = [\r\n      [ 'Order Id', 'Customer ID', 'Name', 'Phone', 'Region', 'Area', 'Locality', 'House', 'Driver', 'Delivered', 'Delivery Type', 'Complete Delivery', 'Delivery Photo', 'Small Box' , 'Large Box' , 'Gable Top' , 'Milk Packets']\r\n    ];\r\n\r\n    let data = this.filterData();\r\n\r\n    for(let index = 0 ; index < data.length ; index ++ ) {\r\n      const item = data[index];\r\n      \r\n      const { orderId, driverId, customerID, name, phone, region, area, subarea, address, large_boxes, gable_tops, milk_packets, small_boxes, delivery_type, proof_img, delivery_date, complete_delivery } = item;\r\n      \r\n      let driverName = '';\r\n      if(driverId) {\r\n        driverName = deliveryBoys.get(driverId).name;\r\n      }\r\n      \r\n      rows.push(\r\n        [\r\n          orderId,\r\n          customerID,\r\n          name,\r\n          phone,\r\n          `\"${region}\"`,\r\n          `\"${area}\"`,\r\n          `\"${subarea}\"`,\r\n          `\"${address.replace(/[^0-9a-zA-Z:/ ]/g, \"\")}\"`,\r\n          `\"${driverName}\"`,\r\n          `\"${delivery_date ? 'Yes': 'No'}\"`,\r\n          `\"${delivery_type ? delivery_type : ''}\"`,\r\n          `\"${complete_delivery ? complete_delivery : ''}\"`,\r\n          `\"${proof_img ? proof_img : ''}\"`,\r\n          small_boxes,\r\n          large_boxes,\r\n          gable_tops,\r\n          milk_packets,\r\n        ]\r\n      )\r\n    }  \r\n    exportCSV(rows, `Delivery Report - ${new Date().toDateString()}.csv`);\r\n  }\r\n  filterData() {\r\n    let {selectedSubarea, selectedArea, selectedHub, selectedDriver, phone, onlyDelivered } = this.state;\r\n    let { orders} = this.props;\r\n    \r\n    let data = [];\r\n    \r\n    if(orders) {\r\n      data = orders.filter((item) => {\r\n        if(onlyDelivered) {\r\n          if(item.delivery_date) return true;\r\n          return false;\r\n        }\r\n        if(selectedHub.length) {\r\n          if(item.region !== selectedHub) return false;\r\n        }\r\n        if(selectedArea.length) {\r\n          if(!selectedArea.includes(item.area)) return false;\r\n        }\r\n        if(selectedSubarea.length) {\r\n          if(!selectedSubarea.includes(item.subarea)) return false;\r\n        }\r\n        if(selectedDriver !== 'all') {\r\n          if(selectedDriver === 'none') {\r\n            if(item.driverId !== null) return false;\r\n          } else if(item.driverId !== selectedDriver) return false;\r\n        }\r\n        if(phone) {\r\n          if(item.phone.indexOf(phone) !== -1) return true;\r\n          if(item.name.toLowerCase().indexOf(phone.toLowerCase()) !== -1) return true;\r\n          if(item.orderId.toString().indexOf(phone.toLowerCase()) !== -1) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    }\r\n    \r\n    return data;\r\n  }\r\n  onDateChange = (e) => {\r\n    \r\n    let value = moment(e.target.value).format('YYYY-MM-DD');\r\n    this.setState({\r\n      [e.target.name]: value\r\n    }, () => this.update());\r\n  }\r\n  onOrderSelect = (row) => {\r\n    this.setState({\r\n      selectedOrder: row\r\n    })\r\n  }\r\n  onPrintDeliverySheets = async () => {    \r\n    window.print();\r\n  }\r\n  render() {\r\n    let {selectedArea, selectedHub, selectedDriver, phone, onlyDelivered, startDate, endDate, selectedOrder, loading = true, lastUpdated } = this.state;\r\n    let {locations, hubs, deliveryBoys, orderBoxData} = this.props;\r\n    \r\n\r\n    let deliveryBoysData = deliveryBoys ? Array.from(deliveryBoys.values()) : [];\r\n    deliveryBoysData = deliveryBoysData.sort((a, b) => (a.name.localeCompare(b.name)));\r\n\r\n    let areas = [], subareas = [];\r\n    \r\n    if(locations) locations.forEach((hub, hubName) => {\r\n      hub.forEach((area, areaName) => {\r\n        if( (hubName === selectedHub) || (selectedHub.length === 0) ) {\r\n          areas.push(areaName);\r\n        }\r\n        if( selectedArea.includes(areaName) || selectedArea.length === 0 ) {\r\n          subareas = subareas.concat(area);\r\n        }\r\n      });\r\n    });\r\n\r\n    areas = areas.sort((a, b) => a.localeCompare(b));\r\n\r\n    let data = this.filterData();\r\n    \r\n    // if(orders && deliveryBoys && orderBoxData) {\r\n    //   loading = false;\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n    \r\n        {/* Dates - Remote Filters */}\r\n        <div \r\n          className=\"flex middle space-bw\"\r\n          style={{padding: 10}}\r\n        >\r\n          <div className=\"flex middle\">\r\n            <div style={{marginRight: 20, width: 220}}>\r\n              <TextField\r\n                type=\"date\"\r\n                value={startDate}\r\n                fullWidth\r\n                label=\"Start Date\"\r\n                name=\"startDate\"\r\n                onChange={this.onDateChange}\r\n              />\r\n            </div>\r\n            \r\n            <div style={{marginRight: 20, width: 220}}>\r\n              <TextField\r\n                type=\"date\"\r\n                value={endDate}\r\n                fullWidth\r\n                label=\"End Date\"\r\n                name=\"endDate\"\r\n                onChange={this.onDateChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex middle\">\r\n            <div>\r\n              <IconButton onClick={this.update}>\r\n                <ReplayIcon /> \r\n              </IconButton>\r\n            </div>\r\n            <div>\r\n              {\r\n                lastUpdated &&\r\n                <div>\r\n                  Last Updated: <br />{lastUpdated.toTimeString().substr(0, 5)}\r\n                </div>\r\n              }\r\n            </div>\r\n            <div className=\"p-10\">\r\n              <Button \r\n                startIcon={<DownloadIcon />}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                disabled={loading}\r\n                onClick={this.exportData}\r\n              >\r\n                Download Excel\r\n              </Button>\r\n            </div>\r\n            \r\n            <div className=\"p-10\">\r\n              <Button \r\n                startIcon={<DownloadIcon />}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                disabled={loading}\r\n                onClick={this.onPrintDeliverySheets}\r\n              >\r\n                Print Delivery Sheets\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        {\r\n          loading?\r\n          <Loading /> :\r\n          <div>\r\n            {/* Local Filters */}\r\n            <div \r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n              <div style={{marginRight: 20, width: 220}}>\r\n                <TextField\r\n                  value={phone}\r\n                  fullWidth\r\n                  label=\"Phone, Name, Crate, Order Id\"\r\n                  onChange={(e) => this.setState({phone: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div style={{marginRight: 20, width: 120}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"hub-filter\">Hub</InputLabel>\r\n                  <Select\r\n                    labelId=\"hub-filter\"\r\n                    style={{width: 100}}\r\n                    value={selectedHub}\r\n                    onChange={(e) => {\r\n                      let selectedHub = e.target.value;\r\n                      this.setState({selectedHub, selectedArea: [], selectedSubarea: []})\r\n                    }}\r\n                  >\r\n                    {/* <MenuItem value=\"all\">All</MenuItem> */}\r\n                    {hubs.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  </FormControl>\r\n              </div>\r\n              \r\n              <div style={{marginRight: 20, width: 200}}>\r\n                <FormControl style={{width: '100%'}}>\r\n                  <Autocomplete\r\n                    options={areas}\r\n                    multiple={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"Area\" />}\r\n                    onChange={(e, selectedArea) => {\r\n                      this.setState({selectedArea, selectedSubarea: []})\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div style={{marginRight: 20, width: 300}}>\r\n                <FormControl style={{width: '100%'}}>\r\n                  <Autocomplete\r\n                    options={subareas}\r\n                    multiple={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"Locality\" />}\r\n                    onChange={(e, selectedSubarea) => {\r\n                      this.setState({selectedSubarea})\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"driver-filter\">Assigned Driver</InputLabel>\r\n                  <Select\r\n                    labelId=\"driver-filter\"\r\n                    style={{width: 200}}\r\n                    value={selectedDriver || 'all'}\r\n                    onChange={(e, b) => {\r\n                      let selectedDriver = e.target.value;\r\n                      this.setState({selectedDriver});\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"none\">None</MenuItem>\r\n                    {deliveryBoysData.map(item => (\r\n                      <MenuItem value={item.id} key={`driver-${item.id}`}>{item.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              \r\n              <div>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={onlyDelivered}\r\n                      onChange={(e) => \r\n                        this.setState({\r\n                          [e.target.name]: e.target.checked\r\n                        })\r\n                      }\r\n                      name=\"onlyDelivered\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Delivered\"\r\n                />\r\n              </div>\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <Button\r\n                  color=\"default\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    window.location.reload();\r\n                  }}\r\n                >\r\n                  Remove Filters\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* <AssignOrders \r\n              data={data}\r\n              exportData={this.exportData}\r\n              deliveryBoys={deliveryBoys}\r\n            /> */}\r\n            <DeliveryInfo \r\n              customer={selectedOrder}\r\n              setSelectedCustomer={this.onOrderSelect}\r\n            />\r\n            <OrderDataTable\r\n              data={data}\r\n              onRowSelect={this.onOrderSelect}\r\n              orderBoxData={orderBoxData}\r\n              deliveryBoys={deliveryBoys}\r\n            />\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DeliveryDashboard);"],"sourceRoot":""}