{"version":3,"sources":["api/misc.js","components/ReportForm.js","components/AddReport.js"],"names":["getReport","a","type","report_date","moment","format","date","url","API_URL","request","method","headers","result","ReportForm","props","onSubmit","e","preventDefault","data","FormData","target","onChange","setState","name","value","onDateTimeChange","onFileChange","pdf","state","milk_type","ph","snf","fat","sodium_content","mbrt","antibiotics1","antibiotics2","antibiotics3","aflatoxin","bmc_receive","subtract","bmc_dispatch","plant_receive","plant_dispatch","whs_receive","whs_dispatch","this","loading","filename","path","split","length","console","log","id","className","Grid","container","justify","spacing","item","xs","sm","md","lg","FormControl","fullWidth","TextField","label","InputLabel","Select","labelId","MenuItem","required","FormControlLabel","control","Switch","disabled","checked","color","htmlFor","Button","variant","startIcon","CircularProgress","size","Component","AddReport","addReport","then","res","alert","catch","err","response","status","report","Box","m","connect"],"mappings":"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","file":"static/js/AddReport.ba068300.chunk.js","sourcesContent":["import {API_URL , request} from '../helpers/utils';\r\nimport moment from 'moment';\r\n\r\nexport async function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\r\n\r\n  let date = moment(report_date).format('YYYY-MM-DD');\r\n    \r\n  let url = `${API_URL}/misc/getReport?report_date=${date}&type=${type}`;\r\n  let result =  await request({\r\n\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n  });\r\n\r\n  return result ;\r\n} ","import React, { Component } from 'react';\r\nimport {FormControl, Grid, Select, TextField, Switch, FormControlLabel, CircularProgress, Button } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport UploadIcon from '@material-ui/icons/CloudUpload';\r\nimport moment from 'moment';\r\n\r\nclass ReportForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      report_date: moment().format('YYYY-MM-DD'),\r\n      milk_type: 'a2',\r\n      ph: 7,\r\n      snf: 9,\r\n      fat: 4,\r\n      sodium_content: 496,\r\n      mbrt: 40,\r\n      antibiotics1: false,\r\n      antibiotics2: false,\r\n      antibiotics3: false,\r\n      aflatoxin: false,\r\n      // bmc_receive: null,\r\n      // bmc_dispatch: null,\r\n      // plant_receive: null,\r\n      // plant_dispatch: null,\r\n      // whs_receive: null,\r\n      // whs_dispatch: null,\r\n      pdf: null,\r\n      bmc_receive: moment().subtract(7, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      bmc_dispatch: moment().subtract(5, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      plant_receive: moment().subtract(4, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      plant_dispatch: moment().subtract(3, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      whs_receive: moment().subtract(1, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      whs_dispatch: moment().format('YYYY-MM-DDTHH:MM'),\r\n    }\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const {onSubmit} = this.props;\r\n    onSubmit(data);\r\n\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  \r\n  onDateTimeChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  onFileChange = (e) => {\r\n    this.setState({\r\n      pdf: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const {\r\n      report_date, \r\n      milk_type,\r\n      ph,\r\n      snf,\r\n      fat,\r\n      sodium_content,\r\n      mbrt,\r\n      antibiotics1,\r\n      antibiotics2,\r\n      antibiotics3,\r\n      aflatoxin,\r\n      bmc_receive,\r\n      bmc_dispatch,\r\n      plant_receive,\r\n      plant_dispatch,\r\n      whs_receive,\r\n      whs_dispatch,\r\n      pdf\r\n    } = this.state;\r\n    \r\n    const {loading} = this.props;\r\n    let filename = null;\r\n    if(pdf) {\r\n      let path = pdf.split(\"\\\\\");\r\n      filename = path[path.length - 1];\r\n    }\r\n\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div id=\"report-form\" className=\"flex column middle\">\r\n        <form id=\"milk-report-form\" onSubmit={this.onSubmit}>\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Report Date *\"\r\n                type=\"date\"\r\n                value={report_date}\r\n                name=\"report_date\"\r\n                onChange={this.onDateTimeChange}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"milk_type\">Milk Type *</InputLabel>\r\n              <Select\r\n                labelId=\"milk_type\"\r\n                fullWidth\r\n                name=\"milk_type\"\r\n                value={milk_type}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    milk_type: e.target.value\r\n                  })\r\n                }}\r\n              >\r\n                <MenuItem value=\"a2\">A2 Gable Top</MenuItem>\r\n                {/* <MenuItem value=\"mix\">Mix</MenuItem> */}\r\n                <MenuItem value=\"a2-cow-toned\">A2 Cow Toned</MenuItem>\r\n                <MenuItem value=\"buffalo-full\">Buffalo Full</MenuItem>\r\n                <MenuItem value=\"toned\">Toned</MenuItem>\r\n                <MenuItem value=\"double-toned\">Double Toned</MenuItem>\r\n                {/* 'a2-cow-toned', 'buffalo-full', 'toned', 'double-toned' */}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"pH *\"\r\n              name='ph'\r\n              onChange={this.onChange}\r\n              type=\"number\"\r\n              value={ph}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"FAT *\"\r\n              name=\"fat\"\r\n              value={fat}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"SNF *\"\r\n              name=\"snf\"\r\n              value={snf}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >  \r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"Sodium Content *\"\r\n              name=\"sodium_content\"\r\n              value={sodium_content}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"MBRT *\"\r\n              name=\"mbrt\"\r\n              type=\"number\"\r\n              value={mbrt}\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >BMC Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={bmc_receive}\r\n              name=\"bmc_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >BMC Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={bmc_dispatch}\r\n              name=\"bmc_dispatch\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >Plant Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={plant_receive}\r\n              name=\"plant_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >Plant Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={plant_dispatch}\r\n              name=\"plant_dispatch\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >WHS Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={whs_receive}\r\n              name=\"whs_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >WHS Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={whs_dispatch}\r\n              name=\"whs_dispatch\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >  \r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics1}\r\n                  onChange={(e, antibiotics1) => this.setState({ antibiotics1 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (B & T) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics2}\r\n                  onChange={(e, antibiotics2) => this.setState({ antibiotics2 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (Chloramphenicol) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics3}\r\n                  onChange={(e, antibiotics3) => this.setState({ antibiotics3 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (Sulphonamide) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={aflatoxin}\r\n                  onChange={(e, aflatoxin) => this.setState({ aflatoxin })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Aflatoxin M1 *\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <div>\r\n              <input \r\n                type=\"file\" \r\n                id=\"milk-report-file-input\" \r\n                className=\"file-input\"\r\n                name=\"pdf\"\r\n                onChange={this.onChange}\r\n              />\r\n              <label className=\"file\" htmlFor=\"milk-report-file-input\">\r\n                <div className=\"flex middle\">\r\n                  <div className=\"icon\">\r\n                    <UploadIcon />\r\n                  </div>\r\n                  Upload Report\r\n                </div>\r\n              </label>\r\n            </div>\r\n            {filename}\r\n          </Grid>\r\n          \r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              // onClick={onSubmit}\r\n              disabled={loading}\r\n              startIcon={loading ? <CircularProgress size={12} /> : null}\r\n            >\r\n              Submit\r\n            </Button>\r\n              \r\n          </Grid>\r\n          \r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              // onClick={onSubmit}\r\n              // disabled={loading}\r\n              // startIcon={loading ? <CircularProgress size={12} /> : null}\r\n            >\r\n              Cancel\r\n            </Button>\r\n              \r\n          </Grid>\r\n          \r\n        </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ReportForm;","import { Box} from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getReport} from '../api/misc';\r\nimport {addReport} from '../api/admin';\r\nimport ReportForm from './ReportForm';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  };\r\n}\r\n\r\nclass AddReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      report: null,\r\n      loading: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    getReport()\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        report: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  onSubmit = (data) => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    addReport(data)\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        loading: false\r\n      })\r\n      alert('Done');\r\n    })\r\n    .catch(err => {\r\n      if(err.response && err.response.status === 400) {\r\n        alert(err.response.data)\r\n      }\r\n      console.log(err);\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {loading, report} = this.state;\r\n    if(report) {\r\n      // alert(\"Already a report for today\");\r\n    }\r\n    return (\r\n      <div >\r\n        <Box m={1}>\r\n          <ReportForm onSubmit={this.onSubmit} loading={loading} />\r\n        </Box>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(AddReport);"],"sourceRoot":""}