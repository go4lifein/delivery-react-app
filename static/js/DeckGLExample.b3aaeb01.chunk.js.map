{"version":3,"sources":["components/DeckGLExample.js"],"names":["COLOR_SCALE","DeckGLExample","getTooltip","object","properties","valuePerSqm","Math","round","growth","this","geojsonLayer","GeoJsonLayer","data","opacity","stroked","filled","extruded","wireframe","fp64","latitude","longitude","getElevation","f","sqrt","getFillColor","x","i","length","colorScale","getLineColor","pickable","width","height","mapStyle","zoom","maxZoom","pitch","Component","connect","state"],"mappings":"4MAUA,IAAMA,EAAc,CAElB,CAAC,GAAI,IAAK,KACV,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KAGX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,IACX,CAAC,IAAK,IAAK,IACX,CAAC,IAAK,GAAI,IACV,CAAC,IAAK,GAAI,IACV,CAAC,IAAK,EAAG,IACT,CAAC,IAAK,EAAG,K,IAYLC,E,4MAoBJC,WAAa,YAAe,IAAbC,EAAY,EAAZA,OACb,OAAOA,GAAM,gDAETA,EAAOC,WAAWC,YAFT,iCAITC,KAAKC,MAAiC,IAA3BJ,EAAOC,WAAWI,QAJpB,W,kEAnBbC,KAAKC,aAAe,IAAIC,IAAa,CACnCC,KAAM,2GACNC,QAAS,GACTC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,SAAU,OACVC,WAAY,OAEZC,aAAc,SAAAC,GAAC,OAA0C,GAAtChB,KAAKiB,KAAKD,EAAElB,WAAWC,cAC1CmB,aAAc,SAAAF,GAAC,OAvBrB,SAAoBG,GAElB,IAAMC,EAAIpB,KAAKC,MAAU,EAAJkB,GAAS,EAC9B,OAAIA,EAAI,EACCzB,EAAY0B,IAAM1B,EAAY,GAEhCA,EAAY0B,IAAM1B,EAAYA,EAAY2B,OAAS,GAiBnCC,CAAWN,EAAElB,WAAWI,SAC3CqB,aAAc,SAAAP,GAAC,MAAI,CAAC,IAAK,IAAK,MAE9BQ,UAAU,M,+BAYZ,OACE,8BAEE,cAAC,IAAD,CACEC,MAAM,OACNC,OAAO,OACPC,SAAU,gEACVd,SAAU,OACVC,WAAY,OACZc,KAAM,GACNC,QAAS,GACTC,MAAO,EAGPlC,WAAYO,KAAKP,mB,GA3CCmC,aAkDbC,uBApFf,SAAyBC,GACvB,MAAO,KAmFMD,CAEbrC,I","file":"static/js/DeckGLExample.b3aaeb01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {DeckGL, GeoJsonLayer} from 'deck.gl';\n\nfunction mapStateToProps(state) {\n  return {\n\n  };\n}\n\nconst COLOR_SCALE = [\n  // negative\n  [65, 182, 196],\n  [127, 205, 187],\n  [199, 233, 180],\n  [237, 248, 177],\n\n  // positive\n  [255, 255, 204],\n  [255, 237, 160],\n  [254, 217, 118],\n  [254, 178, 76],\n  [253, 141, 60],\n  [252, 78, 42],\n  [227, 26, 28],\n  [189, 0, 38],\n  [128, 0, 38]\n];\n\nfunction colorScale(x) {\n  \n  const i = Math.round(x * 7) + 4;\n  if (x < 0) {\n    return COLOR_SCALE[i] || COLOR_SCALE[0];\n  }\n  return COLOR_SCALE[i] || COLOR_SCALE[COLOR_SCALE.length - 1];\n}\n\nclass DeckGLExample extends Component {\n  componentDidMount() {\n    this.geojsonLayer = new GeoJsonLayer({\n      data: 'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/geojson/vancouver-blocks.json',\n      opacity: 0.8,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      fp64: true,\n      latitude: 49.254,\n      longitude: -123.13,\n    \n      getElevation: f => Math.sqrt(f.properties.valuePerSqm) * 10,\n      getFillColor: f => colorScale(f.properties.growth),\n      getLineColor: f => [255, 255, 255],\n    \n      pickable: true\n    });\n  }\n  getTooltip = ({object}) => {\n    return object && `\n      Average Property Value\n      ${object.properties.valuePerSqm}\n      Growth\n      ${Math.round(object.properties.growth * 100)}\n    `;\n  }\n  render() {\n    return (\n      <div>\n        \n        <DeckGL\n          width=\"100%\" \n          height=\"100%\"\n          mapStyle={'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json'}\n          latitude={49.254}\n          longitude={-123.13}\n          zoom={11}\n          maxZoom={16}\n          pitch={4}\n          // controller={true}\n          // layers={[this.geojsonLayer]}\n          getTooltip={this.getTooltip}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(DeckGLExample);"],"sourceRoot":""}