{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../src/math-utils.js","../../../src/assert.js","../../../src/web-mercator-utils.js","../../../src/fit-bounds.js","../../../src/get-bounds.js","../../../src/web-mercator-viewport.js","../../../src/normalize-viewport-props.js","../../../src/fly-to-viewport.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/vec3.js","../../../../src/utils/hammer-overrides.js","../../../../src/utils/hammer.browser.js","../../../src/constants.js","../../../../src/inputs/wheel-input.js","../../../../src/inputs/move-input.js","../../../../src/inputs/key-input.js","../../../../src/inputs/contextmenu-input.js","../../../../src/utils/event-utils.js","../../../../src/utils/event-registrar.js","../../../src/event-manager.js","../node_modules/hammerjs/hammer.js","../../../../src/utils/globals.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_possibleConstructorReturn","self","call","transformVector","matrix","vector","result","vec4","mod","divisor","modulus","lerp","start","end","step","assert","condition","message","Error","PI","Math","PI_4","DEGREES_TO_RADIANS","RADIANS_TO_DEGREES","TILE_SIZE","EARTH_CIRCUMFERENCE","zoomToScale","zoom","scaleToZoom","scale","lngLatToWorld","lng","lat","Number","phi2","worldToLngLat","x","y","lambda2","getMeterZoom","latitude","latCosine","getDistanceScales","longitude","highPrecision","unitsPerDegreeX","unitsPerDegreeY","altUnitsPerMeter","worldSize","latCosine2","unitsPerDegreeY2","altUnitsPerDegree2","altUnitsPerMeter2","addMetersToLngLat","lngLatZ","xyz","z0","z","unitsPerMeter","unitsPerMeter2","worldspace","newLngLat","newZ","getViewMatrix","height","pitch","bearing","altitude","center","vm","mat4","vec3","getProjectionParameters","width","nearZMultiplier","farZMultiplier","pitchRadians","halfFov","topHalfSurfaceDistance","fov","aspect","focalDistance","near","far","getProjectionMatrix","worldToPixels","pixelProjectionMatrix","pixelsToWorld","pixelUnprojectionMatrix","targetZ","coord","coord0","coord1","z1","t","vec2","bounds","minExtent","maxZoom","padding","offset","west","south","east","north","top","bottom","left","right","viewport","nw","se","size","targetSize","scaleX","scaleY","offsetX","offsetY","centerLngLat","unproject","unprojectOps","bottomLeft","bottomRight","angleToGround","topLeft","unprojectOnFarPlane","topRight","WebMercatorViewport","this","equals","bind","project","projectPosition","unprojectPosition","projectionMatrix","viewMatrix","vpm","m","mInverse","worldPosition","y2","undefined","targetZWorld","distanceScales","X","Y","Z","metersPerUnit","lngLat","xy","fromLocation","pos","toLocation","translate","getMapCenterByLngLatPosition","options","fitBounds","corners","getBoundingRegion","p","getBounds","MAX_LATITUDE","MIN_LATITUDE","normalizeViewportProps","flatViewport","topY","bottomY","shiftY","EPSILON","VIEWPORT_TRANSITION_PROPS","DEFAULT_OPTS","curve","speed","flyToViewport","startProps","endProps","opts","getFlyToTransitionParams","startZoom","startCenterXY","uDelta","w0","u1","S","rho","rho2","r0","key","startValue","endValue","s","w","u","scaleIncrement","newZoom","newCenterWorld","newCenter","getFlyToDuration","screenSpeed","maxDuration","length","duration","startCenter","startScale","endZoom","endCenter","endCenterXY","w1","_u1","b0","b1","r1","add","out","a","b","hypot","negate","ax","ay","transformMat4","sub","vec","glMatrix","Float32Array","_setPrototypeOf","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","multiply","b2","b3","v","rotate","rad","axis","c","b12","b20","b21","b22","len","sin","cos","rotateX","rotateY","rotateZ","fromQuat","q","x2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","frustum","rl","tb","nf","perspective","fovy","f","tan","Infinity","ortho","lr","bt","lookAt","eye","up","x0","x1","y0","y1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","identity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","ARRAY_TYPE","Array","RANDOM","random","i","arguments","sqrt","cross","az","bx","by","bz","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","r","angle","mag","cosine","dot","acos","min","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","PointerEventInput","oldHandler","ev","store","array","predict","some","e","enhancePointerEventInput","hammerjs","enhanceMouseInput","MouseInput","eventType","pointers","changedPointers","pointerType","srcEvent","Manager","RECOGNIZERS","Hammer","event","threshold","enable","taps","RECOGNIZER_COMPATIBLE_MAP","tripan","pinch","pan","doubletap","anytap","RECOGNIZER_FALLBACK_MAP","BASIC_EVENT_ALIASES","pointerdown","pointermove","pointerup","touchstart","touchmove","touchend","INPUT_EVENT_TYPES","EVENT_RECOGNIZER_MAP","tap","press","pinchin","pinchout","pinchstart","pinchmove","pinchend","pinchcancel","rotatestart","rotatemove","rotateend","rotatecancel","tripanstart","tripanmove","tripanup","tripandown","tripanleft","tripanright","tripanend","tripancancel","panstart","panmove","panup","pandown","panleft","panright","panend","pancancel","swipe","swipeleft","swiperight","swipeup","swipedown","GESTURE_EVENT_ALIASES","click","anyclick","dblclick","mouseover","mouseout","mouseleave","firefox","userAgent","WHEEL_EVENTS","EVENT_TYPE","WHEEL_DELTA_MAGIC_SCALER","WheelInput","handleEvent","element","passiveSupported","passive","enabled","window","wheelPosition","clientY","delta","position","type","target","MOUSE_EVENTS","MOVE_EVENT_TYPE","OVER_EVENT_TYPE","OUT_EVENT_TYPE","LEAVE_EVENT_TYPE","MoveInput","KEY_EVENTS","DOWN_EVENT_TYPE","UP_EVENT_TYPE","KeyInput","targetElement","enableDownEvent","enableUpEvent","ContextmenuInput","DEFAULT_OPTIONS","srcElement","priority","EventRegistrar","handler","once","handlers","handlersByElement","entries","entry","_active","insertPosition","mjolnirEvent","_normalizeEvent","get","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","entriesToRemove","rootElement","eventManager","buttons","button","which","leftButton","middleButton","rightButton","Boolean","whichButtons","rect","offsetCenter","getOffsetPosition","handled","events","recognizers","recognizerOptions","touchAction","tabIndex","EventManager","_onBasicInput","_onOtherEvent","ManagerClass","name","recognizer","otherName","manager","recognizerOption","eventAlias","eventRegistrar","fallbackRecognizers","otherRecognizer","recognizerName","isRecognizerUsed","eh","alias","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","round","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","isArray","each","obj","iterator","forEach","hasOwnProperty","deprecate","method","deprecationMessage","stack","replace","log","console","warn","apply","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","push","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","DIRECTION_VERTICAL","DIRECTION_UP","PROPS_XY","PROPS_CLIENT_XY","Input","callback","inputTarget","domHandler","init","inputHandler","input","pointersLen","changedPointersLen","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","getCenter","timeStamp","deltaTime","getAngle","distance","getDistance","offsetDelta","prevDelta","prevInput","deltaX","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","clientX","p1","p2","props","atan2","evEl","evTarget","evWin","destroy","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","POINTER_INPUT_MAP","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","set","compute","actions","update","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","preventSrc","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","stop","force","stopped","curRecognizer","existing","remove","on","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","define","window_","global","err"],"mappings":";oHAAe,SAASA,EAAgBC,GAItC,OAHAD,EAAkBE,OAAOC,eAAiBD,OAAOE,eAAiB,SAAyBH,GACzF,OAAOA,EAAEI,WAAaH,OAAOE,eAAeH,KAEvBA,GAJzB,mC,iCCAA,+CACe,SAASK,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASG,UAAYR,OAAOS,OAAOH,GAAcA,EAAWE,UAAW,CACrEE,YAAa,CACXC,MAAON,EACPO,UAAU,EACVC,cAAc,KAGdP,GAAY,YAAeD,EAAUC,K,iCCb3C,sDAEe,SAASQ,EAA2BC,EAAMC,GACvD,OAAIA,GAA2B,WAAlB,YAAQA,IAAsC,oBAATA,EAI3C,YAAsBD,GAHpBC,I,6kBCIJ,SAASC,EAAgBC,EAAQC,GACtC,IAAMC,EAASC,SAAf,GAEA,OADAA,QAA2B,EAAID,EAA/BC,IACA,EAGK,SAASC,EAAIX,EAAOY,GACzB,IAAMC,EAAUb,EAAhB,EACA,OAAOa,IAAcD,EAAdC,EAAP,EAGK,SAASC,EAAKC,EAAOC,EAAKC,GAC/B,OAAOA,KAAc,EAAD,GAApB,E,+BCjBa,SAASC,EAAOC,EAAWC,GACxC,MACE,MAAM,IAAIC,MAAMD,GAAhB,4CCKJ,IAAME,EAAKC,KAAX,GACMC,EAAOF,EAAb,EACMG,EAAqBH,EAA3B,IACMI,EAAqB,IAA3B,EACMC,EAAN,IAEMC,EAAN,OAMO,SAASC,EAAYC,GAC1B,OAAOP,WAAP,GAGK,SAASQ,EAAYC,GAC1B,OAAOT,UAAP,GAaK,SAASU,EAAc,GAAY,uBAAXC,EAAW,KAANC,EAAM,KACxCjB,EAAOkB,gBAAPlB,IACAA,EAAOkB,oBAAwBD,IAAxBC,IAAsCD,GAAvC,GAANjB,oBAEA,IACMmB,EAAOF,EAAb,EAGA,MAAO,CAFIR,GAFKO,EAAhB,EAEU,IAAgC,EAA1C,GACWP,GAAaL,EAAKC,SAASA,SAASC,EAArC,GAA4Ca,MAAkB,EAAxE,IAKK,SAASC,EAAc,GAAQ,uBAAPC,EAAO,KAAJC,EAAI,KAC9BC,EAAWF,EAAD,GAAmB,EAAnB,GAAhB,EACMF,EAAO,GAAKd,UAAUA,SAAUiB,EAAD,GAAmB,EAAnB,GAAnBjB,IAAlB,GACA,MAAO,CAACkB,EAAD,EAA+BJ,EAAtC,GAKK,SAASK,EAAa,GAAY,IAAXC,EAAW,EAAXA,SAC5BzB,EAAOkB,gBAAPlB,IACA,IAAM0B,EAAYrB,SAASoB,EAA3B,GACA,OAAOZ,EAAYH,EAAZG,GAAP,EAUK,SAASc,EAAkB,GAA8C,IAA7CF,EAA6C,EAA7CA,SAAUG,EAAmC,EAAnCA,UAAmC,IAAxBC,qBAAwB,SAC9E7B,EAAOkB,oBAA6BA,gBAApClB,IAEA,IAAMT,EAAN,GAEMmC,EAAYrB,SAASoB,EAA3B,GASMK,EAVN,IAUA,IACMC,EAAkBD,EAAxB,EAKME,EAAmBC,sBAAzB,EAqBA,GAZA1C,gBAAuB,CAACyC,EAAkBA,EAA1CzC,GACAA,gBAAuB,CAAC,EAAD,EAAuB,EAAvB,EAA6C,EAApEA,GAEAA,iBAAwB,CAACuC,EAAiBC,EAA1CxC,GACAA,iBAAwB,CAAC,QAAqB,EAAtB,EAA2C,EAAnEA,GAQA,EAAmB,CACjB,IAAM2C,EAAc3B,EAAqBF,SAASoB,EAA/B,GAAnB,EACMU,EAAoBL,EAAD,EAAzB,EACMM,EAAsBH,sBAA5B,EACMI,EAAqBD,EAAD,EAA1B,EAEA7C,kBAAyB,CAAC,EAAG4C,EAA7B5C,GACAA,iBAAwB,CAAC8C,EAAmB,EAA5C9C,GAIF,SAMK,SAAS+C,EAAkBC,EAASC,GAAK,uBACvCZ,EADuC,KAC5BH,EAD4B,KAClBgB,EADkB,wBAEvCpB,EAFuC,KAEpCC,EAFoC,KAEjCoB,EAFiC,OAINf,EAAkB,CACxDC,UADwD,EAExDH,SAFwD,EAGxDI,eAAe,IAHVc,EAJuC,gBAIxBC,EAJwB,iBAUxCC,EAAa9B,EAAnB,GACA8B,MAAiBxB,GAAKsB,KAAmBC,KAAzCC,GACAA,MAAiBvB,GAAKqB,KAAmBC,KAAzCC,GAGA,IAAMC,EAAY1B,EAAlB,GACM2B,GAAQN,GAAD,IAAaC,GAA1B,GAEA,OAAOxB,oBAAuBA,gBAAvBA,GAA4C,CAAC4B,EAAD,GAAeA,EAAf,GAA5C5B,GAAP,EAQK,SAAS8B,EAAc,GAS3B,IAPDC,EAOC,EAPDA,OACAC,EAMC,EANDA,MACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,SAEAtC,EAEC,EAFDA,MAEC,IADDuC,cACC,MADQ,KACR,EAMKC,EFxKC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAlD,GEwLA,OAbAC,QAAuB,CAAC,EAAG,GAA3BA,IAGAA,SAAsBL,EAAtBK,GACAA,QAAqBJ,EAArBI,GAEAzC,KACAyC,QAAmB,CAACzC,EAAOA,EAA3ByC,IAEA,GACEA,QAAuBC,OAAvBD,IAGF,EAKK,SAASE,EAAwB,GAOrC,IANDC,EAMC,EANDA,MACAT,EAKC,EALDA,OAKC,IAJDG,gBAIC,MArLH,IAqLG,MAHDF,aAGC,MAHO,EAGP,MAFDS,uBAEC,MAFiB,EAEjB,MADDC,sBACC,MADgB,EAChB,EAGKC,EAAeX,EAArB,EACMY,EAAUzD,UAAU,GAA1B,GACM0D,EACH1D,YAAD,EACAA,SAASA,SAASA,SAASA,YAATA,EAATA,KAA+DA,QAF1E,MAOA,MAAO,CACL2D,IAAK,EADA,EAELC,OAAQP,EAFH,EAGLQ,cAHK,EAILC,KAJK,EAKLC,KAPW/D,cAAb,GAOcuD,GAQT,SAASS,EAAoB,GAOjC,IANDX,EAMC,EANDA,MACAT,EAKC,EALDA,OACAC,EAIC,EAJDA,MAIC,EACgCO,EAAwB,CACvDC,MADuD,EAEvDT,OAFuD,EAGvDG,SAJD,EAHDA,SAQEF,MAJuD,EAKvDS,gBAND,EAFDA,gBASEC,eAPD,EADDA,iBAEOI,EADN,MACWC,EADX,SACmBE,EADnB,OACyBC,EADzB,MAkBD,OARyBb,aAAzB,GAYK,SAASe,EAAc9B,EAAK+B,GAAuB,uBACjDlD,EADiD,KAC9CC,EAD8C,YAC3CoB,OAD2C,UAIxD,OAFA1C,EAAOkB,oBAAsBA,gBAAtBA,IAA4CA,gBAAnDlB,IAEOZ,EAAgBmF,EAAuB,CAAClD,EAAGC,EAAGoB,EAArD,IAIK,SAAS8B,EAAchC,EAAKiC,GAAsC,IAAbC,EAAa,uDAAH,EAAG,mBAChErD,EADgE,KAC7DC,EAD6D,KAC1DoB,EAD0D,KAIvE,GAFA1C,EAAOkB,oBAAsBA,gBAAvB,GAANlB,4BAEIkB,gBAAJ,GAAwB,CAEtB,IAAMyD,EAAQvF,EAAgBqF,EAAyB,CAACpD,EAAGC,EAAGoB,EAA9D,IACA,SAKF,IAAMkC,EAASxF,EAAgBqF,EAAyB,CAACpD,EAAGC,EAAG,EAA/D,IACMuD,EAASzF,EAAgBqF,EAAyB,CAACpD,EAAGC,EAAG,EAA/D,IAEMmB,EAAKmC,EAAX,GACME,EAAKD,EAAX,GAEME,EAAItC,UAAkBiC,GAAD,GAAD,IAAyBI,EAAnD,GACA,OAAOE,WAAP,GCjRa,SAAS,EAAT,GASZ,IARDtB,EAQC,EARDA,MACAT,EAOC,EAPDA,OACAgC,EAMC,EANDA,OAMC,IALDC,iBAKC,MALW,EAKX,MAJDC,eAIC,MAJS,GAIT,MAFDC,eAEC,MAFS,EAET,MADDC,cACC,MADQ,CAAC,EAAG,GACZ,2CACOC,EADP,KACaC,EADb,2BACsBC,EADtB,KAC4BC,EAD5B,KAGD,GAAIvE,gBAAJ,GAA8B,CAE5BkE,EAAU,CACRM,IAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,MALF,QASA7F,EACEkB,gBAAgBkE,EAAhBlE,MACEA,gBAAgBkE,EADlBlE,SAEEA,gBAAgBkE,EAFlBlE,OAGEA,gBAAgBkE,EAJpBpF,QAQF,IAAM8F,EAAW,IAAI,EAAoB,CACvCpC,MADuC,EAEvCT,OAFuC,EAGvCrB,UAHuC,EAIvCH,SAJuC,EAKvCb,KAAM,IAGFmF,EAAKD,UAAiB,CAACR,EAA7B,IACMU,EAAKF,UAAiB,CAACN,EAA7B,IAGMS,EAAO,CACX5F,SAASA,SAAS2F,KAAQD,EAA1B1F,IADW,GAEXA,SAASA,SAAS2F,KAAQD,EAA1B1F,IAFF,IAKM6F,EAAa,CACjBxC,EAAQ0B,EAAR1B,KAAuB0B,EAAvB1B,MADiB,EACsBrD,SAASgF,EAAThF,IACvC4C,EAASmC,EAATnC,IAAuBmC,EAAvBnC,OAFF,EAE0C5C,SAASgF,EAAThF,KAG1CL,EAAOkG,QAAqBA,KAA5BlG,GAGA,IAAMmG,EAASD,KAAgBD,EAA/B,GACMG,EAASF,KAAgBD,EAA/B,GAGMI,GAAWjB,QAAgBA,EAAjB,QAAhB,EACMkB,GAAWlB,SAAiBA,EAAlB,OAAhB,EAEM/B,EAAS,EAAE2C,KAAQD,EAAT,MAAD,GAAiCC,KAAQD,EAAT,MAA/C,GAEMQ,EAAeT,YAArB,GACMlF,EAAOP,WAAkByF,OAAgBzF,UAAUA,SAASA,WAAlE,MAIA,OAFAL,EAAOkB,gBAAPlB,IAEO,CACL4B,UAAW2E,EADN,GAEL9E,SAAU8E,EAFL,GAGL3F,QC5EJ,IAAML,EAAqBF,QAA3B,IAOe,SAAS,EAAT,GAAoC,IAKjD,EACA,EAN0CqC,EAAO,uDAAH,EACvCgB,EAA4BoC,EADc,MACnC7C,EAAqB6C,EADc,OAC3BU,EAAaV,EADc,UAE3CW,EAAe,CAAC/B,QAAShC,GACzBgE,EAAaF,EAAU,CAAC,EAAF,GAA5B,GACMG,EAAcH,EAAU,CAAC9C,EAAF,GAA7B,GAIMI,EAAUzD,UAAU,GAAMyF,EAAhC,UACMc,GAAiB,GAAKd,EAAN,OAAtB,EAYA,OAVIhC,EAAU8C,EAAd,KAEEC,EAAUC,EAAoBhB,EAAU,EAAxCe,GACAE,EAAWD,EAAoBhB,EAAUpC,EAAzCqD,KAGAF,EAAUL,EAAU,CAAC,EAAF,GAAnBK,GACAE,EAAWP,EAAU,CAAC9C,EAAF,GAApBqD,IAGK,CAACL,EAAYC,EAAaI,EAAjC,GASF,SAASD,EAAoBhB,EAAUzE,EAAGqD,GAAS,IAC1CD,EAA2BqB,EADe,wBAE3ClB,EAASxF,EAAgBqF,EAAyB,CAACpD,EAAG,EAAG,EAA/D,IACMwD,EAASzF,EAAgBqF,EAAyB,CAACpD,EAAGyE,EAAJ,SAAxD,IAGMf,GADIL,EAAUoB,+BAApB,GACelB,EAAL,KAAmBC,KAAYD,EAAzC,IAGMrF,EAAS6B,EAFD4D,WAAd,IAIA,OADAzF,OACA,E,ICjCmByH,E,WAEnB,aAcE,6DADI,CAACtD,MAAD,EAAWT,OAAQ,GAVrBS,EAWF,EAXEA,MACAT,EAUF,EAVEA,OAUF,IATExB,gBASF,MATa,EASb,MAREG,iBAQF,MARc,EAQd,MAPEhB,YAOF,MAPS,EAOT,MANEsC,aAMF,MANU,EAMV,MALEC,eAKF,MALY,EAKZ,MAJEC,gBAIF,MAJa,IAIb,MAHEO,uBAGF,MAHoB,IAGpB,MAFEC,sBAEF,MAFmB,KAEnB,sBAEAF,EAAQA,GAARA,EACAT,EAASA,GAATA,EAEA,IAAMnC,EAAQH,EAAd,GAGAyC,EAAW/C,aAAX+C,GAEA,IAAMC,EAAStC,EAAc,CAACa,EAA9B,IACAyB,OAEA4D,KAAA,iBAAwB5C,EAAoB,CAC1CX,MAD0C,EAE1CT,OAF0C,EAG1CC,MAH0C,EAI1CE,SAJ0C,EAK1CO,gBAL0C,EAM1CC,mBAGFqD,KAAA,WAAkBjE,EAAc,CAC9BC,OAD8B,EAE9BnC,MAF8B,EAG9BuC,OAH8B,EAI9BH,MAJ8B,EAK9BC,QAL8B,EAM9BC,aAIF6D,KAAA,QACAA,KAAA,SACAA,KAAA,QAEAA,KAAA,WACAA,KAAA,YACAA,KAAA,OACAA,KAAA,QACAA,KAAA,UACAA,KAAA,WACAA,KAAA,SAEAA,KAAA,eAAsBtF,EAAtBsF,MAEAA,KAAA,gBAGAA,KAAA,OAAcA,KAAKC,OAAOC,KAA1BF,MACAA,KAAA,QAAeA,KAAKG,QAAQD,KAA5BF,MACAA,KAAA,UAAiBA,KAAKT,UAAUW,KAAhCF,MACAA,KAAA,gBAAuBA,KAAKI,gBAAgBF,KAA5CF,MACAA,KAAA,kBAAyBA,KAAKK,kBAAkBH,KAAhDF,MAEA9I,oB,4DAGc,IACPuF,EADO,WACAT,EADA,YACQsE,EADR,sBAC0BC,EAD1B,gBAKRC,EL9FD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAlD,GK+FElE,WACAA,WACA0D,KAAA,uBAYA,IAAMS,EL7GD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAlD,GKgHEnE,QAAiB,CAACG,EAAD,GAAaT,EAAb,EAAjBM,IACAA,QAAqB,CAAC,GAAD,EAArBA,IACAA,WAEA,IAAMoE,EAAWpE,ILpHZ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAlD,GKoHE,GACA,MACE,MAAM,IAAIpD,MAAV,uCAGF8G,KAAA,wBACAA,KAAA,4B,6BAKKnB,GACL,OAAMA,aAAN,IAKEA,UAAmBmB,KAAnBnB,OACAA,WAAoBmB,KADpBnB,QAEAvC,IAAYuC,EAAZvC,iBAAuC0D,KAFvCnB,mBAGAvC,IAAYuC,EAAZvC,WAAiC0D,KAJnC,e,8BAUMzE,GAA4B,6DAAJ,GAAI,IAAtBqE,eAAsB,SAC5Be,EAAgBX,KAAKI,gBAA3B,GACM1C,EAAQL,EAAcsD,EAAeX,KAA3C,uBAFkC,mBAI3B5F,EAJ2B,KAIxBC,EAJwB,KAK5BuG,EAAKhB,EAAUvF,EAAI2F,KAAKhE,OAA9B,EACA,OAAOT,aAAmB,CAACnB,EAApBmB,GAA6B,CAACnB,EAAGwG,EAAIlD,EAA5C,M,gCAKQnC,GAAiD,6DAAJ,GAAI,IAA3CqE,eAA2C,aAA3BnC,eAA2B,WAAjBoD,EAAiB,qBAClDzG,EADkD,KAC/CC,EAD+C,KAC5CoB,EAD4C,KAGnDmF,EAAKhB,EAAUvF,EAAI2F,KAAKhE,OAA9B,EACM8E,EAAerD,GAAWA,EAAUuC,KAAKe,eAAerF,cAA9D,GACMgC,EAAQH,EAAc,CAACnD,EAAGwG,EAAL,GAAaZ,KAAb,wBAA3B,GALyD,EAMvCA,KAAKK,kBANkC,sBAMlDW,EANkD,KAM/CC,EAN+C,KAM5CC,EAN4C,KAQzD,OAAIjH,gBAAJ,GACS,CAAC+G,EAAGC,EAAX,GAEKhH,mBAA2B,CAAC+G,EAAGC,EAA/BhH,GAA6C,CAAC+G,EAArD,K,sCAMczF,GAAK,MACJzB,EADI,sBAGnB,MAAO,CAHY,WAERyB,MAAD,GAAgByE,KAAKe,eAAerF,cAA9C,M,wCAIgBH,GAAK,MACNpB,EADM,sBAGrB,MAAO,CAHc,WAEVoB,MAAD,GAAgByE,KAAKe,eAAeI,cAA9C,M,kCAKUC,GACV,OAAOtH,EAAP,K,oCAIYuH,GACZ,OAAOlH,EAAP,K,sDAI0C,IAAdiH,EAAc,EAAdA,OACtBE,EAAe/D,EADqB,EAANgE,IACIvB,KAAxC,yBACMwB,EAAa1H,EAAnB,GAEM2H,EAAY1D,SAAyBA,OAA3C,IAGA,OAAO5D,EAFW4D,OAAaiC,KAAbjC,OAAlB,M,4CAMgC,IAAdqD,EAAc,EAAdA,OAAQG,EAAM,EAANA,IAC1B,OAAOvB,KAAK0B,6BAA6B,CAACN,OAAD,EAASG,U,gCAI1CvD,GAAsB,IAAd2D,EAAc,uDAAJ,GACnBlF,EADuB,WAChBT,EADgB,cAEM4F,EAAU1K,OAAA,OAAc,CAACuF,MAAD,EAAQT,OAAR,EAAgBgC,UAF9C,IAEvBrD,EAFuB,YAEZH,EAFY,WAEFb,EAFE,OAG9B,OAAO,IAAIoG,EAAoB,CAACtD,MAAD,EAAQT,OAAR,EAAgBrB,UAAhB,EAA2BH,SAA3B,EAAqCb,W,gCAG5DgI,GACR,IAAME,EAAU7B,KAAK8B,kBAArB,GAEMzD,EAAOjF,oBAAI,YAAQyI,EAAA,KAAY,SAAAE,GAAC,OAAIA,EAAJ,QAChCxD,EAAOnF,oBAAI,YAAQyI,EAAA,KAAY,SAAAE,GAAC,OAAIA,EAAJ,QAGtC,MAAO,CAAC,CAAC1D,EAFKjF,oBAAI,YAAQyI,EAAA,KAAY,SAAAE,GAAC,OAAIA,EAAJ,SAEhB,CAACxD,EADVnF,oBAAI,YAAQyI,EAAA,KAAY,SAAAE,GAAC,OAAIA,EAAJ,Y,0CAIT,IAAdJ,EAAc,uDAAJ,GAC1B,OAAOK,EAAUhC,KAAM2B,KAAvB,O,KClOEM,EAAN,SACMC,GAAN,SAIe,SAASC,EAAuB,GAQ5C,IAPD1F,EAOC,EAPDA,MACAT,EAMC,EANDA,OACArB,EAKC,EALDA,UACAH,EAIC,EAJDA,SACAb,EAGC,EAHDA,KAGC,IAFDsC,aAEC,MAFO,EAEP,MADDC,eACC,MADS,EACT,GAEGvB,QAAoBA,EAAxB,OACEA,EAAYnC,EAAImC,EAAD,IAAHnC,KAAZmC,MAEEuB,QAAkBA,EAAtB,OACEA,EAAU1D,EAAI0D,EAAD,IAAH1D,KAAV0D,KAIF,IAAIkG,EAAe,IAAI,EAAoB,CAAC3F,MAAD,EAAQT,OAAR,EAAgBrB,UAAhB,EAA2BH,SAA3B,EAAqCb,SAC5E0I,EAAOD,UAAqB,CAACzH,EAAtByH,IAAX,GACIE,EAAUF,UAAqB,CAACzH,EAAtByH,IAAd,GACIG,EAAJ,EAuBA,OArBID,IAAJ,IAGE3I,GAAQP,UAAU4C,GAAUsG,EAA5B3I,IAIA0I,GADAD,EAAe,IAAI,EAAoB,CAAC3F,MAAD,EAAQT,OAAR,EAAgBrB,UAAhB,EAA2BH,SAA3B,EAAqCb,UACrEyI,QAAqB,CAACzH,EAAtByH,IAAPC,GACAC,EAAUF,UAAqB,CAACzH,EAAtByH,IAAVE,IAEED,EAAJ,EAEEE,IACSD,EAAJ,IAELC,EAASD,EAATC,GAEF,IACE/H,EAAW4H,YAAuB,CAAC3F,EAAD,EAAYT,IAAnCoG,IAAX5H,IAGK,CAACiC,MAAD,EAAQT,OAAR,EAAgBrB,UAAhB,EAA2BH,SAA3B,EAAqCb,KAArC,EAA2CsC,MAA3C,EAAkDC,W,ohCCjD3D,IAAMsG,EAAN,IACMC,EAA4B,CAAC,YAAa,WAAhD,QACMC,EAAe,CACnBC,MADmB,MAEnBC,MAAO,KASM,SAASC,EAAcC,EAAYC,EAAUjF,GAAc,IAAXkF,EAAW,uDAAJ,GAG9DnE,EAAN,GAHwE,EAKHoE,EAAyB,EAAD,EALrB,GAKjEC,EALiE,YAKtDC,EALsD,gBAKvCC,EALuC,SAK/BC,EAL+B,KAK3BC,EAL2B,KAKvBC,EALuB,IAKpBC,EALoB,MAKfC,EALe,OAKTC,EALS,KAYxE,GAAIJ,EAAJ,EAAkB,kBAChB,2BAA6C,KAAlCK,EAAkC,QACrCC,EAAad,EAAnB,GACMe,EAAWd,EAAjB,GACAlE,KAAgBlG,EAAKiL,EAAYC,EAAjChF,IAJc,8BAMhB,SAGF,IAAMiF,EAAIhG,EAAV,EAEMiG,EAAI3K,aAAgBA,UAAUsK,EAAKF,EAAzC,GACMQ,EAAKX,IAAOjK,aAAgBA,UAAUsK,EAAKF,EAA/BpK,GAA0CA,UAA3C,IAAP,GAAV,EAEM6K,EAAiB,EAAvB,EACMC,EAAUhB,EAAYtJ,EAA5B,GAEMuK,EAAiBpG,SAAvB,GACAA,WAEA,IAAMqG,EAAYjK,EAAlB,GAIA,OAHA0E,YAAqBuF,EAArBvF,GACAA,WAAoBuF,EAApBvF,GACAA,SACA,EAIK,SAASwF,EAAiBvB,EAAYC,GAAqB,IAKhE,EALqDC,EAAW,uDAAJ,GAAI,EAChEA,EAAO9L,mBAAP8L,GACOsB,EAFyD,cAE5C1B,EAF4C,QAErC2B,EAFqC,gBAG/CtB,EAAyBH,EAAYC,EAHU,GAGzDQ,EAHyD,IAGtDC,EAHsD,MAI1DgB,EAAS,IAAf,EAQA,OALEC,EADExK,gBAAJ,GACauK,GAAUF,EAArBG,GAEWD,EAAXC,EAGKxK,oBAAgCwK,EAAhCxK,IAAP,EAMF,SAASgJ,EAAyBH,EAAYC,EAAUC,GAEtD,IAAMQ,GADNR,EAAO9L,mBAAP8L,IACA,MACME,EAAYJ,EAAlB,KACM4B,EAAc,CAAC5B,EAAD,UAAuBA,EAA3C,UACM6B,EAAajL,EAAnB,GACMkL,EAAU7B,EAAhB,KACM8B,EAAY,CAAC9B,EAAD,UAAqBA,EAAvC,UACMlJ,EAAQH,EAAYkL,EAA1B,GAEMzB,EAAgBrJ,EAAtB,GACMgL,EAAchL,EAApB,GACMsJ,EAASrF,SAAf,GAEMsF,EAAKjK,SAAS0J,EAAT1J,MAA2B0J,EAAtC,QACMiC,EAAK1B,EAAX,EACMC,EAAKvF,OAAX,EAIMiH,EAAM5L,WAAZ,GAGMqK,EAAOD,EAAb,EACMyB,GAAMF,IAAU1B,EAAV0B,EAAoBtB,IAAOA,EAA5B,IAAiD,EAAIJ,EAAKI,EAArE,GACMyB,GAAMH,IAAU1B,EAAV0B,EAAoBtB,IAAOA,EAA5B,IAAiD,EAAIsB,EAAKtB,EAArE,GACMC,EAAKtK,SAASA,UAAU6L,IAAV7L,GAApB,GACM+L,EAAK/L,SAASA,UAAU8L,IAAV9L,GAApB,GAGA,MAAO,CAAC8J,UAAD,EAAYC,cAAZ,EAA2BC,OAA3B,EAAmCC,GAAnC,EAAuCC,GAAvC,EAA2CC,GAFvC4B,EAAD,GAAV,EAEqD3B,IAA9C,EAAmDC,KAAnD,EAAyDC,GAAzD,EAA6DyB,Q,iCCzGtE,2PAqFO,SAASC,EAAIC,EAAKC,EAAGC,GAG1B,OAFAF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GAClBF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GACXF,EAwHF,SAASxL,EAAMwL,EAAKC,EAAGC,GAG5B,OAFAF,EAAI,GAAKC,EAAE,GAAKC,EAChBF,EAAI,GAAKC,EAAE,GAAKC,EACTF,EAkDF,SAASb,EAAOc,GACrB,IAAIlL,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GACV,OAAOlM,KAAKoM,MAAMpL,EAAGC,GAsBhB,SAASoL,EAAOJ,EAAKC,GAG1B,OAFAD,EAAI,IAAMC,EAAE,GACZD,EAAI,IAAMC,EAAE,GACLD,EA0EF,SAAS1M,EAAK0M,EAAKC,EAAGC,EAAGzH,GAC9B,IAAI4H,EAAKJ,EAAE,GACPK,EAAKL,EAAE,GAGX,OAFAD,EAAI,GAAKK,EAAK5H,GAAKyH,EAAE,GAAKG,GAC1BL,EAAI,GAAKM,EAAK7H,GAAKyH,EAAE,GAAKI,GACnBN,EA6EF,SAASO,EAAcP,EAAKC,EAAG7E,GACpC,IAAIrG,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GAGV,OAFAD,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IACjC4E,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IAC1B4E,EA8FF,IAMIQ,EAncJ,SAAkBR,EAAKC,EAAGC,GAG/B,OAFAF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GAClBF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GACXF,IA4eY,WACnB,IAAIS,EAvkBC,WACL,IAAIT,EAAM,IAAIU,IAAoB,GAOlC,OALIA,KAAuBC,eACzBX,EAAI,GAAK,EACTA,EAAI,GAAK,GAGJA,EA+jBG1N,GADS,I,iCCllBN,SAASsO,EAAgBhP,EAAG8K,GAMzC,OALAkE,EAAkB/O,OAAOC,gBAAkB,SAAyBF,EAAG8K,GAErE,OADA9K,EAAEI,UAAY0K,EACP9K,IAGcA,EAAG8K,GAN5B,mC,iCCAA,6iBAgNO,SAASmE,EAAUb,EAAKC,GAE7B,GAAID,IAAQC,EAAG,CACb,IAAIa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRkB,EAAMlB,EAAE,IACZD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,IACXD,EAAI,GAAKc,EACTd,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,IACXD,EAAI,GAAKe,EACTf,EAAI,GAAKiB,EACTjB,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMgB,EACVhB,EAAI,IAAMkB,EACVlB,EAAI,IAAMmB,OAEVnB,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,IACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,IACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,GACZD,EAAI,IAAMC,EAAE,GACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IAGd,OAAOD,EAUF,SAASoB,EAAOpB,EAAKC,GAC1B,IAAIoB,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IACR0B,EAAM1B,EAAE,IACR2B,EAAM3B,EAAE,IACR4B,EAAM5B,EAAE,IACR6B,EAAM7B,EAAE,IACR8B,EAAMV,EAAME,EAAMT,EAAMQ,EACxBU,EAAMX,EAAMJ,EAAMF,EAAMO,EACxBW,EAAMZ,EAAMH,EAAMF,EAAMM,EACxBY,EAAMpB,EAAMG,EAAMF,EAAMQ,EACxBY,EAAMrB,EAAMI,EAAMF,EAAMO,EACxBa,EAAMrB,EAAMG,EAAMF,EAAMC,EACxBoB,EAAMb,EAAMI,EAAMH,EAAME,EACxBW,EAAMd,EAAMK,EAAMH,EAAMC,EACxBY,EAAMf,EAAMM,EAAMX,EAAMQ,EACxBa,EAAMf,EAAMI,EAAMH,EAAME,EACxBa,EAAMhB,EAAMK,EAAMX,EAAMS,EACxBc,EAAMhB,EAAMI,EAAMX,EAAMU,EAExBc,EAAMZ,EAAMW,EAAMV,EAAMS,EAAMR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKM,GAILA,EAAM,EAAMA,EACZ3C,EAAI,IAAMuB,EAAMmB,EAAMzB,EAAMwB,EAAMvB,EAAMsB,GAAOG,EAC/C3C,EAAI,IAAMe,EAAM0B,EAAM3B,EAAM4B,EAAM1B,EAAMwB,GAAOG,EAC/C3C,EAAI,IAAM4B,EAAMQ,EAAMP,EAAMM,EAAML,EAAMI,GAAOS,EAC/C3C,EAAI,IAAM0B,EAAMS,EAAMV,EAAMW,EAAMjB,EAAMe,GAAOS,EAC/C3C,EAAI,IAAMiB,EAAMsB,EAAMjB,EAAMoB,EAAMxB,EAAMoB,GAAOK,EAC/C3C,EAAI,IAAMqB,EAAMqB,EAAM3B,EAAMwB,EAAMvB,EAAMsB,GAAOK,EAC/C3C,EAAI,IAAM6B,EAAMI,EAAMN,EAAMS,EAAMN,EAAME,GAAOW,EAC/C3C,EAAI,IAAMwB,EAAMY,EAAMV,EAAMO,EAAMd,EAAMa,GAAOW,EAC/C3C,EAAI,IAAMsB,EAAMmB,EAAMlB,EAAMgB,EAAMrB,EAAMmB,GAAOM,EAC/C3C,EAAI,IAAMc,EAAMyB,EAAMlB,EAAMoB,EAAMzB,EAAMqB,GAAOM,EAC/C3C,EAAI,KAAO2B,EAAMQ,EAAMP,EAAMK,EAAMH,EAAMC,GAAOY,EAChD3C,EAAI,KAAOyB,EAAMQ,EAAMT,EAAMW,EAAMhB,EAAMY,GAAOY,EAChD3C,EAAI,KAAOuB,EAAMe,EAAMhB,EAAMkB,EAAMvB,EAAMoB,GAAOM,EAChD3C,EAAI,KAAOqB,EAAMmB,EAAM1B,EAAMwB,EAAMvB,EAAMsB,GAAOM,EAChD3C,EAAI,KAAO4B,EAAMI,EAAML,EAAMO,EAAML,EAAME,GAAOY,EAChD3C,EAAI,KAAOwB,EAAMU,EAAMT,EAAMO,EAAMN,EAAMK,GAAOY,EACzC3C,GApBE,KAwEJ,SAAS4C,EAAY3C,GAC1B,IAAIoB,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IACR0B,EAAM1B,EAAE,IACR2B,EAAM3B,EAAE,IACR4B,EAAM5B,EAAE,IACR6B,EAAM7B,EAAE,IAcZ,OAbUoB,EAAME,EAAMT,EAAMQ,IAWlBI,EAAMI,EAAMX,EAAMU,IAVlBR,EAAMJ,EAAMF,EAAMO,IASlBG,EAAMK,EAAMX,EAAMS,IARlBP,EAAMH,EAAMF,EAAMM,IAOlBG,EAAMI,EAAMH,EAAME,IANlBd,EAAMG,EAAMF,EAAMQ,IAKlBC,EAAMM,EAAMX,EAAMQ,IAJlBb,EAAMI,EAAMF,EAAMO,IAGlBC,EAAMK,EAAMH,EAAMC,IAFlBZ,EAAMG,EAAMF,EAAMC,IAClBO,EAAMI,EAAMH,EAAME,GAkBvB,SAASkB,EAAS7C,EAAKC,EAAGC,GAC/B,IAAImB,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IACR0B,EAAM1B,EAAE,IACR2B,EAAM3B,EAAE,IACR4B,EAAM5B,EAAE,IACR6B,EAAM7B,EAAE,IAERL,EAAKM,EAAE,GACPL,EAAKK,EAAE,GACP4C,EAAK5C,EAAE,GACP6C,EAAK7C,EAAE,GA6BX,OA5BAF,EAAI,GAAKJ,EAAKyB,EAAMxB,EAAKyB,EAAMwB,EAAKtB,EAAMuB,EAAKpB,EAC/C3B,EAAI,GAAKJ,EAAKkB,EAAMjB,EAAK0B,EAAMuB,EAAKrB,EAAMsB,EAAKnB,EAC/C5B,EAAI,GAAKJ,EAAKmB,EAAMlB,EAAKoB,EAAM6B,EAAKpB,EAAMqB,EAAKlB,EAC/C7B,EAAI,GAAKJ,EAAKoB,EAAMnB,EAAKqB,EAAM4B,EAAK3B,EAAM4B,EAAKjB,EAC/ClC,EAAKM,EAAE,GACPL,EAAKK,EAAE,GACP4C,EAAK5C,EAAE,GACP6C,EAAK7C,EAAE,GACPF,EAAI,GAAKJ,EAAKyB,EAAMxB,EAAKyB,EAAMwB,EAAKtB,EAAMuB,EAAKpB,EAC/C3B,EAAI,GAAKJ,EAAKkB,EAAMjB,EAAK0B,EAAMuB,EAAKrB,EAAMsB,EAAKnB,EAC/C5B,EAAI,GAAKJ,EAAKmB,EAAMlB,EAAKoB,EAAM6B,EAAKpB,EAAMqB,EAAKlB,EAC/C7B,EAAI,GAAKJ,EAAKoB,EAAMnB,EAAKqB,EAAM4B,EAAK3B,EAAM4B,EAAKjB,EAC/ClC,EAAKM,EAAE,GACPL,EAAKK,EAAE,GACP4C,EAAK5C,EAAE,IACP6C,EAAK7C,EAAE,IACPF,EAAI,GAAKJ,EAAKyB,EAAMxB,EAAKyB,EAAMwB,EAAKtB,EAAMuB,EAAKpB,EAC/C3B,EAAI,GAAKJ,EAAKkB,EAAMjB,EAAK0B,EAAMuB,EAAKrB,EAAMsB,EAAKnB,EAC/C5B,EAAI,IAAMJ,EAAKmB,EAAMlB,EAAKoB,EAAM6B,EAAKpB,EAAMqB,EAAKlB,EAChD7B,EAAI,IAAMJ,EAAKoB,EAAMnB,EAAKqB,EAAM4B,EAAK3B,EAAM4B,EAAKjB,EAChDlC,EAAKM,EAAE,IACPL,EAAKK,EAAE,IACP4C,EAAK5C,EAAE,IACP6C,EAAK7C,EAAE,IACPF,EAAI,IAAMJ,EAAKyB,EAAMxB,EAAKyB,EAAMwB,EAAKtB,EAAMuB,EAAKpB,EAChD3B,EAAI,IAAMJ,EAAKkB,EAAMjB,EAAK0B,EAAMuB,EAAKrB,EAAMsB,EAAKnB,EAChD5B,EAAI,IAAMJ,EAAKmB,EAAMlB,EAAKoB,EAAM6B,EAAKpB,EAAMqB,EAAKlB,EAChD7B,EAAI,IAAMJ,EAAKoB,EAAMnB,EAAKqB,EAAM4B,EAAK3B,EAAM4B,EAAKjB,EACzC9B,EAWF,SAAS5D,EAAU4D,EAAKC,EAAG+C,GAChC,IAGI3B,EAAKP,EAAKC,EAAKC,EACfM,EAAKC,EAAKN,EAAKC,EACfM,EAAKC,EAAKC,EAAKP,EALfpM,EAAIiO,EAAE,GACNhO,EAAIgO,EAAE,GACN5M,EAAI4M,EAAE,GAyCV,OApCI/C,IAAMD,GACRA,EAAI,IAAMC,EAAE,GAAKlL,EAAIkL,EAAE,GAAKjL,EAAIiL,EAAE,GAAK7J,EAAI6J,EAAE,IAC7CD,EAAI,IAAMC,EAAE,GAAKlL,EAAIkL,EAAE,GAAKjL,EAAIiL,EAAE,GAAK7J,EAAI6J,EAAE,IAC7CD,EAAI,IAAMC,EAAE,GAAKlL,EAAIkL,EAAE,GAAKjL,EAAIiL,EAAE,IAAM7J,EAAI6J,EAAE,IAC9CD,EAAI,IAAMC,EAAE,GAAKlL,EAAIkL,EAAE,GAAKjL,EAAIiL,EAAE,IAAM7J,EAAI6J,EAAE,MAE9CoB,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IACRD,EAAI,GAAKqB,EACTrB,EAAI,GAAKc,EACTd,EAAI,GAAKe,EACTf,EAAI,GAAKgB,EACThB,EAAI,GAAKsB,EACTtB,EAAI,GAAKuB,EACTvB,EAAI,GAAKiB,EACTjB,EAAI,GAAKkB,EACTlB,EAAI,GAAKwB,EACTxB,EAAI,GAAKyB,EACTzB,EAAI,IAAM0B,EACV1B,EAAI,IAAMmB,EACVnB,EAAI,IAAMqB,EAAMtM,EAAIuM,EAAMtM,EAAIwM,EAAMpL,EAAI6J,EAAE,IAC1CD,EAAI,IAAMc,EAAM/L,EAAIwM,EAAMvM,EAAIyM,EAAMrL,EAAI6J,EAAE,IAC1CD,EAAI,IAAMe,EAAMhM,EAAIkM,EAAMjM,EAAI0M,EAAMtL,EAAI6J,EAAE,IAC1CD,EAAI,IAAMgB,EAAMjM,EAAImM,EAAMlM,EAAImM,EAAM/K,EAAI6J,EAAE,KAGrCD,EAWF,SAASxL,EAAMwL,EAAKC,EAAG+C,GAC5B,IAAIjO,EAAIiO,EAAE,GACNhO,EAAIgO,EAAE,GACN5M,EAAI4M,EAAE,GAiBV,OAhBAhD,EAAI,GAAKC,EAAE,GAAKlL,EAChBiL,EAAI,GAAKC,EAAE,GAAKlL,EAChBiL,EAAI,GAAKC,EAAE,GAAKlL,EAChBiL,EAAI,GAAKC,EAAE,GAAKlL,EAChBiL,EAAI,GAAKC,EAAE,GAAKjL,EAChBgL,EAAI,GAAKC,EAAE,GAAKjL,EAChBgL,EAAI,GAAKC,EAAE,GAAKjL,EAChBgL,EAAI,GAAKC,EAAE,GAAKjL,EAChBgL,EAAI,GAAKC,EAAE,GAAK7J,EAChB4J,EAAI,GAAKC,EAAE,GAAK7J,EAChB4J,EAAI,IAAMC,EAAE,IAAM7J,EAClB4J,EAAI,IAAMC,EAAE,IAAM7J,EAClB4J,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACLD,EAYF,SAASiD,EAAOjD,EAAKC,EAAGiD,EAAKC,GAClC,IAII1E,EAAG2E,EAAG3K,EACN4I,EAAKP,EAAKC,EAAKC,EACfM,EAAKC,EAAKN,EAAKC,EACfM,EAAKC,EAAKC,EAAKP,EACfY,EAAKC,EAAKC,EACVQ,EAAKC,EAAKW,EACVC,EAAKC,EAAKC,EAVVzO,EAAIoO,EAAK,GACTnO,EAAImO,EAAK,GACT/M,EAAI+M,EAAK,GACTM,EAAM1P,KAAKoM,MAAMpL,EAAGC,EAAGoB,GAS3B,OAAIqN,EAAM/C,IACD,MAIT3L,GADA0O,EAAM,EAAIA,EAEVzO,GAAKyO,EACLrN,GAAKqN,EACLhF,EAAI1K,KAAK2P,IAAIR,GAEbzK,EAAI,GADJ2K,EAAIrP,KAAK4P,IAAIT,IAEb7B,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IAER8B,EAAMhN,EAAIA,EAAI0D,EAAI2K,EAClBpB,EAAMhN,EAAID,EAAI0D,EAAIrC,EAAIqI,EACtBwD,EAAM7L,EAAIrB,EAAI0D,EAAIzD,EAAIyJ,EACtBgE,EAAM1N,EAAIC,EAAIyD,EAAIrC,EAAIqI,EACtBiE,EAAM1N,EAAIA,EAAIyD,EAAI2K,EAClBC,EAAMjN,EAAIpB,EAAIyD,EAAI1D,EAAI0J,EACtB6E,EAAMvO,EAAIqB,EAAIqC,EAAIzD,EAAIyJ,EACtB8E,EAAMvO,EAAIoB,EAAIqC,EAAI1D,EAAI0J,EACtB+E,EAAMpN,EAAIA,EAAIqC,EAAI2K,EAElBpD,EAAI,GAAKqB,EAAMU,EAAMT,EAAMU,EAAMR,EAAMS,EACvCjC,EAAI,GAAKc,EAAMiB,EAAMR,EAAMS,EAAMP,EAAMQ,EACvCjC,EAAI,GAAKe,EAAMgB,EAAMd,EAAMe,EAAMN,EAAMO,EACvCjC,EAAI,GAAKgB,EAAMe,EAAMb,EAAMc,EAAMb,EAAMc,EACvCjC,EAAI,GAAKqB,EAAMoB,EAAMnB,EAAMoB,EAAMlB,EAAM6B,EACvCrD,EAAI,GAAKc,EAAM2B,EAAMlB,EAAMmB,EAAMjB,EAAM4B,EACvCrD,EAAI,GAAKe,EAAM0B,EAAMxB,EAAMyB,EAAMhB,EAAM2B,EACvCrD,EAAI,GAAKgB,EAAMyB,EAAMvB,EAAMwB,EAAMvB,EAAMkC,EACvCrD,EAAI,GAAKqB,EAAMiC,EAAMhC,EAAMiC,EAAM/B,EAAMgC,EACvCxD,EAAI,GAAKc,EAAMwC,EAAM/B,EAAMgC,EAAM9B,EAAM+B,EACvCxD,EAAI,IAAMe,EAAMuC,EAAMrC,EAAMsC,EAAM7B,EAAM8B,EACxCxD,EAAI,IAAMgB,EAAMsC,EAAMpC,EAAMqC,EAAMpC,EAAMqC,EAEpCvD,IAAMD,IAERA,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,KAGPD,GAWF,SAAS4D,EAAQ5D,EAAKC,EAAGiD,GAC9B,IAAIzE,EAAI1K,KAAK2P,IAAIR,GACbE,EAAIrP,KAAK4P,IAAIT,GACb5B,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IAuBZ,OArBIA,IAAMD,IAERA,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,KAIdD,EAAI,GAAKsB,EAAM8B,EAAI5B,EAAM/C,EACzBuB,EAAI,GAAKuB,EAAM6B,EAAI3B,EAAMhD,EACzBuB,EAAI,GAAKiB,EAAMmC,EAAI1B,EAAMjD,EACzBuB,EAAI,GAAKkB,EAAMkC,EAAIjC,EAAM1C,EACzBuB,EAAI,GAAKwB,EAAM4B,EAAI9B,EAAM7C,EACzBuB,EAAI,GAAKyB,EAAM2B,EAAI7B,EAAM9C,EACzBuB,EAAI,IAAM0B,EAAM0B,EAAInC,EAAMxC,EAC1BuB,EAAI,IAAMmB,EAAMiC,EAAIlC,EAAMzC,EACnBuB,EAWF,SAAS6D,EAAQ7D,EAAKC,EAAGiD,GAC9B,IAAIzE,EAAI1K,KAAK2P,IAAIR,GACbE,EAAIrP,KAAK4P,IAAIT,GACb7B,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACRkB,EAAMlB,EAAE,IAuBZ,OArBIA,IAAMD,IAERA,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,KAIdD,EAAI,GAAKqB,EAAM+B,EAAI5B,EAAM/C,EACzBuB,EAAI,GAAKc,EAAMsC,EAAI3B,EAAMhD,EACzBuB,EAAI,GAAKe,EAAMqC,EAAI1B,EAAMjD,EACzBuB,EAAI,GAAKgB,EAAMoC,EAAIjC,EAAM1C,EACzBuB,EAAI,GAAKqB,EAAM5C,EAAI+C,EAAM4B,EACzBpD,EAAI,GAAKc,EAAMrC,EAAIgD,EAAM2B,EACzBpD,EAAI,IAAMe,EAAMtC,EAAIiD,EAAM0B,EAC1BpD,EAAI,IAAMgB,EAAMvC,EAAI0C,EAAMiC,EACnBpD,EAWF,SAAS8D,EAAQ9D,EAAKC,EAAGiD,GAC9B,IAAIzE,EAAI1K,KAAK2P,IAAIR,GACbE,EAAIrP,KAAK4P,IAAIT,GACb7B,EAAMpB,EAAE,GACRa,EAAMb,EAAE,GACRc,EAAMd,EAAE,GACRe,EAAMf,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRgB,EAAMhB,EAAE,GACRiB,EAAMjB,EAAE,GAuBZ,OArBIA,IAAMD,IAERA,EAAI,GAAKC,EAAE,GACXD,EAAI,GAAKC,EAAE,GACXD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,IACZD,EAAI,IAAMC,EAAE,KAIdD,EAAI,GAAKqB,EAAM+B,EAAI9B,EAAM7C,EACzBuB,EAAI,GAAKc,EAAMsC,EAAI7B,EAAM9C,EACzBuB,EAAI,GAAKe,EAAMqC,EAAInC,EAAMxC,EACzBuB,EAAI,GAAKgB,EAAMoC,EAAIlC,EAAMzC,EACzBuB,EAAI,GAAKsB,EAAM8B,EAAI/B,EAAM5C,EACzBuB,EAAI,GAAKuB,EAAM6B,EAAItC,EAAMrC,EACzBuB,EAAI,GAAKiB,EAAMmC,EAAIrC,EAAMtC,EACzBuB,EAAI,GAAKkB,EAAMkC,EAAIpC,EAAMvC,EAClBuB,EAyhBF,SAAS+D,EAAS/D,EAAKgE,GAC5B,IAAIjP,EAAIiP,EAAE,GACNhP,EAAIgP,EAAE,GACN5N,EAAI4N,EAAE,GACNtF,EAAIsF,EAAE,GACNC,EAAKlP,EAAIA,EACTwG,EAAKvG,EAAIA,EACTkP,EAAK9N,EAAIA,EACT+N,EAAKpP,EAAIkP,EACTG,EAAKpP,EAAIiP,EACTI,EAAKrP,EAAIuG,EACT+I,EAAKlO,EAAI6N,EACTM,EAAKnO,EAAImF,EACTiJ,EAAKpO,EAAI8N,EACTO,EAAK/F,EAAIuF,EACTS,EAAKhG,EAAInD,EACToJ,EAAKjG,EAAIwF,EAiBb,OAhBAlE,EAAI,GAAK,EAAIqE,EAAKG,EAClBxE,EAAI,GAAKoE,EAAKO,EACd3E,EAAI,GAAKsE,EAAKI,EACd1E,EAAI,GAAK,EACTA,EAAI,GAAKoE,EAAKO,EACd3E,EAAI,GAAK,EAAImE,EAAKK,EAClBxE,EAAI,GAAKuE,EAAKE,EACdzE,EAAI,GAAK,EACTA,EAAI,GAAKsE,EAAKI,EACd1E,EAAI,GAAKuE,EAAKE,EACdzE,EAAI,IAAM,EAAImE,EAAKE,EACnBrE,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAeF,SAAS4E,EAAQ5E,EAAK1G,EAAMC,EAAOF,EAAQD,EAAKvB,EAAMC,GAC3D,IAAI+M,EAAK,GAAKtL,EAAQD,GAClBwL,EAAK,GAAK1L,EAAMC,GAChB0L,EAAK,GAAKlN,EAAOC,GAiBrB,OAhBAkI,EAAI,GAAY,EAAPnI,EAAWgN,EACpB7E,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAY,EAAPnI,EAAWiN,EACpB9E,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMzG,EAAQD,GAAQuL,EAC1B7E,EAAI,IAAM5G,EAAMC,GAAUyL,EAC1B9E,EAAI,KAAOlI,EAAMD,GAAQkN,EACzB/E,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAMlI,EAAMD,EAAO,EAAIkN,EAC3B/E,EAAI,IAAM,EACHA,EAcF,SAASgF,EAAYhF,EAAKiF,EAAMtN,EAAQE,EAAMC,GACnD,IACIiN,EADAG,EAAI,EAAMnR,KAAKoR,IAAIF,EAAO,GA0B9B,OAxBAjF,EAAI,GAAKkF,EAAIvN,EACbqI,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKkF,EACTlF,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAEC,MAAPlI,GAAeA,IAAQsN,KACzBL,EAAK,GAAKlN,EAAOC,GACjBkI,EAAI,KAAOlI,EAAMD,GAAQkN,EACzB/E,EAAI,IAAM,EAAIlI,EAAMD,EAAOkN,IAE3B/E,EAAI,KAAO,EACXA,EAAI,KAAO,EAAInI,GAGVmI,EAoDF,SAASqF,EAAMrF,EAAK1G,EAAMC,EAAOF,EAAQD,EAAKvB,EAAMC,GACzD,IAAIwN,EAAK,GAAKhM,EAAOC,GACjBgM,EAAK,GAAKlM,EAASD,GACnB2L,EAAK,GAAKlN,EAAOC,GAiBrB,OAhBAkI,EAAI,IAAM,EAAIsF,EACdtF,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIuF,EACdvF,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAI+E,EACd/E,EAAI,IAAM,EACVA,EAAI,KAAO1G,EAAOC,GAAS+L,EAC3BtF,EAAI,KAAO5G,EAAMC,GAAUkM,EAC3BvF,EAAI,KAAOlI,EAAMD,GAAQkN,EACzB/E,EAAI,IAAM,EACHA,EAaF,SAASwF,EAAOxF,EAAKyF,EAAK1O,EAAQ2O,GACvC,IAAIC,EAAIC,EAAI3B,EAAI4B,EAAIC,EAAIvK,EAAIpF,EAAIqC,EAAI0L,EAAIT,EACpCsC,EAAON,EAAI,GACXO,EAAOP,EAAI,GACXQ,EAAOR,EAAI,GACXS,EAAMR,EAAG,GACTS,EAAMT,EAAG,GACTU,EAAMV,EAAG,GACTW,EAAUtP,EAAO,GACjBuP,EAAUvP,EAAO,GACjBwP,EAAUxP,EAAO,GAErB,OAAIhD,KAAKyS,IAAIT,EAAOM,GAAW3F,KAAoB3M,KAAKyS,IAAIR,EAAOM,GAAW5F,KAAoB3M,KAAKyS,IAAIP,EAAOM,GAAW7F,IAlyCxH,SAAkBV,GAiBvB,OAhBAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAkxCEyG,CAASzG,IAGlB7J,EAAK4P,EAAOM,EACZ7N,EAAKwN,EAAOM,EACZpC,EAAK+B,EAAOM,EAKZZ,EAAKQ,GADLjC,GAHAT,EAAM,EAAI1P,KAAKoM,MAAMhK,EAAIqC,EAAI0L,IAIbkC,GAFhB5N,GAAMiL,GAGNmC,EAAKQ,GAJLjQ,GAAMsN,GAIUyC,EAAMhC,EACtBD,EAAKiC,EAAM1N,EAAK2N,EAAMhQ,GACtBsN,EAAM1P,KAAKoM,MAAMwF,EAAIC,EAAI3B,KAQvB0B,GADAlC,EAAM,EAAIA,EAEVmC,GAAMnC,EACNQ,GAAMR,IAPNkC,EAAK,EACLC,EAAK,EACL3B,EAAK,GAQP4B,EAAKrN,EAAKyL,EAAKC,EAAK0B,EACpBE,EAAK5B,EAAKyB,EAAKxP,EAAK8N,EACpB1I,EAAKpF,EAAKyP,EAAKpN,EAAKmN,GACpBlC,EAAM1P,KAAKoM,MAAM0F,EAAIC,EAAIvK,KAQvBsK,GADApC,EAAM,EAAIA,EAEVqC,GAAMrC,EACNlI,GAAMkI,IAPNoC,EAAK,EACLC,EAAK,EACLvK,EAAK,GAQPyE,EAAI,GAAK2F,EACT3F,EAAI,GAAK6F,EACT7F,EAAI,GAAK7J,EACT6J,EAAI,GAAK,EACTA,EAAI,GAAK4F,EACT5F,EAAI,GAAK8F,EACT9F,EAAI,GAAKxH,EACTwH,EAAI,GAAK,EACTA,EAAI,GAAKiE,EACTjE,EAAI,GAAKzE,EACTyE,EAAI,IAAMkE,EACVlE,EAAI,IAAM,EACVA,EAAI,MAAQ2F,EAAKI,EAAOH,EAAKI,EAAO/B,EAAKgC,GACzCjG,EAAI,MAAQ6F,EAAKE,EAAOD,EAAKE,EAAOzK,EAAK0K,GACzCjG,EAAI,MAAQ7J,EAAK4P,EAAOvN,EAAKwN,EAAO9B,EAAK+B,GACzCjG,EAAI,IAAM,EACHA,GAqNF,SAASpF,EAAOqF,EAAGC,GACxB,IAAIwG,EAAKzG,EAAE,GACP0G,EAAK1G,EAAE,GACP2G,EAAK3G,EAAE,GACP4G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPkH,EAAKlH,EAAE,GACPqB,EAAMrB,EAAE,IACRsB,EAAMtB,EAAE,IACRgB,EAAMhB,EAAE,IACRiB,EAAMjB,EAAE,IACRmH,EAAMnH,EAAE,IACRoH,EAAMpH,EAAE,IACRL,EAAKM,EAAE,GACPL,EAAKK,EAAE,GACP4C,EAAK5C,EAAE,GACP6C,EAAK7C,EAAE,GACPoH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACPwH,EAAKxH,EAAE,GACPyH,EAAKzH,EAAE,GACPuC,EAAMvC,EAAE,IACRwC,EAAMxC,EAAE,IACRmD,EAAMnD,EAAE,IACR0H,EAAM1H,EAAE,IACR2H,EAAM3H,EAAE,IACR4H,EAAM5H,EAAE,IACZ,OAAOnM,KAAKyS,IAAIE,EAAK9G,IAAOc,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIE,GAAK3S,KAAKyS,IAAI5G,KAAQ7L,KAAKyS,IAAIG,EAAK9G,IAAOa,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIG,GAAK5S,KAAKyS,IAAI3G,KAAQ9L,KAAKyS,IAAII,EAAK9D,IAAOpC,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAII,GAAK7S,KAAKyS,IAAI1D,KAAQ/O,KAAKyS,IAAIK,EAAK9D,IAAOrC,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIK,GAAK9S,KAAKyS,IAAIzD,KAAQhP,KAAKyS,IAAIM,EAAKQ,IAAO5G,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIM,GAAK/S,KAAKyS,IAAIc,KAAQvT,KAAKyS,IAAIO,EAAKQ,IAAO7G,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIO,GAAKhT,KAAKyS,IAAIe,KAAQxT,KAAKyS,IAAIQ,EAAKQ,IAAO9G,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIQ,GAAKjT,KAAKyS,IAAIgB,KAAQzT,KAAKyS,IAAIS,EAAKQ,IAAO/G,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIS,GAAKlT,KAAKyS,IAAIiB,KAAQ1T,KAAKyS,IAAIU,EAAKQ,IAAOhH,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIU,GAAKnT,KAAKyS,IAAIkB,KAAQ3T,KAAKyS,IAAIW,EAAKQ,IAAOjH,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIW,GAAKpT,KAAKyS,IAAImB,KAAQ5T,KAAKyS,IAAIlF,EAAMmB,IAAQ/B,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIlF,GAAMvN,KAAKyS,IAAI/D,KAAS1O,KAAKyS,IAAIjF,EAAMmB,IAAQhC,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIjF,GAAMxN,KAAKyS,IAAI9D,KAAS3O,KAAKyS,IAAIvF,EAAMoC,IAAQ3C,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIvF,GAAMlN,KAAKyS,IAAInD,KAAStP,KAAKyS,IAAItF,EAAM0G,IAAQlH,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAItF,GAAMnN,KAAKyS,IAAIoB,KAAS7T,KAAKyS,IAAIY,EAAMS,IAAQnH,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIY,GAAMrT,KAAKyS,IAAIqB,KAAS9T,KAAKyS,IAAIa,EAAMS,IAAQpH,IAAmB3M,KAAKgU,IAAI,EAAKhU,KAAKyS,IAAIa,GAAMtT,KAAKyS,IAAIsB,M,iCCxwDx2C,iFAgPO,SAAStT,EAAMwL,EAAKC,EAAGC,GAK5B,OAJAF,EAAI,GAAKC,EAAE,GAAKC,EAChBF,EAAI,GAAKC,EAAE,GAAKC,EAChBF,EAAI,GAAKC,EAAE,GAAKC,EAChBF,EAAI,GAAKC,EAAE,GAAKC,EACTF,EA2OF,SAASO,EAAcP,EAAKC,EAAG7E,GACpC,IAAIrG,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GACN7J,EAAI6J,EAAE,GACNvB,EAAIuB,EAAE,GAKV,OAJAD,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,IAAMsD,EAClDsB,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,IAAMsD,EAClDsB,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IAAMhF,EAAIgF,EAAE,IAAMsD,EACnDsB,EAAI,GAAK5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IAAMhF,EAAIgF,EAAE,IAAMsD,EAC5CsB,GA4IY,WACnB,IAAIS,EA1mBC,WACL,IAAIT,EAAM,IAAIU,IAAoB,GASlC,OAPIA,KAAuBC,eACzBX,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAGJA,EAgmBG1N,GADS,I,iCCrnBrB,sGAKO,IAAI6K,EAAU,KACV6K,EAAqC,qBAAjBrH,aAA+BA,aAAesH,MAClEC,EAASnU,KAAKoU,OAUZpU,KAAKD,GAuBbC,KAAKoM,QAAOpM,KAAKoM,MAAQ,WAI5B,IAHA,IAAInL,EAAI,EACJoT,EAAIC,UAAUlJ,OAEXiJ,KACLpT,GAAKqT,UAAUD,GAAKC,UAAUD,GAGhC,OAAOrU,KAAKuU,KAAKtT,M,iCChDnB,iWAoTO,SAASoL,EAAOJ,EAAKC,GAI1B,OAHAD,EAAI,IAAMC,EAAE,GACZD,EAAI,IAAMC,EAAE,GACZD,EAAI,IAAMC,EAAE,GACLD,EA4DF,SAASuI,EAAMvI,EAAKC,EAAGC,GAC5B,IAAIG,EAAKJ,EAAE,GACPK,EAAKL,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPyI,EAAKzI,EAAE,GAIX,OAHAF,EAAI,GAAKM,EAAKqI,EAAKH,EAAKE,EACxB1I,EAAI,GAAKwI,EAAKC,EAAKpI,EAAKsI,EACxB3I,EAAI,GAAKK,EAAKqI,EAAKpI,EAAKmI,EACjBzI,EAiGF,SAASO,EAAcP,EAAKC,EAAG7E,GACpC,IAAIrG,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GACN7J,EAAI6J,EAAE,GACNvB,EAAItD,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IAAMhF,EAAIgF,EAAE,IAK5C,OAJAsD,EAAIA,GAAK,EACTsB,EAAI,IAAM5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,KAAOsD,EACpDsB,EAAI,IAAM5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,KAAOsD,EACpDsB,EAAI,IAAM5E,EAAE,GAAKrG,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,IAAMhF,EAAIgF,EAAE,KAAOsD,EAC9CsB,EAWF,SAAS4I,EAAc5I,EAAKC,EAAG7E,GACpC,IAAIrG,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GACN7J,EAAI6J,EAAE,GAIV,OAHAD,EAAI,GAAKjL,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,GACrC4E,EAAI,GAAKjL,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,GACrC4E,EAAI,GAAKjL,EAAIqG,EAAE,GAAKpG,EAAIoG,EAAE,GAAKhF,EAAIgF,EAAE,GAC9B4E,EAYF,SAAS6I,EAAc7I,EAAKC,EAAG+D,GAEpC,IAAI8E,EAAK9E,EAAE,GACP+E,EAAK/E,EAAE,GACPgF,EAAKhF,EAAE,GACPiF,EAAKjF,EAAE,GACPjP,EAAIkL,EAAE,GACNjL,EAAIiL,EAAE,GACN7J,EAAI6J,EAAE,GAGNiJ,EAAMH,EAAK3S,EAAI4S,EAAKhU,EACpBmU,EAAMH,EAAKjU,EAAI+T,EAAK1S,EACpBgT,EAAMN,EAAK9T,EAAI+T,EAAKhU,EAEpBsU,EAAON,EAAKK,EAAMJ,EAAKG,EACvBG,EAAON,EAAKE,EAAMJ,EAAKM,EACvBG,EAAOT,EAAKK,EAAMJ,EAAKG,EAEvBM,EAAU,EAALP,EAYT,OAXAC,GAAOM,EACPL,GAAOK,EACPJ,GAAOI,EAEPH,GAAQ,EACRC,GAAQ,EACRC,GAAQ,EAERvJ,EAAI,GAAKjL,EAAImU,EAAMG,EACnBrJ,EAAI,GAAKhL,EAAImU,EAAMG,EACnBtJ,EAAI,GAAK5J,EAAIgT,EAAMG,EACZvJ,EAWF,SAAS4D,EAAQ5D,EAAKC,EAAGC,EAAGgD,GACjC,IAAIxG,EAAI,GACJ+M,EAAI,GAaR,OAXA/M,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAEhBuJ,EAAE,GAAK/M,EAAE,GACT+M,EAAE,GAAK/M,EAAE,GAAK3I,KAAK4P,IAAIT,GAAOxG,EAAE,GAAK3I,KAAK2P,IAAIR,GAC9CuG,EAAE,GAAK/M,EAAE,GAAK3I,KAAK2P,IAAIR,GAAOxG,EAAE,GAAK3I,KAAK4P,IAAIT,GAE9ClD,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GACXF,EAWF,SAAS6D,EAAQ7D,EAAKC,EAAGC,EAAGgD,GACjC,IAAIxG,EAAI,GACJ+M,EAAI,GAaR,OAXA/M,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAEhBuJ,EAAE,GAAK/M,EAAE,GAAK3I,KAAK2P,IAAIR,GAAOxG,EAAE,GAAK3I,KAAK4P,IAAIT,GAC9CuG,EAAE,GAAK/M,EAAE,GACT+M,EAAE,GAAK/M,EAAE,GAAK3I,KAAK4P,IAAIT,GAAOxG,EAAE,GAAK3I,KAAK2P,IAAIR,GAE9ClD,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GACXF,EAWF,SAAS8D,EAAQ9D,EAAKC,EAAGC,EAAGgD,GACjC,IAAIxG,EAAI,GACJ+M,EAAI,GAaR,OAXA/M,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAChBxD,EAAE,GAAKuD,EAAE,GAAKC,EAAE,GAEhBuJ,EAAE,GAAK/M,EAAE,GAAK3I,KAAK4P,IAAIT,GAAOxG,EAAE,GAAK3I,KAAK2P,IAAIR,GAC9CuG,EAAE,GAAK/M,EAAE,GAAK3I,KAAK2P,IAAIR,GAAOxG,EAAE,GAAK3I,KAAK4P,IAAIT,GAC9CuG,EAAE,GAAK/M,EAAE,GAETsD,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GAClBF,EAAI,GAAKyJ,EAAE,GAAKvJ,EAAE,GACXF,EASF,SAAS0J,EAAMzJ,EAAGC,GACvB,IAAIG,EAAKJ,EAAE,GACPK,EAAKL,EAAE,GACPuI,EAAKvI,EAAE,GACPwI,EAAKvI,EAAE,GACPwI,EAAKxI,EAAE,GACPyI,EAAKzI,EAAE,GAGPyJ,EAFO5V,KAAKuU,KAAKjI,EAAKA,EAAKC,EAAKA,EAAKkI,EAAKA,GACnCzU,KAAKuU,KAAKG,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAE1CiB,EAASD,GA9RR,SAAa1J,EAAGC,GACrB,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GA6RxB2J,CAAI5J,EAAGC,GAAKyJ,EAChC,OAAO5V,KAAK+V,KAAK/V,KAAKgW,IAAIhW,KAAKgU,IAAI6B,GAAS,GAAI,IA0D3C,IAAIpJ,EAzkBJ,SAAkBR,EAAKC,EAAGC,GAI/B,OAHAF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GAClBF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GAClBF,EAAI,GAAKC,EAAE,GAAKC,EAAE,GACXF,IAunBY,WACnB,IAAIS,EAxuBC,WACL,IAAIT,EAAM,IAAIU,IAAoB,GAQlC,OANIA,KAAuBC,eACzBX,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAGJA,EA+tBG1N,GADS,I,kHC1uBf0X,EAAkB,CACtBC,UAJF,EAKEC,UAJF,EAKEC,QAJF,IAuBO,SAAkCC,GACvC,IAAMC,EAAaD,YAAnB,QAGAA,oBAAsC,SAAiBE,GACrD,IAAMC,EAAQ5P,KAAd,MAGI2P,SAAJ,IAlBJ,SAAcE,EAAOC,GACnB,IAAK,IAAIrC,EAAT,EAAgBA,EAAIoC,EAApB,OAAkCpC,IAChC,GAAIqC,EAAQD,EAAZpC,IACE,SAGJ,SAaSsC,CAAKH,GAAO,SAAAI,GAAC,OAAIA,cAAgBL,EAApB,cAChBC,WAIJF,gBC1CJO,CAAyBC,IAAzBD,mBACkBC,IAAlBC,WD+CEC,kBAA+B,SAAiBT,GAC9C,IAAIU,EAAYhB,EAAgBM,EAAhC,MA9CJ,EAiDQU,GAA2BV,UAA/B,IACE3P,KAAA,YAjDN,EAoDQqQ,GAAJ,IAA8BV,UAC5BU,EApDN,GAwDSrQ,KAAL,UAxDJ,EA4DQqQ,IACFrQ,KAAA,YAGFA,KAAA,SAAcA,KAAd,UAAuC,CACrCsQ,SAAU,CAD2B,GAErCC,gBAAiB,CAFoB,GAGrCC,YAHqC,QAIrCC,SAAUd,MCtET,IAAMe,EAAUR,IAAhB,QAEP,MCgBaS,EAAcC,EACvB,CACE,CAACA,EAAD,IAAa,CAACC,MAAD,SAAkBP,SAAlB,EAA+BQ,UAA/B,EAA6CC,QAAQ,IAClE,CAACH,EAAD,OAAgB,CAACG,QAAQ,IACzB,CAACH,EAAD,MAAe,CAACG,QAAQ,IACxB,CAACH,EAAD,MAAe,CAACG,QAAQ,IACxB,CAACH,EAAD,IAAa,CAACE,UAAD,EAAeC,QAAQ,IACpC,CAACH,EAAD,MAAe,CAACG,QAAQ,IACxB,CAACH,EAAD,IAAa,CAACC,MAAD,YAAqBG,KAArB,EAA8BD,QAAQ,IAEnD,CAACH,EAAD,IAAa,CAACC,MAAD,SAAkBE,QAAQ,IACvC,CAACH,EAAD,IAAa,CAACG,QAAQ,KAXrB,KAgBME,EAA4B,CACvCC,OAAQ,CAAC,SAAU,QADoB,OAEvC5I,OAAQ,CAF+B,SAGvC6I,MAAO,CAHgC,OAIvCC,IAAK,CAAC,QAAS,YAAa,SAJW,OAKvCC,UAAW,CAL4B,UAMvCC,OAAQ,CAAC,QAIEC,EAA0B,CACrCF,UAAW,CAAC,QAUDG,EAAsB,CACjCC,YADiC,cAEjCC,YAFiC,cAGjCC,UAHiC,YAIjCC,WAJiC,cAKjCC,UALiC,cAMjCC,SANiC,YAOjCxC,UAPiC,cAQjCC,UARiC,cASjCC,QAAS,aAGEuC,EACC,CAAC,UADkB,SAApBA,EAEG,CAAC,YAAa,YAAa,UAAW,YAAa,WAFlC,cAApBA,EAGG,CAAC,QAAD,+BAgBHC,EAAuB,CAClCC,IADkC,MAElCX,OAFkC,SAGlCD,UAHkC,YAIlCa,MAJkC,QAKlCf,MALkC,QAMlCgB,QANkC,QAOlCC,SAPkC,QAQlCC,WARkC,QASlCC,UATkC,QAUlCC,SAVkC,QAWlCC,YAXkC,QAYlClK,OAZkC,SAalCmK,YAbkC,SAclCC,WAdkC,SAelCC,UAfkC,SAgBlCC,aAhBkC,SAiBlC1B,OAjBkC,SAkBlC2B,YAlBkC,SAmBlCC,WAnBkC,SAoBlCC,SApBkC,SAqBlCC,WArBkC,SAsBlCC,WAtBkC,SAuBlCC,YAvBkC,SAwBlCC,UAxBkC,SAyBlCC,aAzBkC,SA0BlChC,IA1BkC,MA2BlCiC,SA3BkC,MA4BlCC,QA5BkC,MA6BlCC,MA7BkC,MA8BlCC,QA9BkC,MA+BlCC,QA/BkC,MAgClCC,SAhCkC,MAiClCC,OAjCkC,MAkClCC,UAlCkC,MAmClCC,MAnCkC,QAoClCC,UApCkC,QAqClCC,WArCkC,QAsClCC,QAtCkC,QAuClCC,UAAW,SAQAC,EAAwB,CACnCC,MADmC,MAEnCC,SAFmC,SAGnCC,SAHmC,YAInC/E,UAJmC,cAKnCC,UALmC,cAMnCC,QANmC,YAOnC8E,UAPmC,cAQnCC,SARmC,aASnCC,WAAY,gB,SC7HRC,GAAN,IAAgBC,uBAETC,EAAgB5C,EACjB6C,EAAN,QAGMC,EAAN,eAKqBC,E,WACnB,gBAA6C,WAAdnT,EAAc,uDAAJ,GAAI,oBAC3C3B,KAAA,UACAA,KAAA,WAEAA,KAAA,QAAe9I,OAAA,OAAc,CAAC6Z,QAAQ,GAAtC,GAEA/Q,KAAA,OAAc2U,SAAoBhT,UAAlC,IAEA3B,KAAA,YAAmBA,KAAK+U,YAAY7U,KAApCF,MACAA,KAAA,gBAAoB,SAAA6Q,GAAK,OACvBmE,qBAAgC,EAAhCA,cAAkDC,KAAmB,CAACC,SAAS,O,sDAIzE,WACRlV,KAAA,gBAAoB,SAAA6Q,GAAK,OAAI,gCAAwC,EAA5C,kB,sCAOXR,EAAW8E,GACrB9E,IAAJ,IACErQ,KAAA,oB,kCAKQ6Q,GACV,GAAK7Q,KAAK2B,QAAV,QAIA,IAAI9J,EAAQgZ,EAAZ,OACIuE,IAAJ,aAEMX,GAAW5D,cAAoBuE,eAAnC,kBACEvd,GAASud,IAATvd,kBAEEgZ,cAAoBuE,eAAxB,iBACEvd,GA9CR,KAkDI,IAAMwd,EAAgB,CACpBjb,EAAGyW,EADiB,QAEpBxW,EAAGwW,EAAMyE,SAGPzd,OAAeA,MAAnB,IAGEA,EAAQuB,WAAWvB,EAAnBA,IAGEgZ,YAAJ,IACEhZ,GA5DN,KA+DImI,KAAA,oB,+BAGOyQ,EAAU8E,EAAOC,GACxBxV,KAAA,SAAc,CACZyV,KADY,EAEZrZ,OAFY,EAGZmZ,MAHY,EAIZ9E,SAJY,EAKZD,YALY,QAMZkF,OAAQjF,EAASiF,a,KCnFhBC,EAAgB5D,EACjB6D,EAAN,cACMC,EAAN,cACMC,EAAN,aACMC,EAAN,eAUqBC,E,WACnB,gBAA6C,WAAdrU,EAAc,uDAAJ,GAAI,oBAC3C3B,KAAA,UACAA,KAAA,WACAA,KAAA,WAEAA,KAAA,QAAe9I,OAAA,OAAc,CAAC6Z,QAAQ,GAAtC,GACA/Q,KAAA,gBAAuBA,KAAK2B,QAA5B,OACA3B,KAAA,iBAAwBA,KAAK2B,QAA7B,OACA3B,KAAA,eAAsBA,KAAK2B,QAA3B,OACA3B,KAAA,gBAAuBA,KAAK2B,QAA5B,OAEA3B,KAAA,OAAc2V,SAAoBhU,UAAlC,IAEA3B,KAAA,YAAmBA,KAAK+U,YAAY7U,KAApCF,MACAA,KAAA,gBAAoB,SAAA6Q,GAAK,OAAImE,qBAAgC,EAApC,gB,sDAGjB,WACRhV,KAAA,gBAAoB,SAAA6Q,GAAK,OAAI,gCAAwC,EAA5C,kB,sCAOXR,EAAW8E,GACrB9E,IAAJ,IACErQ,KAAA,mBAEEqQ,IAAJ,IACErQ,KAAA,mBAEEqQ,IAAJ,IACErQ,KAAA,kBAEEqQ,IAAJ,IACErQ,KAAA,sB,kCAIQ6Q,GACV7Q,KAAA,mBACAA,KAAA,kBACAA,KAAA,oBACAA,KAAA,qB,sCAGc6Q,GACV7Q,KAAJ,iBACE,cAAI6Q,QACF7Q,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZD,YAHY,QAIZkF,OAAQ7E,EAAM6E,W,qCAMP7E,GACT7Q,KAAJ,gBACE,aAAI6Q,QACF7Q,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZD,YAHY,QAIZkF,OAAQ7E,EAAM6E,W,uCAML7E,GACX7Q,KAAJ,kBACE,eAAI6Q,QACF7Q,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZD,YAHY,QAIZkF,OAAQ7E,EAAM6E,W,sCAMN7E,GACd,GAAI7Q,KAAJ,gBACE,OAAQ6Q,EAAR,MACE,gBACMA,UAAJ,IAEE7Q,KAAA,YAEF,MACF,gBAEE,IAAI6Q,UAEF7Q,KAAA,YAEGA,KAAL,SAGEA,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZD,YAHY,QAIZkF,OAAQ7E,EAAM6E,SAGlB,MACF,cACE1V,KAAA,gB,KChIHiW,EAAclE,EACfmE,EAAN,UACMC,EAAN,QAEqBC,E,WACnB,gBAA6C,WAAdzU,EAAc,uDAAJ,GAAI,oBAC3C3B,KAAA,UACAA,KAAA,WAEAA,KAAA,QAAe9I,OAAA,OAAc,CAAC6Z,QAAQ,GAAtC,GACA/Q,KAAA,gBAAuBA,KAAK2B,QAA5B,OACA3B,KAAA,cAAqBA,KAAK2B,QAA1B,OAEA3B,KAAA,OAAciW,SAAkBtU,UAAhC,IAEA3B,KAAA,YAAmBA,KAAK+U,YAAY7U,KAApCF,MAEAgV,WAAmBrT,YAAnBqT,EACAA,uBACAhV,KAAA,gBAAoB,SAAA6Q,GAAK,OAAImE,qBAAgC,EAApC,gB,sDAGjB,WACRhV,KAAA,gBAAoB,SAAA6Q,GAAK,OAAI,gCAAwC,EAA5C,kB,sCAOXR,EAAW8E,GACrB9E,IAAJ,IACErQ,KAAA,mBAEEqQ,IAAJ,IACErQ,KAAA,mB,kCAIQ6Q,GAEV,IAAMwF,EAAgBxF,UAAgBA,EAAtC,WAEGwF,qBAAD,SAAsCA,QADxC,aAEEA,YAKErW,KAAKsW,iBAAT,YAA4BzF,QAC1B7Q,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZ9M,IAAKkN,EAHO,IAIZ6E,OAAQ7E,EAAM6E,SAId1V,KAAKuW,eAAT,UAA0B1F,QACxB7Q,KAAA,SAAc,CACZyV,KADY,EAEZhF,SAFY,EAGZ9M,IAAKkN,EAHO,IAIZ6E,OAAQ7E,EAAM6E,c,KCjEhBd,EAAN,cAEqB4B,E,WACnB,gBAA6C,IAAd7U,EAAc,uDAAJ,GAAI,oBAC3C3B,KAAA,UACAA,KAAA,WAEAA,KAAA,QAAe9I,OAAA,OAAc,CAAC6Z,QAAQ,GAAtC,GAEA/Q,KAAA,YAAmBA,KAAK+U,YAAY7U,KAApCF,MACAgV,iCAAwChV,KAAxCgV,a,sDAIAhV,KAAA,0CAAgDA,KAAhD,e,sCAOcqQ,EAAW8E,GACrB9E,IAAJ,IACErQ,KAAA,oB,kCAIQ6Q,GACL7Q,KAAK2B,QAAV,QAIA3B,KAAA,SAAc,CACZyV,KADY,EAEZrZ,OAAQ,CACNhC,EAAGyW,EADG,QAENxW,EAAGwW,EAAMyE,SAEX7E,SANY,EAOZD,YAPY,QAQZkF,OAAQ7E,EAAM6E,a,aCxDdC,EAAe,CACnBlE,YAJF,EAKEC,YAJF,EAKEC,UAJF,EAKErC,UAPF,EAQEC,UAPF,EAQEC,QAPF,GCDA,IAAMiH,EAAkB,CACtBC,WADsB,OAEtBC,SAAU,GAGSC,E,WACnB,cAA0B,oBACxB5W,KAAA,eACAA,KAAA,YAEAA,KAAA,kBAAyB,IAAzB,IAEAA,KAAA,YAAmBA,KAAK+U,YAAY7U,KAApCF,MACAA,KAAA,W,sDAKA,OAAQA,KAAR,U,0BAGEyV,EAAMoB,EAAS7T,GAAqC,IAA/B8T,EAA+B,wDAAjB5B,EAAiB,wDAC/C6B,EAD+C,cACrCC,EADqC,uBAGlDhU,IAAS,2BAA4BA,EAAzC,oBAEEA,EAAO,CAAC0T,WAAY1T,IAEtBA,EAAOA,EAAO9L,mBAAH,GAAX8L,EAEA,IAAIiU,EAAUD,MAAsBhU,EAApC,YACA,IACEiU,KACAD,MAAsBhU,EAAtBgU,eAEF,IAAME,EAAQ,CAACzB,KAAD,EAAOoB,QAAP,EAAgBH,WAAY1T,EAA5B,WAA6C2T,SAAU3T,EAAK2T,UAC1E,IACEO,WAEF,IACEA,cAEFH,UACA/W,KAAA,QAAeA,KAAKmX,UAAYD,EAAhC,QAKA,IADA,IAAIE,EAAiBH,SAArB,EACOG,GAAP,KACMH,eAAoCC,EAAxC,WAGAE,IAEFH,SAAeG,EAAfH,S,6BAGKxB,EAAMoB,GAGX,IAHoB,IACbE,EADa,cACHC,EADG,uBAGXvJ,EAAIsJ,SAAb,EAAkCtJ,GAAlC,EAA0CA,IAAK,CAC7C,IAAMyJ,EAAQH,EAAd,GAEA,GAAIG,YAAuBA,YAA3B,EAAsD,CACpDH,cACA,IAAME,EAAUD,MAAsBE,EAAtC,YACAD,SAAeA,UAAfA,MACA,IAAIA,UACFD,EAAiB,OAAQE,EAAzBF,aAINhX,KAAA,QAAe+W,EAAA,MAAc,SAAAG,GAAK,OAAKA,EAAL,a,kCAMxBrG,GACV,IAAI7Q,KAAJ,WAOA,IAHA,IAAMqX,EAAerX,KAAKsX,gBAA1B,GACI5B,EAAS7E,WAAb,OAEO6E,GAAUA,IAAW2B,EAA5B,aAAsD,CAEpD,GADArX,KAAA,WACIqX,EAAJ,QACE,OAEF3B,EAASA,EAATA,WAEF1V,KAAA,mB,4BAMI6Q,EAAO6F,GACX,IAAMO,EAAUjX,KAAKgX,kBAAkBO,IAAvC,GAEA,KAAa,CAcX,IAbA,IAAIC,GAAJ,EAGMC,EAAkB,WACtB5G,cAGI6G,EAA2B,WAC/B7G,aACA2G,MAEIG,EAAN,GAESlK,EAAT,EAAgBA,EAAIwJ,EAApB,OAAoCxJ,IAAK,OACTwJ,EADS,GAChCxB,EADgC,OAC1BoB,EAD0B,UACjBC,EADiB,OAYvC,GAVAD,EACE3f,OAAA,YAAyB,CACvBue,KADuB,EAEvBgC,gBAFuB,EAGvBC,8BAGJ,GACEC,OAAqBV,EAArBU,IAEF,EACE,MAIJ,IAAK,IAAIlK,EAAT,EAAgBA,EAAIkK,EAApB,OAA4ClK,IAAK,OACvBkK,EADuB,GACxClC,EADwC,OAClCoB,EADkC,UAE/C7W,KAAA,gB,sCAQU6Q,GACd,IAAM+G,EAAc5X,KAAK6X,aAAzB,QAEA,OAAO3gB,OAAA,YDvHJ,SAAsB2Z,GAC3B,IAAMR,EAAYsF,EAAa9E,WAA/B,MACA,MAEE,YAJgC,MAODA,EAPC,SAO3BiH,EAP2B,UAOlBC,EAPkB,SAOVC,EAPU,QAQ9BC,GAAJ,EACIC,GAAJ,EACIC,GAAJ,EAqBA,OAzDF,IAwCI9H,GAzCJ,IA2CKA,IAA6BpW,gBAJhC,IAMEge,EAjCJ,IAiCiBD,EACbE,EAjCJ,IAiCmBF,EACfG,EAjCJ,IAiCkBH,GA/ClB,IAgDa3H,GACT4H,EAAaG,QA7BjB,EA6ByBN,GACrBI,EAAeE,QA5BnB,EA4B2BN,GACvBK,EAAcC,QA9BlB,EA8B0BN,IApD1B,IAqDazH,IACT4H,EArCJ,IAqCiBF,EACbG,EArCJ,IAqCmBH,EACfI,EArCJ,IAqCkBJ,GAGT,CAACE,WAAD,EAAaC,aAAb,EAA2BC,eCwFAE,CAAzB,GDlFJ,SAA2BxH,EAAO+G,GAAa,IAC7CnH,EAAYI,EADiC,SAIpD,IAAKA,EAAD,SAAkB5W,gBAAgBwW,EAAtC,SAEE,YAGF,IAAMrU,EAASyU,UAAgB,CAC7BzW,EAAGqW,EAD0B,QAE7BpW,EAAGoW,EAAS6E,SAGRgD,EAAOV,EAAb,wBAIM1Y,EAASoZ,QAAaV,EAA5B,YACMzY,EAASmZ,SAAcV,EAA7B,aAQA,MAAO,CAACxb,OAAD,EAASmc,aALK,CACnBne,GAAIgC,IAAWkc,EAAXlc,KAAuBwb,EAAxB,YADgB,EAEnBvd,GAAI+B,IAAWkc,EAAXlc,IAAsBwb,EAAvB,WAAgDzY,IC0DEqZ,CAAkB3H,EAAhE,GAAqF,CAC1F4H,SAD0F,EAE1Fb,oB,yhCChHN,IAAMnB,EAAkB,CAEtBiC,OAFsB,KAItBC,YAJsB,KAKtBC,kBALsB,GAOtBlI,QAPsB,EAUtBmI,YAVsB,OAWtBC,SAAU,GAOSC,E,WACnB,aAA0C,IAA9B/D,EAA8B,uDAApB,KAAMrT,EAAc,uDAAJ,GAAI,oBACxC3B,KAAA,QAAe9I,mBAAf,GACA8I,KAAA,OAAc,IAAd,IAEAA,KAAA,cAAqBA,KAAKgZ,cAAc9Y,KAAxCF,MACAA,KAAA,cAAqBA,KAAKiZ,cAAc/Y,KAAxCF,MAEAA,KAAA,cAPwC,IAUjC0Y,EAAU/W,EAVuB,OAWxC,GACE3B,KAAA,M,uDAIOgV,GAAS,WAMlB,GALIhV,KAAJ,SAEEA,KAAA,UAEFA,KAAA,UACA,GANkB,IAUX2B,EAVW,aAWZuX,EAAevX,EAArB,QAqBA,IAAK,IAAL,KAnBA3B,KAAA,QAAe,IAAIkZ,EAAalE,EAAS,CACvC6D,YAAalX,EAD0B,YAEvCgX,YAAahX,eAAuBgP,IAFvB,kBAGO3Q,KAHtB,eAKK2B,EAAL,aAGEzK,wBAA+C,SAAAiiB,GAC7C,IAAMC,EAAa,cAAnB,GACA,GACEnI,cAAwC,SAAAoI,GACtCD,yBAOqBzX,EAA7B,kBAAwD,CACtD,IAAMyX,EAAapZ,KAAKsZ,QAAQ/B,IAAhC,GACA,KAAgB,CACd,IAAMgC,EAAmB5X,oBAAzB,UAEO4X,EAAP,OACAH,UAOJpZ,KAAA,WAAkB,IAAI,EAAJ,EAAwBA,KAAxB,cAA4C,CAC5D+Q,QAAQ,IAEV/Q,KAAA,UAAiB,IAAI,EAAJ,EAAuBA,KAAvB,cAA2C,CAC1D+Q,QAAQ,IAEV/Q,KAAA,SAAgB,IAAI,EAAJ,EAAsBA,KAAtB,cAA0C,CACxD+Q,QADwD,EAExD+H,SAAUnX,EAAQmX,WAEpB9Y,KAAA,iBAAwB,IAAI,EAAJ,EAA8BA,KAA9B,cAAkD,CACxE+Q,QAAQ,IAxDQ,UA4DyB/Q,KA5DzB,YA4DlB,2BAAwD,8BAA5CwZ,EAA4C,KAAhCC,EAAgC,KACjDA,EAAL,YAEEzZ,KAAA,kBAAuByZ,EAAvB,mBACAzZ,KAAA,aAA4ByZ,EAA5B,eAhEc,kC,gCAuEdzZ,KAAJ,UAGEA,KAAA,qBACAA,KAAA,oBACAA,KAAA,mBACAA,KAAA,2BACAA,KAAA,kBAEAA,KAAA,gBACAA,KAAA,eACAA,KAAA,cACAA,KAAA,sBACAA,KAAA,aACAA,KAAA,gB,yBAKD6Q,EAAOgG,EAAS7T,GACjBhD,KAAA,6B,2BAIG6Q,EAAOgG,EAAS7T,GACnBhD,KAAA,6B,4BAMI6Q,EAAOgG,EAAS7T,GACpBhD,KAAA,gC,0BAQE6Q,EAAOgG,GACT7W,KAAA,2B,wCAMgBmZ,EAAMhE,GAAS,IACxBmE,EADwB,aAE/B,MAGA,IAAMF,EAAaE,MAAnB,GACA,GAAIF,GAAcA,mBAAlB,EAAyD,CACvDA,MAAe,CAACrI,OAAQoE,IAExB,IAAMuE,EAAsBnI,EAA5B,GACImI,IAAwB1Z,KAAK2B,QAAjC,aAGE+X,WAA4B,SAAAL,GAC1B,IAAMM,EAAkBL,MAAxB,GACA,GAEEK,oBAQAP,yBAGAO,2BAKR3Z,KAAA,gCACAA,KAAA,+BACAA,KAAA,8BACAA,KAAA,yC,uCAMe6Q,EAAOgG,EAAS7T,EAAM8T,EAAM5B,GAC3C,qBAAWrE,EAAX,CADoD,IAU7CyI,EAV6C,aAUpCZ,EAVoC,YAY9Cc,EAAatF,MAAnB,EAEIuF,EAAiBf,MAArB,GACA,IACEe,EAAiB,IAAI,EAArBA,MACAf,WAEAe,iBAAgCzH,MAAhCyH,EAEA,GACEH,OAAuBG,EAAvBH,cAGJG,iBACKA,EAAL,WACEzZ,KAAA,kBAAuByZ,EAAvB,wBAvBA,IAAK,IAAL,KAFAzW,IAEA,EACEhD,KAAA,mBAAiC6Q,EAAjC,Y,0CA6BcA,EAAOgG,GACzB,qBAAWhG,EAAX,CADkC,IAS3B6H,EAT2B,YAW5Bc,EAAatF,MAAnB,EAEMuF,EAAiBf,MAAvB,GAEA,OAIAe,cAEIA,EAAJ,WAA8B,OACrBG,EAAkBH,EADG,eAGxBI,GAAJ,EAH4B,IAIXnB,EAJW,cAI5B,2BAAkC,KAAvBoB,EAAuB,QAChC,GAAIA,uBAAyCA,EAA7C,UAA2D,CACzDD,KACA,QAPwB,8BAU5B,GACE7Z,KAAA,8BA7BF,IAAK,IAAL,OACEA,KAAA,sBAAoC6Q,EAApC,M,oCAwCQA,GAAO,IACZJ,EAAYI,EADA,SAEbkJ,EAAQvI,EAAoBf,EAAlC,MACA,GAEEzQ,KAAA,oB,oCAQU6Q,GAEZ7Q,KAAA,aAAkB6Q,EAAlB,Y,0BCtUJ,OAKA,SAAUuE,EAAQ4E,EAAUC,EAAYpZ,GACtC,aAEF,IA+FIqZ,EA/FAC,EAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,EAAeJ,EAASK,cAAc,OAItCC,EAAQlhB,KAAKkhB,MACbzO,EAAMzS,KAAKyS,IACX0O,EAAMC,KAAKD,IASf,SAASE,EAAkBC,EAAIC,EAASC,GACpC,OAAOC,WAAWC,EAAOJ,EAAIE,GAAUD,GAY3C,SAASI,EAAeC,EAAKN,EAAIE,GAC7B,QAAItN,MAAM2N,QAAQD,KACdE,EAAKF,EAAKJ,EAAQF,GAAKE,IAChB,GAWf,SAASM,EAAKC,EAAKC,EAAUR,GACzB,IAAInN,EAEJ,GAAK0N,EAIL,GAAIA,EAAIE,QACJF,EAAIE,QAAQD,EAAUR,QACnB,GAAIO,EAAI3W,SAAW3D,EAEtB,IADA4M,EAAI,EACGA,EAAI0N,EAAI3W,QACX4W,EAASljB,KAAK0iB,EAASO,EAAI1N,GAAIA,EAAG0N,GAClC1N,SAGJ,IAAKA,KAAK0N,EACNA,EAAIG,eAAe7N,IAAM2N,EAASljB,KAAK0iB,EAASO,EAAI1N,GAAIA,EAAG0N,GAYvE,SAASI,EAAUC,EAAQrC,EAAMlgB,GAC7B,IAAIwiB,EAAqB,sBAAwBtC,EAAO,KAAOlgB,EAAU,SACzE,OAAO,WACH,IAAI+W,EAAI,IAAI9W,MAAM,mBACdwiB,EAAQ1L,GAAKA,EAAE0L,MAAQ1L,EAAE0L,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,EAAMxG,EAAOyG,UAAYzG,EAAOyG,QAAQC,MAAQ1G,EAAOyG,QAAQD,KAInE,OAHIA,GACAA,EAAI1jB,KAAKkd,EAAOyG,QAASJ,EAAoBC,GAE1CF,EAAOO,MAAM/b,KAAM0N,YAa9BwM,EADyB,oBAAlBhjB,OAAOgjB,OACL,SAAgBxE,GACrB,GAAIA,IAAW7U,GAAwB,OAAX6U,EACxB,MAAM,IAAIje,UAAU,8CAIxB,IADA,IAAIukB,EAAS9kB,OAAOwe,GACXuG,EAAQ,EAAGA,EAAQvO,UAAUlJ,OAAQyX,IAAS,CACnD,IAAIC,EAASxO,UAAUuO,GACvB,GAAIC,IAAWrb,GAAwB,OAAXqb,EACxB,IAAK,IAAIC,KAAWD,EACZA,EAAOZ,eAAea,KACtBH,EAAOG,GAAWD,EAAOC,IAKzC,OAAOH,GAGF9kB,OAAOgjB,OAWpB,IAAIkC,EAASb,GAAU,SAAgBc,EAAMC,EAAKC,GAG9C,IAFA,IAAIC,EAAOtlB,OAAOslB,KAAKF,GACnB7O,EAAI,EACDA,EAAI+O,EAAKhY,UACP+X,GAAUA,GAASF,EAAKG,EAAK/O,MAAQ5M,KACtCwb,EAAKG,EAAK/O,IAAM6O,EAAIE,EAAK/O,KAE7BA,IAEJ,OAAO4O,IACR,SAAU,iBASTE,EAAQhB,GAAU,SAAec,EAAMC,GACvC,OAAOF,EAAOC,EAAMC,GAAK,KAC1B,QAAS,iBAQZ,SAASG,EAAQC,EAAOC,EAAMC,GAC1B,IACIC,EADAC,EAAQH,EAAKjlB,WAGjBmlB,EAASH,EAAMhlB,UAAYR,OAAOS,OAAOmlB,IAClCllB,YAAc8kB,EACrBG,EAAOE,OAASD,EAEZF,GACA1C,EAAO2C,EAAQD,GAUvB,SAAS9B,EAAOJ,EAAIE,GAChB,OAAO,WACH,OAAOF,EAAGqB,MAAMnB,EAASlN,YAWjC,SAASsP,EAASC,EAAKC,GACnB,MA1LgB,mBA0LLD,EACAA,EAAIlB,MAAMmB,GAAOA,EAAK,IAAkBrc,EAAWqc,GAEvDD,EASX,SAASE,EAAYC,EAAMC,GACvB,OAAQD,IAASvc,EAAawc,EAAOD,EASzC,SAASE,EAAkB5H,EAAQ6H,EAAO1G,GACtCqE,EAAKsC,EAASD,IAAQ,SAAS9H,GAC3BC,EAAO+H,iBAAiBhI,EAAMoB,GAAS,MAU/C,SAAS6G,EAAqBhI,EAAQ6H,EAAO1G,GACzCqE,EAAKsC,EAASD,IAAQ,SAAS9H,GAC3BC,EAAOiI,oBAAoBlI,EAAMoB,GAAS,MAWlD,SAAS+G,EAAUC,EAAMC,GACrB,KAAOD,GAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,WAEhB,OAAO,EASX,SAASC,EAAMC,EAAKC,GAChB,OAAOD,EAAIE,QAAQD,IAAS,EAQhC,SAASV,EAASS,GACd,OAAOA,EAAIG,OAAOC,MAAM,QAU5B,SAASC,EAAQhC,EAAK4B,EAAMK,GACxB,GAAIjC,EAAI6B,UAAYI,EAChB,OAAOjC,EAAI6B,QAAQD,GAGnB,IADA,IAAIzQ,EAAI,EACDA,EAAI6O,EAAI9X,QAAQ,CACnB,GAAK+Z,GAAajC,EAAI7O,GAAG8Q,IAAcL,IAAWK,GAAajC,EAAI7O,KAAOyQ,EACtE,OAAOzQ,EAEXA,IAEJ,OAAQ,EAShB,SAAS+Q,EAAQrD,GACb,OAAO7N,MAAM5V,UAAU+mB,MAAMvmB,KAAKijB,EAAK,GAU3C,SAASuD,EAAYpC,EAAK3Y,EAAKgb,GAK3B,IAJA,IAAIC,EAAU,GACVC,EAAS,GACTpR,EAAI,EAEDA,EAAI6O,EAAI9X,QAAQ,CACnB,IAAIyY,EAAMtZ,EAAM2Y,EAAI7O,GAAG9J,GAAO2Y,EAAI7O,GAC9B6Q,EAAQO,EAAQ5B,GAAO,GACvB2B,EAAQE,KAAKxC,EAAI7O,IAErBoR,EAAOpR,GAAKwP,EACZxP,IAaJ,OAVIkR,IAIIC,EAHCjb,EAGSib,EAAQD,MAAK,SAAyBrZ,EAAGC,GAC/C,OAAOD,EAAE3B,GAAO4B,EAAE5B,MAHZib,EAAQD,QAQnBC,EASX,SAASG,EAAS5D,EAAK6D,GAKnB,IAJA,IAAIC,EAAQC,EACRC,EAAYH,EAAS,GAAGI,cAAgBJ,EAASP,MAAM,GAEvDhR,EAAI,EACDA,EAAI0M,EAAgB3V,QAAQ,CAI/B,IAFA0a,GADAD,EAAS9E,EAAgB1M,IACPwR,EAASE,EAAYH,KAE3B7D,EACR,OAAO+D,EAEXzR,IAEJ,OAAO5M,EAOX,IAAIwe,EAAY,EAUhB,SAASC,EAAoBtK,GACzB,IAAIuK,EAAMvK,EAAQwK,eAAiBxK,EACnC,OAAQuK,EAAIE,aAAeF,EAAIG,cAAgBtK,EAGnD,IAEIuK,EAAiB,iBAAkBvK,EACnCwK,EAAyBb,EAAS3J,EAAQ,kBAAoBvU,EAC9Dgf,EAAqBF,GAJN,wCAIoCG,KAAKC,UAAUrL,WAElEsL,EAAmB,QAEnBC,EAAmB,QAiBnBC,EAAqBC,GAGrBC,EAAW,CAAC,IAAK,KACjBC,EAAkB,CAAC,UAAW,WASlC,SAASC,EAAMhH,EAASiH,GACpB,IAAItoB,EAAO+H,KACXA,KAAKsZ,QAAUA,EACftZ,KAAKugB,SAAWA,EAChBvgB,KAAKgV,QAAUsE,EAAQtE,QACvBhV,KAAK0V,OAAS4D,EAAQ3X,QAAQ6e,YAI9BxgB,KAAKygB,WAAa,SAAS9Q,GACnBqN,EAAS1D,EAAQ3X,QAAQoP,OAAQ,CAACuI,KAClCrhB,EAAK4e,QAAQlH,IAIrB3P,KAAK0gB,OA4DT,SAASC,EAAarH,EAASjJ,EAAWuQ,GACtC,IAAIC,EAAcD,EAAMtQ,SAAS9L,OAC7Bsc,EAAqBF,EAAMrQ,gBAAgB/L,OAC3Cuc,EAvGU,EAuGC1Q,GAA4BwQ,EAAcC,IAAuB,EAC5EE,EAAuB,GAAZ3Q,GAA2CwQ,EAAcC,IAAuB,EAE/FF,EAAMG,UAAYA,EAClBH,EAAMI,UAAYA,EAEdD,IACAzH,EAAQ2H,QAAU,IAKtBL,EAAMvQ,UAAYA,EAiBtB,SAA0BiJ,EAASsH,GAC/B,IAAIK,EAAU3H,EAAQ2H,QAClB3Q,EAAWsQ,EAAMtQ,SACjB4Q,EAAiB5Q,EAAS9L,OAGzByc,EAAQE,aACTF,EAAQE,WAAaC,EAAqBR,IAI1CM,EAAiB,IAAMD,EAAQI,cAC/BJ,EAAQI,cAAgBD,EAAqBR,GACnB,IAAnBM,IACPD,EAAQI,eAAgB,GAG5B,IAAIF,EAAaF,EAAQE,WACrBE,EAAgBJ,EAAQI,cACxB9I,EAAe8I,EAAgBA,EAAcjlB,OAAS+kB,EAAW/kB,OAEjEA,EAASwkB,EAAMxkB,OAASklB,EAAUhR,GACtCsQ,EAAMW,UAAYhH,IAClBqG,EAAMY,UAAYZ,EAAMW,UAAYJ,EAAWI,UAE/CX,EAAM7R,MAAQ0S,EAASlJ,EAAcnc,GACrCwkB,EAAMc,SAAWC,EAAYpJ,EAAcnc,GA0B/C,SAAwB6kB,EAASL,GAC7B,IAAIxkB,EAASwkB,EAAMxkB,OACfgC,EAAS6iB,EAAQW,aAAe,GAChCC,EAAYZ,EAAQY,WAAa,GACjCC,EAAYb,EAAQa,WAAa,GA5LvB,IA8LVlB,EAAMvQ,WA5LE,IA4L2ByR,EAAUzR,YAC7CwR,EAAYZ,EAAQY,UAAY,CAC5BznB,EAAG0nB,EAAUC,QAAU,EACvB1nB,EAAGynB,EAAUE,QAAU,GAG3B5jB,EAAS6iB,EAAQW,YAAc,CAC3BxnB,EAAGgC,EAAOhC,EACVC,EAAG+B,EAAO/B,IAIlBumB,EAAMmB,OAASF,EAAUznB,GAAKgC,EAAOhC,EAAIgE,EAAOhE,GAChDwmB,EAAMoB,OAASH,EAAUxnB,GAAK+B,EAAO/B,EAAI+D,EAAO/D,GA3ChD4nB,CAAehB,EAASL,GACxBA,EAAMsB,gBAAkBC,EAAavB,EAAMmB,OAAQnB,EAAMoB,QAEzD,IAAII,EAAkBC,EAAYzB,EAAMY,UAAWZ,EAAMmB,OAAQnB,EAAMoB,QACvEpB,EAAM0B,iBAAmBF,EAAgBhoB,EACzCwmB,EAAM2B,iBAAmBH,EAAgB/nB,EACzCumB,EAAMwB,gBAAmBvW,EAAIuW,EAAgBhoB,GAAKyR,EAAIuW,EAAgB/nB,GAAM+nB,EAAgBhoB,EAAIgoB,EAAgB/nB,EAEhHumB,EAAM/mB,MAAQwnB,GAkNAzoB,EAlNyByoB,EAAc/Q,SAkNhCzX,EAlN0CyX,EAmNxDqR,EAAY9oB,EAAI,GAAIA,EAAI,GAAIwnB,GAAmBsB,EAAY/oB,EAAM,GAAIA,EAAM,GAAIynB,IAnNX,EAC3EO,EAAM4B,SAAWnB,EAsMrB,SAAqBzoB,EAAOC,GACxB,OAAO4oB,EAAS5oB,EAAI,GAAIA,EAAI,GAAIwnB,GAAmBoB,EAAS7oB,EAAM,GAAIA,EAAM,GAAIynB,GAvM/CoC,CAAYpB,EAAc/Q,SAAUA,GAAY,EAEjFsQ,EAAM8B,YAAezB,EAAQa,UAAsClB,EAAMtQ,SAAS9L,OAC9Eyc,EAAQa,UAAUY,YAAe9B,EAAMtQ,SAAS9L,OAASyc,EAAQa,UAAUY,YADtC9B,EAAMtQ,SAAS9L,OAwC5D,SAAkCyc,EAASL,GACvC,IAEI+B,EAAUC,EAAWC,EAAWC,EAFhCC,EAAO9B,EAAQ+B,cAAgBpC,EAC/BY,EAAYZ,EAAMW,UAAYwB,EAAKxB,UAGvC,GArNe,GAqNXX,EAAMvQ,YAA8BmR,EA1NrB,IA0NqDuB,EAAKJ,WAAa9hB,GAAY,CAClG,IAAIkhB,EAASnB,EAAMmB,OAASgB,EAAKhB,OAC7BC,EAASpB,EAAMoB,OAASe,EAAKf,OAE7B3Z,EAAIga,EAAYb,EAAWO,EAAQC,GACvCY,EAAYva,EAAEjO,EACdyoB,EAAYxa,EAAEhO,EACdsoB,EAAY9W,EAAIxD,EAAEjO,GAAKyR,EAAIxD,EAAEhO,GAAMgO,EAAEjO,EAAIiO,EAAEhO,EAC3CyoB,EAAYX,EAAaJ,EAAQC,GAEjCf,EAAQ+B,aAAepC,OAGvB+B,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,EAAYE,EAAKF,UACjBC,EAAYC,EAAKD,UAGrBlC,EAAM+B,SAAWA,EACjB/B,EAAMgC,UAAYA,EAClBhC,EAAMiC,UAAYA,EAClBjC,EAAMkC,UAAYA,EAhElBG,CAAyBhC,EAASL,GA4MtC,IAAkBhoB,EAAOC,EAzMrB,IAAI6c,EAAS4D,EAAQtE,QACjB4I,EAAUgD,EAAMnQ,SAASiF,OAAQA,KACjCA,EAASkL,EAAMnQ,SAASiF,QAE5BkL,EAAMlL,OAASA,EA/DfwN,CAAiB5J,EAASsH,GAG1BtH,EAAQ6J,KAAK,eAAgBvC,GAE7BtH,EAAQ8J,UAAUxC,GAClBtH,EAAQ2H,QAAQa,UAAYlB,EA0HhC,SAASQ,EAAqBR,GAK1B,IAFA,IAAItQ,EAAW,GACX7C,EAAI,EACDA,EAAImT,EAAMtQ,SAAS9L,QACtB8L,EAAS7C,GAAK,CACV4V,QAAS/I,EAAMsG,EAAMtQ,SAAS7C,GAAG4V,SACjC/N,QAASgF,EAAMsG,EAAMtQ,SAAS7C,GAAG6H,UAErC7H,IAGJ,MAAO,CACH8T,UAAWhH,IACXjK,SAAUA,EACVlU,OAAQklB,EAAUhR,GAClByR,OAAQnB,EAAMmB,OACdC,OAAQpB,EAAMoB,QAStB,SAASV,EAAUhR,GACf,IAAI4Q,EAAiB5Q,EAAS9L,OAG9B,GAAuB,IAAnB0c,EACA,MAAO,CACH9mB,EAAGkgB,EAAMhK,EAAS,GAAG+S,SACrBhpB,EAAGigB,EAAMhK,EAAS,GAAGgF,UAK7B,IADA,IAAIlb,EAAI,EAAGC,EAAI,EAAGoT,EAAI,EACfA,EAAIyT,GACP9mB,GAAKkW,EAAS7C,GAAG4V,QACjBhpB,GAAKiW,EAAS7C,GAAG6H,QACjB7H,IAGJ,MAAO,CACHrT,EAAGkgB,EAAMlgB,EAAI8mB,GACb7mB,EAAGigB,EAAMjgB,EAAI6mB,IAWrB,SAASmB,EAAYb,EAAWpnB,EAAGC,GAC/B,MAAO,CACHD,EAAGA,EAAIonB,GAAa,EACpBnnB,EAAGA,EAAImnB,GAAa,GAU5B,SAASW,EAAa/nB,EAAGC,GACrB,OAAID,IAAMC,EAzTO,EA6TbwR,EAAIzR,IAAMyR,EAAIxR,GACPD,EAAI,EA7TE,EACC,EA8TXC,EAAI,EA7TI,EACE,GAsUrB,SAASsnB,EAAY2B,EAAIC,EAAIC,GACpBA,IACDA,EAAQpD,GAEZ,IAAIhmB,EAAImpB,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5BnpB,EAAIkpB,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAEhC,OAAOpqB,KAAKuU,KAAMvT,EAAIA,EAAMC,EAAIA,GAUpC,SAASonB,EAAS6B,EAAIC,EAAIC,GACjBA,IACDA,EAAQpD,GAEZ,IAAIhmB,EAAImpB,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5BnpB,EAAIkpB,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAChC,OAA0B,IAAnBpqB,KAAKqqB,MAAMppB,EAAGD,GAAWhB,KAAKD,GA1TzCmnB,EAAM5oB,UAAY,CAKdmf,QAAS,aAKT6J,KAAM,WACF1gB,KAAK0jB,MAAQpG,EAAkBtd,KAAKgV,QAAShV,KAAK0jB,KAAM1jB,KAAKygB,YAC7DzgB,KAAK2jB,UAAYrG,EAAkBtd,KAAK0V,OAAQ1V,KAAK2jB,SAAU3jB,KAAKygB,YACpEzgB,KAAK4jB,OAAStG,EAAkBgC,EAAoBtf,KAAKgV,SAAUhV,KAAK4jB,MAAO5jB,KAAKygB,aAMxFoD,QAAS,WACL7jB,KAAK0jB,MAAQhG,EAAqB1d,KAAKgV,QAAShV,KAAK0jB,KAAM1jB,KAAKygB,YAChEzgB,KAAK2jB,UAAYjG,EAAqB1d,KAAK0V,OAAQ1V,KAAK2jB,SAAU3jB,KAAKygB,YACvEzgB,KAAK4jB,OAASlG,EAAqB4B,EAAoBtf,KAAKgV,SAAUhV,KAAK4jB,MAAO5jB,KAAKygB,cA4T/F,IAAIpR,EAAkB,CAClBC,UA/Xc,EAgYdC,UA/Xa,EAgYbC,QA/XY,GAkYZsU,EAAuB,YACvBC,EAAsB,oBAO1B,SAAS3T,KACLpQ,KAAK0jB,KAAOI,EACZ9jB,KAAK4jB,MAAQG,EAEb/jB,KAAKgkB,SAAU,EAEf1D,EAAMvE,MAAM/b,KAAM0N,WAGtB+O,EAAQrM,GAAYkQ,EAAO,CAKvBzJ,QAAS,SAAmBlH,GACxB,IAAIU,EAAYhB,EAAgBM,EAAG8F,MA3ZzB,EA8ZNpF,GAAyC,IAAdV,EAAGoI,SAC9B/X,KAAKgkB,SAAU,GA9ZV,EAiaL3T,GAAuC,IAAbV,EAAGqI,QAC7B3H,EAjaI,GAqaHrQ,KAAKgkB,UAraF,EAyaJ3T,IACArQ,KAAKgkB,SAAU,GAGnBhkB,KAAKugB,SAASvgB,KAAKsZ,QAASjJ,EAAW,CACnCC,SAAU,CAACX,GACXY,gBAAiB,CAACZ,GAClBa,YAAayP,EACbxP,SAAUd,QAKtB,IAAIsU,GAAoB,CACpBxS,YAzbc,EA0bdC,YAzba,EA0bbC,UAzbY,EA0bZuS,cAzbe,EA0bfC,WA1be,GA8bfC,GAAyB,CACzBC,EAAGrE,EACHsE,EAzciB,MA0cjBC,EAAGtE,EACHuE,EAzcoB,UA4cpBC,GAAyB,cACzBC,GAAwB,sCAa5B,SAASjV,KACLzP,KAAK0jB,KAAOe,GACZzkB,KAAK4jB,MAAQc,GAEbpE,EAAMvE,MAAM/b,KAAM0N,WAElB1N,KAAK4P,MAAS5P,KAAKsZ,QAAQ2H,QAAQ0D,cAAgB,GAhBnDvP,EAAOwP,iBAAmBxP,EAAOyP,eACjCJ,GAAyB,gBACzBC,GAAwB,6CAiB5BjI,EAAQhN,GAAmB6Q,EAAO,CAK9BzJ,QAAS,SAAmBlH,GACxB,IAAIC,EAAQ5P,KAAK4P,MACbkV,GAAgB,EAEhBC,EAAsBpV,EAAG8F,KAAKuP,cAAcrJ,QAAQ,KAAM,IAC1DtL,EAAY4T,GAAkBc,GAC9BvU,EAAc4T,GAAuBzU,EAAGa,cAAgBb,EAAGa,YAE3DyU,EAAWzU,GAAewP,EAG1BkF,EAAa5G,EAAQ1O,EAAOD,EAAGwV,UAAW,aA/epC,EAkfN9U,IAA0C,IAAdV,EAAGoI,QAAgBkN,GAC3CC,EAAa,IACbtV,EAAMkP,KAAKnP,GACXuV,EAAatV,EAAMpL,OAAS,GAEb,GAAZ6L,IACPyU,GAAgB,GAIhBI,EAAa,IAKjBtV,EAAMsV,GAAcvV,EAEpB3P,KAAKugB,SAASvgB,KAAKsZ,QAASjJ,EAAW,CACnCC,SAAUV,EACVW,gBAAiB,CAACZ,GAClBa,YAAaA,EACbC,SAAUd,IAGVmV,GAEAlV,EAAMwV,OAAOF,EAAY,OAKrC,IAAIG,GAAyB,CACzBzT,WAlhBc,EAmhBdC,UAlhBa,EAmhBbC,SAlhBY,EAmhBZwT,YAlhBe,GAqhBfC,GAA6B,aAC7BC,GAA6B,4CAOjC,SAASC,KACLzlB,KAAK2jB,SAAW4B,GAChBvlB,KAAK4jB,MAAQ4B,GACbxlB,KAAK0lB,SAAU,EAEfpF,EAAMvE,MAAM/b,KAAM0N,WAsCtB,SAASiY,GAAuBhW,EAAI8F,GAChC,IAAImQ,EAAMpH,EAAQ7O,EAAGkW,SACjBC,EAAUtH,EAAQ7O,EAAGoW,gBAMzB,OAJW,GAAPtQ,IACAmQ,EAAMlH,EAAYkH,EAAII,OAAOF,GAAU,cAAc,IAGlD,CAACF,EAAKE,GA3CjBrJ,EAAQgJ,GAAkBnF,EAAO,CAC7BzJ,QAAS,SAAmBlH,GACxB,IAAI8F,EAAO4P,GAAuB1V,EAAG8F,MAOrC,GAjjBU,IA6iBNA,IACAzV,KAAK0lB,SAAU,GAGd1lB,KAAK0lB,QAAV,CAIA,IAAIG,EAAUF,GAAuBztB,KAAK8H,KAAM2P,EAAI8F,GAGzC,GAAPA,GAAqCoQ,EAAQ,GAAGrhB,OAASqhB,EAAQ,GAAGrhB,SAAW,IAC/ExE,KAAK0lB,SAAU,GAGnB1lB,KAAKugB,SAASvgB,KAAKsZ,QAAS7D,EAAM,CAC9BnF,SAAUuV,EAAQ,GAClBtV,gBAAiBsV,EAAQ,GACzBrV,YAAawP,EACbvP,SAAUd,QAsBtB,IAAIsW,GAAkB,CAClBrU,WAvlBc,EAwlBdC,UAvlBa,EAwlBbC,SAvlBY,EAwlBZwT,YAvlBe,GA0lBfY,GAAsB,4CAO1B,SAASC,KACLnmB,KAAK2jB,SAAWuC,GAChBlmB,KAAKomB,UAAY,GAEjB9F,EAAMvE,MAAM/b,KAAM0N,WA0BtB,SAAS2Y,GAAW1W,EAAI8F,GACpB,IAAI6Q,EAAa9H,EAAQ7O,EAAGkW,SACxBO,EAAYpmB,KAAKomB,UAGrB,GAAW,EAAP3Q,GAA2D,IAAtB6Q,EAAW9hB,OAEhD,OADA4hB,EAAUE,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAI7Y,EACA+Y,EACAT,EAAiBvH,EAAQ7O,EAAGoW,gBAC5BU,EAAuB,GACvB/Q,EAAS1V,KAAK0V,OAQlB,GALA8Q,EAAgBF,EAAWI,QAAO,SAASC,GACvC,OAAO/I,EAAU+I,EAAMjR,OAAQA,MAppBrB,IAwpBVD,EAEA,IADAhI,EAAI,EACGA,EAAI+Y,EAAchiB,QACrB4hB,EAAUI,EAAc/Y,GAAG8Y,aAAc,EACzC9Y,IAMR,IADAA,EAAI,EACGA,EAAIsY,EAAevhB,QAClB4hB,EAAUL,EAAetY,GAAG8Y,aAC5BE,EAAqB3H,KAAKiH,EAAetY,IAIlC,GAAPgI,UACO2Q,EAAUL,EAAetY,GAAG8Y,YAEvC9Y,IAGJ,OAAKgZ,EAAqBjiB,OAInB,CAEHka,EAAY8H,EAAcR,OAAOS,GAAuB,cAAc,GACtEA,QAPJ,EAnEJhK,EAAQ0J,GAAY7F,EAAO,CACvBzJ,QAAS,SAAoBlH,GACzB,IAAI8F,EAAOwQ,GAAgBtW,EAAG8F,MAC1BoQ,EAAUQ,GAAWnuB,KAAK8H,KAAM2P,EAAI8F,GACnCoQ,GAIL7lB,KAAKugB,SAASvgB,KAAKsZ,QAAS7D,EAAM,CAC9BnF,SAAUuV,EAAQ,GAClBtV,gBAAiBsV,EAAQ,GACzBrV,YAAawP,EACbvP,SAAUd,OA+EtB,SAASiX,KACLtG,EAAMvE,MAAM/b,KAAM0N,WAElB,IAAImJ,EAAUiE,EAAO9a,KAAK6W,QAAS7W,MACnCA,KAAK2mB,MAAQ,IAAIR,GAAWnmB,KAAKsZ,QAASzC,GAC1C7W,KAAK6mB,MAAQ,IAAIzW,GAAWpQ,KAAKsZ,QAASzC,GAE1C7W,KAAK8mB,aAAe,KACpB9mB,KAAK+mB,YAAc,GAqCvB,SAASC,GAAc3W,EAAW4W,GAnvBhB,EAovBV5W,GACArQ,KAAK8mB,aAAeG,EAAU1W,gBAAgB,GAAGgW,WACjDW,GAAahvB,KAAK8H,KAAMinB,IACL,GAAZ5W,GACP6W,GAAahvB,KAAK8H,KAAMinB,GAIhC,SAASC,GAAaD,GAClB,IAAIN,EAAQM,EAAU1W,gBAAgB,GAEtC,GAAIoW,EAAMJ,aAAevmB,KAAK8mB,aAAc,CACxC,IAAIK,EAAY,CAAC/sB,EAAGusB,EAAMtD,QAAShpB,EAAGssB,EAAMrR,SAC5CtV,KAAK+mB,YAAYjI,KAAKqI,GACtB,IAAIC,EAAMpnB,KAAK+mB,YAOflM,YANsB,WAClB,IAAIpN,EAAI2Z,EAAIjJ,QAAQgJ,GAChB1Z,GAAK,GACL2Z,EAAIhC,OAAO3X,EAAG,KAnEV,OA0EpB,SAAS4Z,GAAiBJ,GAEtB,IADA,IAAI7sB,EAAI6sB,EAAUxW,SAAS4S,QAAShpB,EAAI4sB,EAAUxW,SAAS6E,QAClD7H,EAAI,EAAGA,EAAIzN,KAAK+mB,YAAYviB,OAAQiJ,IAAK,CAC9C,IAAI3P,EAAIkC,KAAK+mB,YAAYtZ,GACrB6Z,EAAKluB,KAAKyS,IAAIzR,EAAI0D,EAAE1D,GAAImtB,EAAKnuB,KAAKyS,IAAIxR,EAAIyD,EAAEzD,GAChD,GAAIitB,GA9ES,IA8EeC,GA9Ef,GA+ET,OAAO,EAGf,OAAO,EArEX9K,EAAQmK,GAAiBtG,EAAO,CAO5BzJ,QAAS,SAAoByC,EAASkO,EAAYC,GAC9C,IAAIxC,EAAWwC,EAAUjX,aAAewP,EACpC0H,EAAWD,EAAUjX,aAAeyP,EAExC,KAAIyH,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAI3C,EACA+B,GAAc9uB,KAAK8H,KAAMwnB,EAAYC,QAClC,GAAIC,GAAWL,GAAiBnvB,KAAK8H,KAAMynB,GAC9C,OAGJznB,KAAKugB,SAASjH,EAASkO,EAAYC,KAMvC5D,QAAS,WACL7jB,KAAK2mB,MAAM9C,UACX7jB,KAAK6mB,MAAMhD,aA0CnB,IAAIgE,GAAwB9I,EAAS3E,EAAa0N,MAAO,eACrDC,GAAsBF,KAA0BhnB,EAGhDmnB,GAAuB,UACvBC,GAAoB,OACpBC,GAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,GA4IJ,WACI,IAAKP,GACD,OAAO,EAEX,IAAIQ,EAAW,GACXC,EAAcpT,EAAOqT,KAAOrT,EAAOqT,IAAIC,SAO3C,MANA,CAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQrN,SAAQ,SAAS4B,GAI/EsL,EAAStL,IAAOuL,GAAcpT,EAAOqT,IAAIC,SAAS,eAAgBzL,MAE/DsL,EAxJYI,GASvB,SAASC,GAAYtP,EAASzhB,GAC1BmI,KAAKsZ,QAAUA,EACftZ,KAAK6oB,IAAIhxB,GAGb+wB,GAAYlxB,UAAY,CAKpBmxB,IAAK,SAAShxB,GAENA,GAASmwB,KACTnwB,EAAQmI,KAAK8oB,WAGbf,IAAuB/nB,KAAKsZ,QAAQtE,QAAQ8S,OAASQ,GAAiBzwB,KACtEmI,KAAKsZ,QAAQtE,QAAQ8S,MAAMD,IAAyBhwB,GAExDmI,KAAK+oB,QAAUlxB,EAAMmtB,cAAc5G,QAMvC4K,OAAQ,WACJhpB,KAAK6oB,IAAI7oB,KAAKsZ,QAAQ3X,QAAQkX,cAOlCiQ,QAAS,WACL,IAAIC,EAAU,GAMd,OALA7N,EAAKlb,KAAKsZ,QAAQX,aAAa,SAASS,GAChC4D,EAAS5D,EAAWzX,QAAQoP,OAAQ,CAACqI,MACrC2P,EAAUA,EAAQ/C,OAAO5M,EAAW6P,sBAgEpD,SAA2BF,GAEvB,GAAI/K,EAAM+K,EAASZ,IACf,OAAOA,GAGX,IAAIe,EAAUlL,EAAM+K,EAASX,IACzBe,EAAUnL,EAAM+K,EAASV,IAM7B,GAAIa,GAAWC,EACX,OAAOhB,GAIX,GAAIe,GAAWC,EACX,OAAOD,EAAUd,GAAqBC,GAI1C,GAAIrK,EAAM+K,EAASb,IACf,OAAOA,GAGX,OAAOD,GAxFImB,CAAkBL,EAAQM,KAAK,OAO1CC,gBAAiB,SAAS1I,GACtB,IAAInQ,EAAWmQ,EAAMnQ,SACjBqS,EAAYlC,EAAMsB,gBAGtB,GAAIliB,KAAKsZ,QAAQ2H,QAAQsI,UACrB9Y,EAAS+Y,qBADb,CAKA,IAAIT,EAAU/oB,KAAK+oB,QACfU,EAAUzL,EAAM+K,EAASZ,MAAuBG,GAAgB,KAChEa,EAAUnL,EAAM+K,EAASV,MAAwBC,GAAiBD,SAClEa,EAAUlL,EAAM+K,EAASX,MAAwBE,GAAiBF,SAEtE,GAAIqB,EAAS,CAGT,IAAIC,EAAyC,IAA1B9I,EAAMtQ,SAAS9L,OAC9BmlB,EAAgB/I,EAAMc,SAAW,EACjCkI,EAAiBhJ,EAAMY,UAAY,IAEvC,GAAIkI,GAAgBC,GAAiBC,EACjC,OAIR,IAAIV,IAAWC,EAKf,OAAIM,GACCN,GAj3BcU,EAi3BH/G,GACXoG,GAAWpG,EAAY5C,EACjBlgB,KAAK8pB,WAAWrZ,QAH3B,IAWJqZ,WAAY,SAASrZ,GACjBzQ,KAAKsZ,QAAQ2H,QAAQsI,WAAY,EACjC9Y,EAAS+Y,mBAiFjB,IAMIO,GAAe,GAQnB,SAASC,GAAWroB,GAChB3B,KAAK2B,QAAUuY,EAAO,GAAIla,KAAKiqB,SAAUtoB,GAAW,IAEpD3B,KAAKkqB,GApgCE7K,IAsgCPrf,KAAKsZ,QAAU,KAGftZ,KAAK2B,QAAQoP,OAASoM,EAAYnd,KAAK2B,QAAQoP,QAAQ,GAEvD/Q,KAAKmqB,MAxBY,EA0BjBnqB,KAAKoqB,aAAe,GACpBpqB,KAAKqqB,YAAc,GAqOvB,SAASC,GAASH,GACd,OA5PkB,GA4PdA,EACO,SA/PG,EAgQHA,EACA,MAlQK,EAmQLA,EACA,OArQG,EAsQHA,EACA,QAEJ,GAQX,SAASI,GAAazH,GAClB,OAnuCiB,IAmuCbA,EACO,OAruCI,GAsuCJA,EACA,KAzuCM,GA0uCNA,EACA,OA1uCO,GA2uCPA,EACA,QAEJ,GASX,SAAS0H,GAA6B7Q,EAAiBP,GACnD,IAAIE,EAAUF,EAAWE,QACzB,OAAIA,EACOA,EAAQ/B,IAAIoC,GAEhBA,EAQX,SAAS8Q,KACLT,GAAWjO,MAAM/b,KAAM0N,WA6D3B,SAASgd,KACLD,GAAe1O,MAAM/b,KAAM0N,WAE3B1N,KAAK2qB,GAAK,KACV3qB,KAAK4qB,GAAK,KA4Ed,SAASC,KACLJ,GAAe1O,MAAM/b,KAAM0N,WAsC/B,SAASod,KACLd,GAAWjO,MAAM/b,KAAM0N,WAEvB1N,KAAK+qB,OAAS,KACd/qB,KAAKgrB,OAAS,KAmElB,SAASC,KACLR,GAAe1O,MAAM/b,KAAM0N,WA8B/B,SAASwd,KACLT,GAAe1O,MAAM/b,KAAM0N,WA2D/B,SAASyd,KACLnB,GAAWjO,MAAM/b,KAAM0N,WAIvB1N,KAAKorB,OAAQ,EACbprB,KAAKqrB,SAAU,EAEfrrB,KAAK+qB,OAAS,KACd/qB,KAAKgrB,OAAS,KACdhrB,KAAKsrB,MAAQ,EAqGjB,SAAS1a,GAAOoE,EAASrT,GAGrB,OAFAA,EAAUA,GAAW,IACbgX,YAAcwE,EAAYxb,EAAQgX,YAAa/H,GAAOqZ,SAASsB,QAChE,IAAI7a,GAAQsE,EAASrT,GA7tBhCqoB,GAAWtyB,UAAY,CAKnBuyB,SAAU,GAOVpB,IAAK,SAASlnB,GAKV,OAJAuY,EAAOla,KAAK2B,QAASA,GAGrB3B,KAAKsZ,SAAWtZ,KAAKsZ,QAAQT,YAAYmQ,SAClChpB,MAQXwrB,cAAe,SAAS7R,GACpB,GAAIoB,EAAepB,EAAiB,gBAAiB3Z,MACjD,OAAOA,KAGX,IAAIoqB,EAAepqB,KAAKoqB,aAMxB,OAJKA,GADLzQ,EAAkB6Q,GAA6B7Q,EAAiB3Z,OAC9BkqB,MAC9BE,EAAazQ,EAAgBuQ,IAAMvQ,EACnCA,EAAgB6R,cAAcxrB,OAE3BA,MAQXyrB,kBAAmB,SAAS9R,GACxB,OAAIoB,EAAepB,EAAiB,oBAAqB3Z,QAIzD2Z,EAAkB6Q,GAA6B7Q,EAAiB3Z,aACzDA,KAAKoqB,aAAazQ,EAAgBuQ,KAJ9BlqB,MAaf0rB,eAAgB,SAAS/R,GACrB,GAAIoB,EAAepB,EAAiB,iBAAkB3Z,MAClD,OAAOA,KAGX,IAAIqqB,EAAcrqB,KAAKqqB,YAMvB,OAJ+C,IAA3C/L,EAAQ+L,EADZ1Q,EAAkB6Q,GAA6B7Q,EAAiB3Z,SAE5DqqB,EAAYvL,KAAKnF,GACjBA,EAAgB+R,eAAe1rB,OAE5BA,MAQX2rB,mBAAoB,SAAShS,GACzB,GAAIoB,EAAepB,EAAiB,qBAAsB3Z,MACtD,OAAOA,KAGX2Z,EAAkB6Q,GAA6B7Q,EAAiB3Z,MAChE,IAAIic,EAAQqC,EAAQte,KAAKqqB,YAAa1Q,GAItC,OAHIsC,GAAS,GACTjc,KAAKqqB,YAAYjF,OAAOnJ,EAAO,GAE5Bjc,MAOX4rB,mBAAoB,WAChB,OAAO5rB,KAAKqqB,YAAY7lB,OAAS,GAQrCqnB,iBAAkB,SAASlS,GACvB,QAAS3Z,KAAKoqB,aAAazQ,EAAgBuQ,KAQ/C/G,KAAM,SAASvC,GACX,IAAI3oB,EAAO+H,KACPmqB,EAAQnqB,KAAKmqB,MAEjB,SAAShH,EAAKtS,GACV5Y,EAAKqhB,QAAQ6J,KAAKtS,EAAO+P,GAIzBuJ,EArJM,GAsJNhH,EAAKlrB,EAAK0J,QAAQkP,MAAQyZ,GAASH,IAGvChH,EAAKlrB,EAAK0J,QAAQkP,OAEd+P,EAAMkL,iBACN3I,EAAKvC,EAAMkL,iBAIX3B,GAhKM,GAiKNhH,EAAKlrB,EAAK0J,QAAQkP,MAAQyZ,GAASH,KAU3C4B,QAAS,SAASnL,GACd,GAAI5gB,KAAKgsB,UACL,OAAOhsB,KAAKmjB,KAAKvC,GAGrB5gB,KAAKmqB,MAAQJ,IAOjBiC,QAAS,WAEL,IADA,IAAIve,EAAI,EACDA,EAAIzN,KAAKqqB,YAAY7lB,QAAQ,CAChC,KAAM,GAAAxE,KAAKqqB,YAAY5c,GAAG0c,OACtB,OAAO,EAEX1c,IAEJ,OAAO,GAOX2V,UAAW,SAASqE,GAGhB,IAAIwE,EAAiB/R,EAAO,GAAIuN,GAGhC,IAAKzK,EAAShd,KAAK2B,QAAQoP,OAAQ,CAAC/Q,KAAMisB,IAGtC,OAFAjsB,KAAKksB,aACLlsB,KAAKmqB,MAAQJ,IAKb,GAAA/pB,KAAKmqB,QACLnqB,KAAKmqB,MAvNI,GA0NbnqB,KAAKmqB,MAAQnqB,KAAKmsB,QAAQF,GAItB,GAAAjsB,KAAKmqB,OACLnqB,KAAK+rB,QAAQE,IAWrBE,QAAS,SAAS1E,KAOlBwB,eAAgB,aAOhBiD,MAAO,cA8DXzP,EAAQgO,GAAgBT,GAAY,CAKhCC,SAAU,CAKN3Z,SAAU,GASd8b,SAAU,SAASxL,GACf,IAAIyL,EAAiBrsB,KAAK2B,QAAQ2O,SAClC,OAA0B,IAAnB+b,GAAwBzL,EAAMtQ,SAAS9L,SAAW6nB,GAS7DF,QAAS,SAASvL,GACd,IAAIuJ,EAAQnqB,KAAKmqB,MACb9Z,EAAYuQ,EAAMvQ,UAElBic,EAAuB,EAARnC,EACfoC,EAAUvsB,KAAKosB,SAASxL,GAG5B,OAAI0L,IAlzCO,EAkzCUjc,IAA6Bkc,GAvVpC,GAwVHpC,EACAmC,GAAgBC,EArzCnB,EAszCAlc,EA5VE,EA6VK8Z,EA/VL,EAgWOA,EA/VL,EAkWDA,EAnWD,EAqWHJ,MAiBftN,EAAQiO,GAAeD,GAAgB,CAKnCR,SAAU,CACNpZ,MAAO,MACPC,UAAW,GACXR,SAAU,EACVwS,UA50CY0J,IA+0ChBvD,eAAgB,WACZ,IAAInG,EAAY9iB,KAAK2B,QAAQmhB,UACzBiG,EAAU,GAOd,OA11CmBc,EAo1Cf/G,GACAiG,EAAQjK,KAAKuJ,IAEbvF,EAAY5C,GACZ6I,EAAQjK,KAAKsJ,IAEVW,GAGX0D,cAAe,SAAS7L,GACpB,IAAIjf,EAAU3B,KAAK2B,QACf+qB,GAAW,EACXhL,EAAWd,EAAMc,SACjBoB,EAAYlC,EAAMkC,UAClB1oB,EAAIwmB,EAAMmB,OACV1nB,EAAIumB,EAAMoB,OAed,OAZMc,EAAYnhB,EAAQmhB,YAt2CP+G,EAu2CXloB,EAAQmhB,WACRA,EAAmB,IAAN1oB,EA92CR,EA82CqCA,EAAI,EA72CzC,EACC,EA62CNsyB,EAAWtyB,GAAK4F,KAAK2qB,GACrBjJ,EAAWtoB,KAAKyS,IAAI+U,EAAMmB,UAE1Be,EAAmB,IAANzoB,EAl3CR,EAk3CqCA,EAAI,EA/2C3C,EACE,GA+2CLqyB,EAAWryB,GAAK2F,KAAK4qB,GACrBlJ,EAAWtoB,KAAKyS,IAAI+U,EAAMoB,UAGlCpB,EAAMkC,UAAYA,EACX4J,GAAYhL,EAAW/f,EAAQmP,WAAagS,EAAYnhB,EAAQmhB,WAG3EsJ,SAAU,SAASxL,GACf,OAAO6J,GAAe/yB,UAAU00B,SAASl0B,KAAK8H,KAAM4gB,KAva1C,EAwaL5gB,KAAKmqB,SAxaA,EAwa0BnqB,KAAKmqB,QAAwBnqB,KAAKysB,cAAc7L,KAGxFuC,KAAM,SAASvC,GAEX5gB,KAAK2qB,GAAK/J,EAAMmB,OAChB/hB,KAAK4qB,GAAKhK,EAAMoB,OAEhB,IAAIc,EAAYyH,GAAa3J,EAAMkC,WAE/BA,IACAlC,EAAMkL,gBAAkB9rB,KAAK2B,QAAQkP,MAAQiS,GAEjD9iB,KAAK+c,OAAOoG,KAAKjrB,KAAK8H,KAAM4gB,MAcpCnE,EAAQoO,GAAiBJ,GAAgB,CAKrCR,SAAU,CACNpZ,MAAO,QACPC,UAAW,EACXR,SAAU,GAGd2Y,eAAgB,WACZ,MAAO,CAACd,KAGZiE,SAAU,SAASxL,GACf,OAAO5gB,KAAK+c,OAAOqP,SAASl0B,KAAK8H,KAAM4gB,KAClCxnB,KAAKyS,IAAI+U,EAAM/mB,MAAQ,GAAKmG,KAAK2B,QAAQmP,WApdpC,EAodiD9Q,KAAKmqB,QAGpEhH,KAAM,SAASvC,GACX,GAAoB,IAAhBA,EAAM/mB,MAAa,CACnB,IAAI8yB,EAAQ/L,EAAM/mB,MAAQ,EAAI,KAAO,MACrC+mB,EAAMkL,gBAAkB9rB,KAAK2B,QAAQkP,MAAQ8b,EAEjD3sB,KAAK+c,OAAOoG,KAAKjrB,KAAK8H,KAAM4gB,MAiBpCnE,EAAQqO,GAAiBd,GAAY,CAKjCC,SAAU,CACNpZ,MAAO,QACPP,SAAU,EACVsc,KAAM,IACN9b,UAAW,GAGfmY,eAAgB,WACZ,MAAO,CAAChB,KAGZkE,QAAS,SAASvL,GACd,IAAIjf,EAAU3B,KAAK2B,QACfkrB,EAAgBjM,EAAMtQ,SAAS9L,SAAW7C,EAAQ2O,SAClDwc,EAAgBlM,EAAMc,SAAW/f,EAAQmP,UACzCic,EAAYnM,EAAMY,UAAY7f,EAAQirB,KAM1C,GAJA5sB,KAAKgrB,OAASpK,GAITkM,IAAkBD,GAAkB,GAAAjM,EAAMvQ,YAA2C0c,EACtF/sB,KAAKksB,aACF,GAn+CG,EAm+CCtL,EAAMvQ,UACbrQ,KAAKksB,QACLlsB,KAAK+qB,OAAStQ,GAAkB,WAC5Bza,KAAKmqB,MA1gBH,EA2gBFnqB,KAAK+rB,YACNpqB,EAAQirB,KAAM5sB,WACd,GAv+CC,EAu+CG4gB,EAAMvQ,UACb,OA9gBM,EAghBV,OAAO0Z,IAGXmC,MAAO,WACHc,aAAahtB,KAAK+qB,SAGtB5H,KAAM,SAASvC,GAvhBD,IAwhBN5gB,KAAKmqB,QAILvJ,GAt/CI,EAs/CMA,EAAMvQ,UAChBrQ,KAAKsZ,QAAQ6J,KAAKnjB,KAAK2B,QAAQkP,MAAQ,KAAM+P,IAE7C5gB,KAAKgrB,OAAOzJ,UAAYhH,IACxBva,KAAKsZ,QAAQ6J,KAAKnjB,KAAK2B,QAAQkP,MAAO7Q,KAAKgrB,aAevDvO,EAAQwO,GAAkBR,GAAgB,CAKtCR,SAAU,CACNpZ,MAAO,SACPC,UAAW,EACXR,SAAU,GAGd2Y,eAAgB,WACZ,MAAO,CAACd,KAGZiE,SAAU,SAASxL,GACf,OAAO5gB,KAAK+c,OAAOqP,SAASl0B,KAAK8H,KAAM4gB,KAClCxnB,KAAKyS,IAAI+U,EAAM4B,UAAYxiB,KAAK2B,QAAQmP,WAlkBnC,EAkkBgD9Q,KAAKmqB,UAcvE1N,EAAQyO,GAAiBT,GAAgB,CAKrCR,SAAU,CACNpZ,MAAO,QACPC,UAAW,GACX6R,SAAU,GACVG,UAAW0J,GACXlc,SAAU,GAGd2Y,eAAgB,WACZ,OAAOyB,GAAchzB,UAAUuxB,eAAe/wB,KAAK8H,OAGvDosB,SAAU,SAASxL,GACf,IACI+B,EADAG,EAAY9iB,KAAK2B,QAAQmhB,UAW7B,OARgB,GAAZA,EACAH,EAAW/B,EAAMwB,gBArjDFyH,EAsjDR/G,EACPH,EAAW/B,EAAM0B,iBACVQ,EAAY5C,IACnByC,EAAW/B,EAAM2B,kBAGdviB,KAAK+c,OAAOqP,SAASl0B,KAAK8H,KAAM4gB,IACnCkC,EAAYlC,EAAMsB,iBAClBtB,EAAMc,SAAW1hB,KAAK2B,QAAQmP,WAC9B8P,EAAM8B,aAAe1iB,KAAK2B,QAAQ2O,UAClCzE,EAAI8W,GAAY3iB,KAAK2B,QAAQghB,UAzkDzB,EAykDqC/B,EAAMvQ,WAGvD8S,KAAM,SAASvC,GACX,IAAIkC,EAAYyH,GAAa3J,EAAMsB,iBAC/BY,GACA9iB,KAAKsZ,QAAQ6J,KAAKnjB,KAAK2B,QAAQkP,MAAQiS,EAAWlC,GAGtD5gB,KAAKsZ,QAAQ6J,KAAKnjB,KAAK2B,QAAQkP,MAAO+P,MA2B9CnE,EAAQ0O,GAAenB,GAAY,CAK/BC,SAAU,CACNpZ,MAAO,MACPP,SAAU,EACVU,KAAM,EACNic,SAAU,IACVL,KAAM,IACN9b,UAAW,EACXoc,aAAc,IAGlBjE,eAAgB,WACZ,MAAO,CAACf,KAGZiE,QAAS,SAASvL,GACd,IAAIjf,EAAU3B,KAAK2B,QAEfkrB,EAAgBjM,EAAMtQ,SAAS9L,SAAW7C,EAAQ2O,SAClDwc,EAAgBlM,EAAMc,SAAW/f,EAAQmP,UACzCqc,EAAiBvM,EAAMY,UAAY7f,EAAQirB,KAI/C,GAFA5sB,KAAKksB,QAzoDK,EA2oDLtL,EAAMvQ,WAA4C,IAAfrQ,KAAKsrB,MACzC,OAAOtrB,KAAKotB,cAKhB,GAAIN,GAAiBK,GAAkBN,EAAe,CAClD,GAhpDI,GAgpDAjM,EAAMvQ,UACN,OAAOrQ,KAAKotB,cAGhB,IAAIC,GAAgBrtB,KAAKorB,OAASxK,EAAMW,UAAYvhB,KAAKorB,MAAQzpB,EAAQsrB,SACrEK,GAAiBttB,KAAKqrB,SAAW1J,EAAY3hB,KAAKqrB,QAASzK,EAAMxkB,QAAUuF,EAAQurB,aAgBvF,GAdAltB,KAAKorB,MAAQxK,EAAMW,UACnBvhB,KAAKqrB,QAAUzK,EAAMxkB,OAEhBkxB,GAAkBD,EAGnBrtB,KAAKsrB,OAAS,EAFdtrB,KAAKsrB,MAAQ,EAKjBtrB,KAAKgrB,OAASpK,EAKG,IADF5gB,KAAKsrB,MAAQ3pB,EAAQqP,KAIhC,OAAKhR,KAAK4rB,sBAGN5rB,KAAK+qB,OAAStQ,GAAkB,WAC5Bza,KAAKmqB,MAltBX,EAmtBMnqB,KAAK+rB,YACNpqB,EAAQsrB,SAAUjtB,MAttBvB,GAEA,EAytBV,OAAO+pB,IAGXqD,YAAa,WAIT,OAHAptB,KAAK+qB,OAAStQ,GAAkB,WAC5Bza,KAAKmqB,MAAQJ,KACd/pB,KAAK2B,QAAQsrB,SAAUjtB,MACnB+pB,IAGXmC,MAAO,WACHc,aAAahtB,KAAK+qB,SAGtB5H,KAAM,WAvuBQ,GAwuBNnjB,KAAKmqB,QACLnqB,KAAKgrB,OAAOuC,SAAWvtB,KAAKsrB,MAC5BtrB,KAAKsZ,QAAQ6J,KAAKnjB,KAAK2B,QAAQkP,MAAO7Q,KAAKgrB,YAoBvDpa,GAAO4c,QAAU,QAMjB5c,GAAOqZ,SAAW,CAOdwD,WAAW,EAQX5U,YAAamP,GAMbjX,QAAQ,EASRyP,YAAa,KAObkN,WAAY,KAOZnC,OAAQ,CAEJ,CAACN,GAAkB,CAACla,QAAQ,IAC5B,CAAC8Z,GAAiB,CAAC9Z,QAAQ,GAAQ,CAAC,WACpC,CAACma,GAAiB,CAACpI,UArwDA+G,IAswDnB,CAACa,GAAe,CAAC5H,UAtwDE+G,GAswDgC,CAAC,UACpD,CAACsB,IACD,CAACA,GAAe,CAACta,MAAO,YAAaG,KAAM,GAAI,CAAC,QAChD,CAAC8Z,KAQL6C,SAAU,CAMNC,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAa3B,SAASvd,GAAQsE,EAASrT,GAzwD1B,IAA6B2X,EA0wDzBtZ,KAAK2B,QAAUuY,EAAO,GAAItJ,GAAOqZ,SAAUtoB,GAAW,IAEtD3B,KAAK2B,QAAQ6e,YAAcxgB,KAAK2B,QAAQ6e,aAAexL,EAEvDhV,KAAK+W,SAAW,GAChB/W,KAAKihB,QAAU,GACfjhB,KAAK2Y,YAAc,GACnB3Y,KAAKkuB,YAAc,GAEnBluB,KAAKgV,QAAUA,EACfhV,KAAK4gB,MArwDE,KAfkBtH,EAoxDQtZ,MAlxDR2B,QAAQ+rB,aAItB9N,EACAnQ,GACAoQ,EACAsG,GACCxG,EAGDiH,GAFAxW,KAIOkJ,EAASqH,GAswD3B3gB,KAAK6Y,YAAc,IAAI+P,GAAY5oB,KAAMA,KAAK2B,QAAQkX,aAEtDsV,GAAenuB,MAAM,GAErBkb,EAAKlb,KAAK2B,QAAQgX,aAAa,SAASyV,GACpC,IAAIhV,EAAapZ,KAAKoF,IAAI,IAAKgpB,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAMhV,EAAWoS,cAAc4C,EAAK,IACzCA,EAAK,IAAMhV,EAAWsS,eAAe0C,EAAK,MAC3CpuB,MA4PP,SAASmuB,GAAe7U,EAASlU,GAC7B,IAII8Z,EAJAlK,EAAUsE,EAAQtE,QACjBA,EAAQ8S,QAIb5M,EAAK5B,EAAQ3X,QAAQgsB,UAAU,SAAS91B,EAAOshB,GAC3C+F,EAAOH,EAAS/J,EAAQ8S,MAAO3O,GAC3B/T,GACAkU,EAAQ4U,YAAYhP,GAAQlK,EAAQ8S,MAAM5I,GAC1ClK,EAAQ8S,MAAM5I,GAAQrnB,GAEtBmd,EAAQ8S,MAAM5I,GAAQ5F,EAAQ4U,YAAYhP,IAAS,MAGtD9Z,IACDkU,EAAQ4U,YAAc,KAzQ9Bxd,GAAQhZ,UAAY,CAMhBmxB,IAAK,SAASlnB,GAaV,OAZAuY,EAAOla,KAAK2B,QAASA,GAGjBA,EAAQkX,aACR7Y,KAAK6Y,YAAYmQ,SAEjBrnB,EAAQ6e,cAERxgB,KAAK4gB,MAAMiD,UACX7jB,KAAK4gB,MAAMlL,OAAS/T,EAAQ6e,YAC5BxgB,KAAK4gB,MAAMF,QAER1gB,MASXquB,KAAM,SAASC,GACXtuB,KAAKihB,QAAQsN,QAAUD,EA5Db,EADP,GAsEPlL,UAAW,SAASqE,GAChB,IAAIxG,EAAUjhB,KAAKihB,QACnB,IAAIA,EAAQsN,QAAZ,CAOA,IAAInV,EAFJpZ,KAAK6Y,YAAYyQ,gBAAgB7B,GAGjC,IAAI9O,EAAc3Y,KAAK2Y,YAKnB6V,EAAgBvN,EAAQuN,gBAIvBA,GAAkBA,GAz8Bb,EAy8B8BA,EAAcrE,SAClDqE,EAAgBvN,EAAQuN,cAAgB,MAI5C,IADA,IAAI/gB,EAAI,EACDA,EAAIkL,EAAYnU,QACnB4U,EAAaT,EAAYlL,GA9FnB,IAsGFwT,EAAQsN,SACHC,GAAiBpV,GAAcoV,IAChCpV,EAAWyS,iBAAiB2C,GAGhCpV,EAAW8S,QAFX9S,EAAWgK,UAAUqE,IAOpB+G,GAAiB,GAAApV,EAAW+Q,QAC7BqE,EAAgBvN,EAAQuN,cAAgBpV,GAE5C3L,MASR8J,IAAK,SAAS6B,GACV,GAAIA,aAAsB4Q,GACtB,OAAO5Q,EAIX,IADA,IAAIT,EAAc3Y,KAAK2Y,YACdlL,EAAI,EAAGA,EAAIkL,EAAYnU,OAAQiJ,IACpC,GAAIkL,EAAYlL,GAAG9L,QAAQkP,OAASuI,EAChC,OAAOT,EAAYlL,GAG3B,OAAO,MASXrI,IAAK,SAASgU,GACV,GAAI2B,EAAe3B,EAAY,MAAOpZ,MAClC,OAAOA,KAIX,IAAIyuB,EAAWzuB,KAAKuX,IAAI6B,EAAWzX,QAAQkP,OAS3C,OARI4d,GACAzuB,KAAK0uB,OAAOD,GAGhBzuB,KAAK2Y,YAAYmG,KAAK1F,GACtBA,EAAWE,QAAUtZ,KAErBA,KAAK6Y,YAAYmQ,SACV5P,GAQXsV,OAAQ,SAAStV,GACb,GAAI2B,EAAe3B,EAAY,SAAUpZ,MACrC,OAAOA,KAMX,GAHAoZ,EAAapZ,KAAKuX,IAAI6B,GAGN,CACZ,IAAIT,EAAc3Y,KAAK2Y,YACnBsD,EAAQqC,EAAQ3F,EAAaS,IAElB,IAAX6C,IACAtD,EAAYyM,OAAOnJ,EAAO,GAC1Bjc,KAAK6Y,YAAYmQ,UAIzB,OAAOhpB,MASX2uB,GAAI,SAASjW,EAAQ7B,GACjB,GAAI6B,IAAW7X,GAGXgW,IAAYhW,EAAhB,CAIA,IAAIkW,EAAW/W,KAAK+W,SAKpB,OAJAmE,EAAKsC,EAAS9E,IAAS,SAAS7H,GAC5BkG,EAASlG,GAASkG,EAASlG,IAAU,GACrCkG,EAASlG,GAAOiO,KAAKjI,MAElB7W,OASX4uB,IAAK,SAASlW,EAAQ7B,GAClB,GAAI6B,IAAW7X,EAAf,CAIA,IAAIkW,EAAW/W,KAAK+W,SAQpB,OAPAmE,EAAKsC,EAAS9E,IAAS,SAAS7H,GACvBgG,EAGDE,EAASlG,IAAUkG,EAASlG,GAAOuU,OAAO9G,EAAQvH,EAASlG,GAAQgG,GAAU,UAFtEE,EAASlG,MAKjB7Q,OAQXmjB,KAAM,SAAStS,EAAOge,GAEd7uB,KAAK2B,QAAQ8rB,WAkEzB,SAAyB5c,EAAOge,GAC5B,IAAIC,EAAe9U,EAAS+U,YAAY,SACxCD,EAAaE,UAAUne,GAAO,GAAM,GACpCie,EAAaG,QAAUJ,EACvBA,EAAKnZ,OAAOwZ,cAAcJ,GArElBK,CAAgBte,EAAOge,GAI3B,IAAI9X,EAAW/W,KAAK+W,SAASlG,IAAU7Q,KAAK+W,SAASlG,GAAO4N,QAC5D,GAAK1H,GAAaA,EAASvS,OAA3B,CAIAqqB,EAAKpZ,KAAO5E,EACZge,EAAKrF,eAAiB,WAClBqF,EAAKpe,SAAS+Y,kBAIlB,IADA,IAAI/b,EAAI,EACDA,EAAIsJ,EAASvS,QAChBuS,EAAStJ,GAAGohB,GACZphB,MAQRoW,QAAS,WACL7jB,KAAKgV,SAAWmZ,GAAenuB,MAAM,GAErCA,KAAK+W,SAAW,GAChB/W,KAAKihB,QAAU,GACfjhB,KAAK4gB,MAAMiD,UACX7jB,KAAKgV,QAAU,OAyCvBkF,EAAOtJ,GAAQ,CACXwe,YAtoEc,EAuoEdC,WAtoEa,EAuoEbC,UAtoEY,EAuoEZC,aAtoEe,EAwoEfC,eAlrCiB,EAmrCjBC,YAlrCc,EAmrCdC,cAlrCgB,EAmrChBC,YAlrCc,EAmrCdC,iBAnrCc,EAorCdC,gBAlrCkB,GAmrClB9F,aAAcA,GAEd+F,eA9oEiB,EA+oEjBjG,eA9oEiB,EA+oEjBkG,gBA9oEkB,EA+oElB5P,aA9oEe,EA+oEf6P,eA9oEiB,GA+oEjBxD,qBA7oEuB3C,EA8oEvB3J,mBAAoBA,EACpB+P,cA7oEgBzD,GA+oEhB9b,QAASA,GACT4P,MAAOA,EACPsI,YAAaA,GAEbzC,WAAYA,GACZ/V,WAAYA,GACZX,kBAAmBA,GACnBmX,gBAAiBA,GACjBnB,iBAAkBA,GAElBuE,WAAYA,GACZS,eAAgBA,GAChByF,IAAK/E,GACLgF,IAAKzF,GACL0F,MAAOlF,GACPmF,MAAOxF,GACPyF,OAAQrF,GACRsF,MAAOzF,GAEP6D,GAAIrR,EACJsR,IAAKlR,EACLxC,KAAMA,EACNqB,MAAOA,EACPH,OAAQA,EACRlC,OAAQA,EACRuC,QAASA,EACT3B,OAAQA,EACRiE,SAAUA,KAKsB,qBAAX3J,EAAyBA,EAA0B,qBAATnd,KAAuBA,KAAO,IACtF2Y,OAASA,IAGhB4f,aACI,OAAO5f,IADL,kCApkFV,CA6kFGwE,OAAQ4E,W,kCC1jFX,kHAAO,IAAMtF,EACU,qBAAdqL,WAA6BA,UAApC,UAA0DA,oBAA1D,cADK,GAGD0Q,EAA4B,qBAAXrb,OAAyBA,OAAhD,EAWIH,GAV8B,qBAAXyb,GAAvB,OACsC,qBAAb1W,UAA2BA,UASpD,GAGA,IACE,IAAMrY,EAAU,CAGd,cAEE,OADAsT,MACA,IAIJwb,+BACAA,kCACA,MAAOE,O","file":"static/js/6.ede15640.chunk.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import * as vec4 from 'gl-matrix/vec4';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start, end, step) {\n  return step * end + (1 - step) * start;\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || '@math.gl/web-mercator: assertion failed.');\n  }\n}\n","// TODO - THE UTILITIES IN THIS FILE SHOULD BE IMPORTED FROM WEB-MERCATOR-VIEWPORT MODULE\n\nimport {createMat4, transformVector} from './math-utils';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport assert from './assert';\n\n// CONSTANTS\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\n// Average circumference (40075 km equatorial, 40007 km meridional)\nconst EARTH_CIRCUMFERENCE = 40.03e6;\n\n// Mapbox default altitude\nconst DEFAULT_ALTITUDE = 1.5;\n\n/** Util functions **/\nexport function zoomToScale(zoom) {\n  return Math.pow(2, zoom);\n}\n\nexport function scaleToZoom(scale) {\n  return Math.log2(scale);\n}\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return [x,y] coordinates.\n */\nexport function lngLatToWorld([lng, lat]) {\n  assert(Number.isFinite(lng));\n  assert(Number.isFinite(lat) && lat >= -90 && lat <= 90, 'invalid latitude');\n\n  const lambda2 = lng * DEGREES_TO_RADIANS;\n  const phi2 = lat * DEGREES_TO_RADIANS;\n  const x = (TILE_SIZE * (lambda2 + PI)) / (2 * PI);\n  const y = (TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5)))) / (2 * PI);\n  return [x, y];\n}\n\n// Unproject world point [x,y] on map onto {lat, lon} on sphere\nexport function worldToLngLat([x, y]) {\n  const lambda2 = (x / TILE_SIZE) * (2 * PI) - PI;\n  const phi2 = 2 * (Math.atan(Math.exp((y / TILE_SIZE) * (2 * PI) - PI)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n// Returns the zoom level that gives a 1 meter pixel at a certain latitude\n// 1 = C*cos(y)/2^z/TILE_SIZE = C*cos(y)/2^(z+9)\nexport function getMeterZoom({latitude}) {\n  assert(Number.isFinite(latitude));\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\n\nexport function getDistanceScales({latitude, longitude, highPrecision = false}) {\n  assert(Number.isFinite(latitude) && Number.isFinite(longitude));\n\n  const result = {};\n  const worldSize = TILE_SIZE;\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n\n  /**\n   * Number of pixels occupied by one degree longitude around current lat/lon:\n     unitsPerDegreeX = d(lngLatToWorld([lng, lat])[0])/d(lng)\n       = scale * TILE_SIZE * DEGREES_TO_RADIANS / (2 * PI)\n     unitsPerDegreeY = d(lngLatToWorld([lng, lat])[1])/d(lat)\n       = -scale * TILE_SIZE * DEGREES_TO_RADIANS / cos(lat * DEGREES_TO_RADIANS)  / (2 * PI)\n   */\n  const unitsPerDegreeX = worldSize / 360;\n  const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n\n  /**\n   * Number of pixels occupied by one meter around current lat/lon:\n   */\n  const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n\n  /**\n   * LngLat: longitude -> east and latitude -> north (bottom left)\n   * UTM meter offset: x -> east and y -> north (bottom left)\n   * World space: x -> east and y -> south (top left)\n   *\n   * Y needs to be flipped when converting delta degree/meter to delta pixels\n   */\n  result.unitsPerMeter = [altUnitsPerMeter, altUnitsPerMeter, altUnitsPerMeter];\n  result.metersPerUnit = [1 / altUnitsPerMeter, 1 / altUnitsPerMeter, 1 / altUnitsPerMeter];\n\n  result.unitsPerDegree = [unitsPerDegreeX, unitsPerDegreeY, altUnitsPerMeter];\n  result.degreesPerUnit = [1 / unitsPerDegreeX, 1 / unitsPerDegreeY, 1 / altUnitsPerMeter];\n\n  /**\n   * Taylor series 2nd order for 1/latCosine\n     f'(a) * (x - a)\n       = d(1/cos(lat * DEGREES_TO_RADIANS))/d(lat) * dLat\n       = DEGREES_TO_RADIANS * tan(lat * DEGREES_TO_RADIANS) / cos(lat * DEGREES_TO_RADIANS) * dLat\n   */\n  if (highPrecision) {\n    const latCosine2 = (DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS)) / latCosine;\n    const unitsPerDegreeY2 = (unitsPerDegreeX * latCosine2) / 2;\n    const altUnitsPerDegree2 = (worldSize / EARTH_CIRCUMFERENCE) * latCosine2;\n    const altUnitsPerMeter2 = (altUnitsPerDegree2 / unitsPerDegreeY) * altUnitsPerMeter;\n\n    result.unitsPerDegree2 = [0, unitsPerDegreeY2, altUnitsPerDegree2];\n    result.unitsPerMeter2 = [altUnitsPerMeter2, 0, altUnitsPerMeter2];\n  }\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return result;\n}\n\n/**\n * Offset a lng/lat position by meterOffset (northing, easting)\n */\nexport function addMetersToLngLat(lngLatZ, xyz) {\n  const [longitude, latitude, z0] = lngLatZ;\n  const [x, y, z] = xyz;\n\n  const {unitsPerMeter, unitsPerMeter2} = getDistanceScales({\n    longitude,\n    latitude,\n    highPrecision: true\n  });\n\n  const worldspace = lngLatToWorld(lngLatZ);\n  worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n  worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n\n  // @ts-ignore\n  const newLngLat = worldToLngLat(worldspace);\n  const newZ = (z0 || 0) + (z || 0);\n\n  return Number.isFinite(z0) || Number.isFinite(z) ? [newLngLat[0], newLngLat[1], newZ] : newLngLat;\n}\n\n// ATTRIBUTION:\n// view and projection matrix creation is intentionally kept compatible with\n// mapbox-gl's implementation to ensure that seamless interoperation\n// with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\n\nexport function getViewMatrix({\n  // Viewport props\n  height,\n  pitch,\n  bearing,\n  altitude,\n  // Pre-calculated parameters\n  scale,\n  center = null\n}) {\n  // VIEW MATRIX: PROJECTS MERCATOR WORLD COORDINATES\n  // Note that mercator world coordinates typically need to be flipped\n  //\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  const vm = createMat4();\n\n  // Move camera to altitude (along the pitch & bearing direction)\n  mat4.translate(vm, vm, [0, 0, -altitude]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  mat4.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n  mat4.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n\n  scale /= height;\n  mat4.scale(vm, vm, [scale, scale, scale]);\n\n  if (center) {\n    mat4.translate(vm, vm, vec3.negate([], center));\n  }\n\n  return vm;\n}\n\n// PROJECTION MATRIX PARAMETERS\n// Variable fov (in radians)\nexport function getProjectionParameters({\n  width,\n  height,\n  altitude = DEFAULT_ALTITUDE,\n  pitch = 0,\n  nearZMultiplier = 1,\n  farZMultiplier = 1\n}) {\n  // Find the distance from the center point to the center top\n  // in altitude units using law of sines.\n  const pitchRadians = pitch * DEGREES_TO_RADIANS;\n  const halfFov = Math.atan(0.5 / altitude);\n  const topHalfSurfaceDistance =\n    (Math.sin(halfFov) * altitude) /\n    Math.sin(Math.min(Math.max(Math.PI / 2 - pitchRadians - halfFov, 0.01), Math.PI - 0.01));\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  const farZ = Math.sin(pitchRadians) * topHalfSurfaceDistance + altitude;\n\n  return {\n    fov: 2 * halfFov,\n    aspect: width / height,\n    focalDistance: altitude,\n    near: nearZMultiplier,\n    far: farZ * farZMultiplier\n  };\n}\n\n// PROJECTION MATRIX: PROJECTS FROM CAMERA (VIEW) SPACE TO CLIPSPACE\n// To match mapbox's z buffer:\n// <= 0.28 - nearZMultiplier: 0.1, farZmultiplier: 1\n// >= 0.29 - nearZMultiplier: 1 / height, farZMultiplier: 1.01\nexport function getProjectionMatrix({\n  width,\n  height,\n  pitch,\n  altitude,\n  nearZMultiplier,\n  farZMultiplier\n}) {\n  const {fov, aspect, near, far} = getProjectionParameters({\n    width,\n    height,\n    altitude,\n    pitch,\n    nearZMultiplier,\n    farZMultiplier\n  });\n\n  const projectionMatrix = mat4.perspective(\n    [],\n    fov, // fov in radians\n    aspect, // aspect ratio\n    near, // near plane\n    far // far plane\n  );\n\n  return projectionMatrix;\n}\n\n// Project flat coordinates to pixels on screen.\nexport function worldToPixels(xyz, pixelProjectionMatrix) {\n  const [x, y, z = 0] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n\n  return transformVector(pixelProjectionMatrix, [x, y, z, 1]);\n}\n\n// Unproject pixels on screen to flat coordinates.\nexport function pixelsToWorld(xyz, pixelUnprojectionMatrix, targetZ = 0) {\n  const [x, y, z] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y), 'invalid pixel coordinate');\n\n  if (Number.isFinite(z)) {\n    // Has depth component\n    const coord = transformVector(pixelUnprojectionMatrix, [x, y, z, 1]);\n    return coord;\n  }\n\n  // since we don't know the correct projected z value for the point,\n  // unproject two points to get a line and then find the point on that line with z=0\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, y, 0, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, y, 1, 1]);\n\n  const z0 = coord0[2];\n  const z1 = coord1[2];\n\n  const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n  return vec2.lerp([], coord0, coord1, t);\n}\n","// @ts-nocheck TODO padding\nimport WebMercatorViewport from './web-mercator-viewport';\nimport assert from './assert';\n\n// Returns map settings {latitude, longitude, zoom}\n// that will contain the provided corners within the provided width.\n// Only supports non-perspective mode.\n\nexport default function fitBounds({\n  width,\n  height,\n  bounds,\n  minExtent = 0, // 0.01 would be about 1000 meters (degree is ~110KM)\n  maxZoom = 24, // ~x4,000,000 => About 10 meter extents\n  // options\n  padding = 0,\n  offset = [0, 0]\n}) {\n  const [[west, south], [east, north]] = bounds;\n\n  if (Number.isFinite(padding)) {\n    const p = padding;\n    padding = {\n      top: p,\n      bottom: p,\n      left: p,\n      right: p\n    };\n  } else {\n    // Make sure all the required properties are set\n    assert(\n      Number.isFinite(padding.top) &&\n        Number.isFinite(padding.bottom) &&\n        Number.isFinite(padding.left) &&\n        Number.isFinite(padding.right)\n    );\n  }\n\n  const viewport = new WebMercatorViewport({\n    width,\n    height,\n    longitude: 0,\n    latitude: 0,\n    zoom: 0\n  });\n\n  const nw = viewport.project([west, north]);\n  const se = viewport.project([east, south]);\n\n  // width/height on the Web Mercator plane\n  const size = [\n    Math.max(Math.abs(se[0] - nw[0]), minExtent),\n    Math.max(Math.abs(se[1] - nw[1]), minExtent)\n  ];\n\n  const targetSize = [\n    width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n    height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n  ];\n\n  assert(targetSize[0] > 0 && targetSize[1] > 0);\n\n  // scale = screen pixels per unit on the Web Mercator plane\n  const scaleX = targetSize[0] / size[0];\n  const scaleY = targetSize[1] / size[1];\n\n  // Find how much we need to shift the center\n  const offsetX = (padding.right - padding.left) / 2 / scaleX;\n  const offsetY = (padding.bottom - padding.top) / 2 / scaleY;\n\n  const center = [(se[0] + nw[0]) / 2 + offsetX, (se[1] + nw[1]) / 2 + offsetY];\n\n  const centerLngLat = viewport.unproject(center);\n  const zoom = Math.min(maxZoom, viewport.zoom + Math.log2(Math.abs(Math.min(scaleX, scaleY))));\n\n  assert(Number.isFinite(zoom));\n\n  return {\n    longitude: centerLngLat[0],\n    latitude: centerLngLat[1],\n    zoom\n  };\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\nimport {transformVector} from './math-utils';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n/*\n * Returns the quad at the intersection of the frustum and the given z plane\n * @param {WebMercatorViewport} viewport\n * @param {Number} z - elevation in meters\n */\nexport default function getBounds(viewport, z = 0) {\n  const {width, height, unproject} = viewport;\n  const unprojectOps = {targetZ: z};\n  const bottomLeft = unproject([0, height], unprojectOps);\n  const bottomRight = unproject([width, height], unprojectOps);\n  let topLeft;\n  let topRight;\n\n  const halfFov = Math.atan(0.5 / viewport.altitude);\n  const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n  // The top plane is parallel to the ground if halfFov == angleToGround\n  if (halfFov > angleToGround - 0.01) {\n    // intersect with the far plane\n    topLeft = unprojectOnFarPlane(viewport, 0, z);\n    topRight = unprojectOnFarPlane(viewport, width, z);\n  } else {\n    // intersect with the top plane\n    topLeft = unproject([0, 0], unprojectOps);\n    topRight = unproject([width, 0], unprojectOps);\n  }\n\n  return [bottomLeft, bottomRight, topRight, topLeft];\n}\n\n/*\n * Find a point on the far clipping plane of the viewport\n * @param {WebMercatorViewport} viewport\n * @param {Number} x - projected x in screen space\n * @param {Number} targetZ - the elevation of the point in meters\n */\nfunction unprojectOnFarPlane(viewport, x, targetZ) {\n  const {pixelUnprojectionMatrix} = viewport;\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, 0, 1, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, viewport.height, 1, 1]);\n\n  const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n  const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n  const coord = vec2.lerp([], coord0, coord1, t);\n\n  const result = worldToLngLat(coord);\n  result[2] = targetZ;\n  return result;\n}\n","// View and Projection Matrix calculations for mapbox-js style map view properties\nimport {createMat4} from './math-utils';\n\nimport {\n  zoomToScale,\n  pixelsToWorld,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  getProjectionMatrix,\n  getDistanceScales,\n  getViewMatrix\n} from './web-mercator-utils';\nimport fitBounds from './fit-bounds';\nimport getBounds from './get-bounds';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\n\nexport default class WebMercatorViewport {\n  // eslint-disable-next-line max-statements\n  constructor(\n    {\n      // Map state\n      width,\n      height,\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      altitude = 1.5,\n      nearZMultiplier = 0.02,\n      farZMultiplier = 1.01\n    } = {width: 1, height: 1}\n  ) {\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    const scale = zoomToScale(zoom);\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    const center = lngLatToWorld([longitude, latitude]);\n    center[2] = 0;\n\n    this.projectionMatrix = getProjectionMatrix({\n      width,\n      height,\n      pitch,\n      altitude,\n      nearZMultiplier,\n      farZMultiplier\n    });\n\n    this.viewMatrix = getViewMatrix({\n      height,\n      scale,\n      center,\n      pitch,\n      bearing,\n      altitude\n    });\n\n    // Save parameters\n    this.width = width;\n    this.height = height;\n    this.scale = scale;\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.center = center;\n\n    this.distanceScales = getDistanceScales(this);\n\n    this._initMatrices();\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n\n    Object.freeze(this);\n  }\n\n  _initMatrices() {\n    const {width, height, projectionMatrix, viewMatrix} = this;\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, projectionMatrix);\n    mat4.multiply(vpm, vpm, viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // Calculate matrices and scales needed for projection\n    /**\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n    const m = createMat4();\n\n    // matrix for conversion from location to screen coordinates\n    mat4.scale(m, m, [width / 2, -height / 2, 1]);\n    mat4.translate(m, m, [1, -1, 0]);\n    mat4.multiply(m, m, vpm);\n\n    const mInverse = mat4.invert(createMat4(), m);\n    if (!mInverse) {\n      throw new Error('Pixel project matrix not invertible');\n    }\n\n    this.pixelProjectionMatrix = m;\n    this.pixelUnprojectionMatrix = mInverse;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport) {\n    if (!(viewport instanceof WebMercatorViewport)) {\n      return false;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      mat4.equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      mat4.equals(viewport.viewMatrix, this.viewMatrix)\n    );\n  }\n\n  // Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n  // using viewport projection parameters\n  project(xyz, {topLeft = true} = {}) {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  // Unproject pixel coordinates on screen onto world coordinates,\n  // (possibly [lon, lat]) on map.\n  unproject(xyz, {topLeft = true, targetZ = undefined} = {}) {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz) {\n    const [X, Y] = lngLatToWorld(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz) {\n    const [X, Y] = worldToLngLat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  // Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n  projectFlat(lngLat) {\n    return lngLatToWorld(lngLat);\n  }\n\n  // Unproject world point [x,y] on map onto {lat, lon} on sphere\n  unprojectFlat(xy) {\n    return worldToLngLat(xy);\n  }\n\n  // Get the map center that place a given [lng, lat] coordinate at screen point [x, y]\n  getMapCenterByLngLatPosition({lngLat, pos}) {\n    const fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n    const toLocation = lngLatToWorld(lngLat);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return worldToLngLat(newCenter);\n  }\n\n  // Legacy method name\n  getLocationAtPoint({lngLat, pos}) {\n    return this.getMapCenterByLngLatPosition({lngLat, pos});\n  }\n\n  // Returns a new viewport that fit around the given rectangle.\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds(Object.assign({width, height, bounds}, options));\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n\n  getBounds(options) {\n    const corners = this.getBoundingRegion(options);\n\n    const west = Math.min(...corners.map(p => p[0]));\n    const east = Math.max(...corners.map(p => p[0]));\n    const south = Math.min(...corners.map(p => p[1]));\n    const north = Math.max(...corners.map(p => p[1]));\n    return [[west, south], [east, north]];\n  }\n\n  getBoundingRegion(options = {}) {\n    return getBounds(this, options.z || 0);\n  }\n}\n","import WebMercatorViewport from './web-mercator-viewport';\nimport {mod} from './math-utils';\n\n// defined by mapbox-gl\nconst MAX_LATITUDE = 85.05113;\nconst MIN_LATITUDE = -85.05113;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  let flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  let topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  let bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  let shiftY = 0;\n\n  if (bottomY - topY < height) {\n    // Map height must not be smaller than viewport height\n    // Zoom out map to fit map height into viewport\n    zoom += Math.log2(height / (bottomY - topY));\n\n    // Calculate top and bottom using new zoom\n    flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n  if (topY > 0) {\n    // Compensate for white gap on top\n    shiftY = topY;\n  } else if (bottomY < height) {\n    // Compensate for white gap on bottom\n    shiftY = bottomY - height;\n  }\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n","import {lerp} from './math-utils';\nimport {scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default function flyToViewport(startProps, endProps, t, opts = {}) {\n  // Equations from above paper are referred where needed.\n\n  const viewport = {};\n\n  const {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0} = getFlyToTransitionParams(\n    startProps,\n    endProps,\n    opts\n  );\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  const u = (w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2)) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n\n  const newCenter = worldToLngLat(newCenterWorld);\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(startProps, endProps, opts = {}) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length = 1000 * S;\n  let duration;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter);\n  const endCenterXY = lngLatToWorld(endCenter);\n  const uDelta = vec2.sub([], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta) * startScale;\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/**\n * This file contains overrides the default\n * hammer.js functions to add our own utility\n */\n\n/* Hammer.js constants */\nconst INPUT_START = 1;\nconst INPUT_MOVE = 2;\nconst INPUT_END = 4;\nconst MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\n\n/**\n * Helper function that returns true if any element in an array meets given criteria.\n * Because older browsers do not support `Array.prototype.some`\n * @params array {Array}\n * @params predict {Function}\n */\nfunction some(array, predict) {\n  for (let i = 0; i < array.length; i++) {\n    if (predict(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/* eslint-disable no-invalid-this */\nexport function enhancePointerEventInput(PointerEventInput) {\n  const oldHandler = PointerEventInput.prototype.handler;\n\n  // overrides PointerEventInput.handler to accept right mouse button\n  PointerEventInput.prototype.handler = function handler(ev) {\n    const store = this.store;\n\n    // Allow non-left mouse buttons through\n    if (ev.button > 0) {\n      if (!some(store, e => e.pointerId === ev.pointerId)) {\n        store.push(ev);\n      }\n    }\n\n    oldHandler.call(this, ev);\n  };\n}\n\n// overrides MouseInput.handler to accept right mouse button\nexport function enhanceMouseInput(MouseInput) {\n  MouseInput.prototype.handler = function handler(ev) {\n    let eventType = MOUSE_INPUT_MAP[ev.type];\n\n    // on start we want to have the mouse button down\n    if (eventType & INPUT_START && ev.button >= 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which === 0) {\n      eventType = INPUT_END;\n    }\n\n    // mouse must be down\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: 'mouse',\n      srcEvent: ev\n    });\n  };\n}\n","import hammerjs from 'hammerjs';\nimport {enhancePointerEventInput, enhanceMouseInput} from './hammer-overrides';\n\nenhancePointerEventInput(hammerjs.PointerEventInput);\nenhanceMouseInput(hammerjs.MouseInput);\n\nexport const Manager = hammerjs.Manager;\n\nexport default hammerjs;\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Hammer from './utils/hammer';\n\n// This module contains constants that must be conditionally required\n// due to `window`/`document` references downstream.\nexport const RECOGNIZERS = Hammer\n  ? [\n      [Hammer.Pan, {event: 'tripan', pointers: 3, threshold: 0, enable: false}],\n      [Hammer.Rotate, {enable: false}],\n      [Hammer.Pinch, {enable: false}],\n      [Hammer.Swipe, {enable: false}],\n      [Hammer.Pan, {threshold: 0, enable: false}],\n      [Hammer.Press, {enable: false}],\n      [Hammer.Tap, {event: 'doubletap', taps: 2, enable: false}],\n      // TODO - rename to 'tap' and 'singletap' in the next major release\n      [Hammer.Tap, {event: 'anytap', enable: false}],\n      [Hammer.Tap, {enable: false}]\n    ]\n  : null;\n\n// Recognize the following gestures even if a given recognizer succeeds\nexport const RECOGNIZER_COMPATIBLE_MAP = {\n  tripan: ['rotate', 'pinch', 'pan'],\n  rotate: ['pinch'],\n  pinch: ['pan'],\n  pan: ['press', 'doubletap', 'anytap', 'tap'],\n  doubletap: ['anytap'],\n  anytap: ['tap']\n};\n\n// Recognize the folling gestures only if a given recognizer fails\nexport const RECOGNIZER_FALLBACK_MAP = {\n  doubletap: ['tap']\n};\n\n/**\n * Only one set of basic input events will be fired by Hammer.js:\n * either pointer, touch, or mouse, depending on system support.\n * In order to enable an application to be agnostic of system support,\n * alias basic input events into \"classes\" of events: down, move, and up.\n * See `_onBasicInput()` for usage of these aliases.\n */\nexport const BASIC_EVENT_ALIASES = {\n  pointerdown: 'pointerdown',\n  pointermove: 'pointermove',\n  pointerup: 'pointerup',\n  touchstart: 'pointerdown',\n  touchmove: 'pointermove',\n  touchend: 'pointerup',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};\n\nexport const INPUT_EVENT_TYPES = {\n  KEY_EVENTS: ['keydown', 'keyup'],\n  MOUSE_EVENTS: ['mousedown', 'mousemove', 'mouseup', 'mouseover', 'mouseout', 'mouseleave'],\n  WHEEL_EVENTS: [\n    // Chrome, Safari\n    'wheel',\n    // IE\n    'mousewheel',\n    // legacy Firefox\n    'DOMMouseScroll'\n  ]\n};\n\n/**\n * \"Gestural\" events are those that have semantic meaning beyond the basic input event,\n * e.g. a click or tap is a sequence of `down` and `up` events with no `move` event in between.\n * Hammer.js handles these with its Recognizer system;\n * this block maps event names to the Recognizers required to detect the events.\n */\nexport const EVENT_RECOGNIZER_MAP = {\n  tap: 'tap',\n  anytap: 'anytap',\n  doubletap: 'doubletap',\n  press: 'press',\n  pinch: 'pinch',\n  pinchin: 'pinch',\n  pinchout: 'pinch',\n  pinchstart: 'pinch',\n  pinchmove: 'pinch',\n  pinchend: 'pinch',\n  pinchcancel: 'pinch',\n  rotate: 'rotate',\n  rotatestart: 'rotate',\n  rotatemove: 'rotate',\n  rotateend: 'rotate',\n  rotatecancel: 'rotate',\n  tripan: 'tripan',\n  tripanstart: 'tripan',\n  tripanmove: 'tripan',\n  tripanup: 'tripan',\n  tripandown: 'tripan',\n  tripanleft: 'tripan',\n  tripanright: 'tripan',\n  tripanend: 'tripan',\n  tripancancel: 'tripan',\n  pan: 'pan',\n  panstart: 'pan',\n  panmove: 'pan',\n  panup: 'pan',\n  pandown: 'pan',\n  panleft: 'pan',\n  panright: 'pan',\n  panend: 'pan',\n  pancancel: 'pan',\n  swipe: 'swipe',\n  swipeleft: 'swipe',\n  swiperight: 'swipe',\n  swipeup: 'swipe',\n  swipedown: 'swipe'\n};\n\n/**\n * Map gestural events typically provided by browsers\n * that are not reported in 'hammer.input' events\n * to corresponding Hammer.js gestures.\n */\nexport const GESTURE_EVENT_ALIASES = {\n  click: 'tap',\n  anyclick: 'anytap',\n  dblclick: 'doubletap',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup',\n  mouseover: 'pointerover',\n  mouseout: 'pointerout',\n  mouseleave: 'pointerleave'\n};\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {INPUT_EVENT_TYPES} from '../constants';\nimport {window, userAgent, passiveSupported} from '../utils/globals';\n\nconst firefox = userAgent.indexOf('firefox') !== -1;\n\nconst {WHEEL_EVENTS} = INPUT_EVENT_TYPES;\nconst EVENT_TYPE = 'wheel';\n\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\n\nexport default class WheelInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n\n    this.events = WHEEL_EVENTS.concat(options.events || []);\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(event =>\n      element.addEventListener(event, this.handleEvent, passiveSupported ? {passive: false} : false)\n    );\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === EVENT_TYPE) {\n      this.options.enable = enabled;\n    }\n  }\n\n  /* eslint-disable complexity, max-statements */\n  handleEvent(event) {\n    if (!this.options.enable) {\n      return;\n    }\n\n    let value = event.deltaY;\n    if (window.WheelEvent) {\n      // Firefox doubles the values on retina screens...\n      if (firefox && event.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) {\n        value /= window.devicePixelRatio;\n      }\n      if (event.deltaMode === window.WheelEvent.DOM_DELTA_LINE) {\n        value *= WHEEL_DELTA_PER_LINE;\n      }\n    }\n\n    const wheelPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n      // This one is definitely a mouse wheel event.\n      // Normalize this value to match trackpad.\n      value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n    }\n\n    if (event.shiftKey && value) {\n      value = value * SHIFT_MULTIPLIER;\n    }\n\n    this._onWheel(event, -value, wheelPosition);\n  }\n\n  _onWheel(srcEvent, delta, position) {\n    this.callback({\n      type: EVENT_TYPE,\n      center: position,\n      delta,\n      srcEvent,\n      pointerType: 'mouse',\n      target: srcEvent.target\n    });\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {INPUT_EVENT_TYPES} from '../constants';\n\nconst {MOUSE_EVENTS} = INPUT_EVENT_TYPES;\nconst MOVE_EVENT_TYPE = 'pointermove';\nconst OVER_EVENT_TYPE = 'pointerover';\nconst OUT_EVENT_TYPE = 'pointerout';\nconst LEAVE_EVENT_TYPE = 'pointerleave';\n\n/**\n * Hammer.js swallows 'move' events (for pointer/touch/mouse)\n * when the pointer is not down. This class sets up a handler\n * specifically for these events to work around this limitation.\n * Note that this could be extended to more intelligently handle\n * move events across input types, e.g. storing multiple simultaneous\n * pointer/touch events, calculating speed/direction, etc.\n */\nexport default class MoveInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n    this.pressed = false;\n\n    this.options = Object.assign({enable: true}, options);\n    this.enableMoveEvent = this.options.enable;\n    this.enableLeaveEvent = this.options.enable;\n    this.enableOutEvent = this.options.enable;\n    this.enableOverEvent = this.options.enable;\n\n    this.events = MOUSE_EVENTS.concat(options.events || []);\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === MOVE_EVENT_TYPE) {\n      this.enableMoveEvent = enabled;\n    }\n    if (eventType === OVER_EVENT_TYPE) {\n      this.enableOverEvent = enabled;\n    }\n    if (eventType === OUT_EVENT_TYPE) {\n      this.enableOutEvent = enabled;\n    }\n    if (eventType === LEAVE_EVENT_TYPE) {\n      this.enableLeaveEvent = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    this.handleOverEvent(event);\n    this.handleOutEvent(event);\n    this.handleLeaveEvent(event);\n    this.handleMoveEvent(event);\n  }\n\n  handleOverEvent(event) {\n    if (this.enableOverEvent) {\n      if (event.type === 'mouseover') {\n        this.callback({\n          type: OVER_EVENT_TYPE,\n          srcEvent: event,\n          pointerType: 'mouse',\n          target: event.target\n        });\n      }\n    }\n  }\n\n  handleOutEvent(event) {\n    if (this.enableOutEvent) {\n      if (event.type === 'mouseout') {\n        this.callback({\n          type: OUT_EVENT_TYPE,\n          srcEvent: event,\n          pointerType: 'mouse',\n          target: event.target\n        });\n      }\n    }\n  }\n\n  handleLeaveEvent(event) {\n    if (this.enableLeaveEvent) {\n      if (event.type === 'mouseleave') {\n        this.callback({\n          type: LEAVE_EVENT_TYPE,\n          srcEvent: event,\n          pointerType: 'mouse',\n          target: event.target\n        });\n      }\n    }\n  }\n\n  handleMoveEvent(event) {\n    if (this.enableMoveEvent) {\n      switch (event.type) {\n        case 'mousedown':\n          if (event.button >= 0) {\n            // Button is down\n            this.pressed = true;\n          }\n          break;\n        case 'mousemove':\n          // Move events use `which` to track the button being pressed\n          if (event.which === 0) {\n            // Button is not down\n            this.pressed = false;\n          }\n          if (!this.pressed) {\n            // Drag events are emitted by hammer already\n            // we just need to emit the move event on hover\n            this.callback({\n              type: MOVE_EVENT_TYPE,\n              srcEvent: event,\n              pointerType: 'mouse',\n              target: event.target\n            });\n          }\n          break;\n        case 'mouseup':\n          this.pressed = false;\n          break;\n        default:\n      }\n    }\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {INPUT_EVENT_TYPES} from '../constants';\n\nconst {KEY_EVENTS} = INPUT_EVENT_TYPES;\nconst DOWN_EVENT_TYPE = 'keydown';\nconst UP_EVENT_TYPE = 'keyup';\n\nexport default class KeyInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n\n    this.events = KEY_EVENTS.concat(options.events || []);\n\n    this.handleEvent = this.handleEvent.bind(this);\n\n    element.tabIndex = options.tabIndex || 0;\n    element.style.outline = 'none';\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === DOWN_EVENT_TYPE) {\n      this.enableDownEvent = enabled;\n    }\n    if (eventType === UP_EVENT_TYPE) {\n      this.enableUpEvent = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    // Ignore if focused on text input\n    const targetElement = event.target || event.srcElement;\n    if (\n      (targetElement.tagName === 'INPUT' && targetElement.type === 'text') ||\n      targetElement.tagName === 'TEXTAREA'\n    ) {\n      return;\n    }\n\n    if (this.enableDownEvent && event.type === 'keydown') {\n      this.callback({\n        type: DOWN_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target\n      });\n    }\n\n    if (this.enableUpEvent && event.type === 'keyup') {\n      this.callback({\n        type: UP_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target\n      });\n    }\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst EVENT_TYPE = 'contextmenu';\n\nexport default class ContextmenuInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n\n    this.handleEvent = this.handleEvent.bind(this);\n    element.addEventListener('contextmenu', this.handleEvent);\n  }\n\n  destroy() {\n    this.element.removeEventListener('contextmenu', this.handleEvent);\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === EVENT_TYPE) {\n      this.options.enable = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    if (!this.options.enable) {\n      return;\n    }\n\n    this.callback({\n      type: EVENT_TYPE,\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target\n    });\n  }\n}\n","/* Constants */\nconst DOWN_EVENT = 1;\nconst MOVE_EVENT = 2;\nconst UP_EVENT = 4;\nconst MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n};\n\n// MouseEvent.which https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\nconst MOUSE_EVENT_WHICH_LEFT = 1;\nconst MOUSE_EVENT_WHICH_MIDDLE = 2;\nconst MOUSE_EVENT_WHICH_RIGHT = 3;\n// MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_EVENT_BUTTON_LEFT = 0;\nconst MOUSE_EVENT_BUTTON_MIDDLE = 1;\nconst MOUSE_EVENT_BUTTON_RIGHT = 2;\n// MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\nconst MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nconst MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nconst MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n\n/**\n * Extract the involved mouse button\n */\nexport function whichButtons(event) {\n  const eventType = MOUSE_EVENTS[event.srcEvent.type];\n  if (!eventType) {\n    // Not a mouse evet\n    return null;\n  }\n\n  const {buttons, button, which} = event.srcEvent;\n  let leftButton = false;\n  let middleButton = false;\n  let rightButton = false;\n\n  if (\n    // button is up, need to find out which one was pressed before\n    eventType === UP_EVENT ||\n    // moving but does not support `buttons` API\n    (eventType === MOVE_EVENT && !Number.isFinite(buttons))\n  ) {\n    leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n    middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n    rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n  } else if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else if (eventType === DOWN_EVENT) {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {leftButton, middleButton, rightButton};\n}\n\n/**\n * Calculate event position relative to the root element\n */\nexport function getOffsetPosition(event, rootElement) {\n  const {srcEvent} = event;\n\n  // `center` is a hammer.js event property\n  if (!event.center && !Number.isFinite(srcEvent.clientX)) {\n    // Not a gestural event\n    return null;\n  }\n\n  const center = event.center || {\n    x: srcEvent.clientX,\n    y: srcEvent.clientY\n  };\n\n  const rect = rootElement.getBoundingClientRect();\n\n  // Fix scale for map affected by a CSS transform.\n  // See https://stackoverflow.com/a/26893663/3528533\n  const scaleX = rect.width / rootElement.offsetWidth;\n  const scaleY = rect.height / rootElement.offsetHeight;\n\n  // Calculate center relative to the root element\n  const offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n\n  return {center, offsetCenter};\n}\n","import {whichButtons, getOffsetPosition} from './event-utils';\n\nconst DEFAULT_OPTIONS = {\n  srcElement: 'root',\n  priority: 0\n};\n\nexport default class EventRegistrar {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.handlers = [];\n    // Element -> handler map\n    this.handlersByElement = new Map();\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this._active = false;\n  }\n\n  // Returns true if there are no non-passive handlers\n  isEmpty() {\n    return !this._active;\n  }\n\n  add(type, handler, opts, once = false, passive = false) {\n    const {handlers, handlersByElement} = this;\n\n    if (opts && (typeof opts !== 'object' || opts.addEventListener)) {\n      // is DOM element, backward compatibility\n      opts = {srcElement: opts};\n    }\n    opts = opts ? Object.assign({}, DEFAULT_OPTIONS, opts) : DEFAULT_OPTIONS;\n\n    let entries = handlersByElement.get(opts.srcElement);\n    if (!entries) {\n      entries = [];\n      handlersByElement.set(opts.srcElement, entries);\n    }\n    const entry = {type, handler, srcElement: opts.srcElement, priority: opts.priority};\n    if (once) {\n      entry.once = true;\n    }\n    if (passive) {\n      entry.passive = true;\n    }\n    handlers.push(entry);\n    this._active = this._active || !entry.passive;\n\n    // Sort handlers by descending priority\n    // Handlers with the same priority are excuted in the order of registration\n    let insertPosition = entries.length - 1;\n    while (insertPosition >= 0) {\n      if (entries[insertPosition].priority >= entry.priority) {\n        break;\n      }\n      insertPosition--;\n    }\n    entries.splice(insertPosition + 1, 0, entry);\n  }\n\n  remove(type, handler) {\n    const {handlers, handlersByElement} = this;\n\n    for (let i = handlers.length - 1; i >= 0; i--) {\n      const entry = handlers[i];\n\n      if (entry.type === type && entry.handler === handler) {\n        handlers.splice(i, 1);\n        const entries = handlersByElement.get(entry.srcElement);\n        entries.splice(entries.indexOf(entry), 1);\n        if (entries.length === 0) {\n          handlersByElement.delete(entry.srcElement);\n        }\n      }\n    }\n    this._active = handlers.some(entry => !entry.passive);\n  }\n\n  /**\n   * Handles hammerjs event\n   */\n  handleEvent(event) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    const mjolnirEvent = this._normalizeEvent(event);\n    let target = event.srcEvent.target;\n\n    while (target && target !== mjolnirEvent.rootElement) {\n      this._emit(mjolnirEvent, target);\n      if (mjolnirEvent.handled) {\n        return;\n      }\n      target = target.parentNode;\n    }\n    this._emit(mjolnirEvent, 'root');\n  }\n\n  /**\n   * Invoke handlers on a particular element\n   */\n  _emit(event, srcElement) {\n    const entries = this.handlersByElement.get(srcElement);\n\n    if (entries) {\n      let immediatePropagationStopped = false;\n\n      // Prevents the current event from bubbling up\n      const stopPropagation = () => {\n        event.handled = true;\n      };\n      // Prevent any remaining listeners from being called\n      const stopImmediatePropagation = () => {\n        event.handled = true;\n        immediatePropagationStopped = true;\n      };\n      const entriesToRemove = [];\n\n      for (let i = 0; i < entries.length; i++) {\n        const {type, handler, once} = entries[i];\n        handler(\n          Object.assign({}, event, {\n            type,\n            stopPropagation,\n            stopImmediatePropagation\n          })\n        );\n        if (once) {\n          entriesToRemove.push(entries[i]);\n        }\n        if (immediatePropagationStopped) {\n          break;\n        }\n      }\n\n      for (let i = 0; i < entriesToRemove.length; i++) {\n        const {type, handler} = entriesToRemove[i];\n        this.remove(type, handler);\n      }\n    }\n  }\n\n  /**\n   * Normalizes hammerjs and custom events to have predictable fields.\n   */\n  _normalizeEvent(event) {\n    const rootElement = this.eventManager.element;\n\n    return Object.assign({}, event, whichButtons(event), getOffsetPosition(event, rootElement), {\n      handled: false,\n      rootElement\n    });\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Manager} from './utils/hammer';\n\nimport WheelInput from './inputs/wheel-input';\nimport MoveInput from './inputs/move-input';\nimport KeyInput from './inputs/key-input';\nimport ContextmenuInput from './inputs/contextmenu-input';\n\nimport EventRegistrar from './utils/event-registrar';\n\nimport {\n  BASIC_EVENT_ALIASES,\n  EVENT_RECOGNIZER_MAP,\n  GESTURE_EVENT_ALIASES,\n  RECOGNIZERS,\n  RECOGNIZER_COMPATIBLE_MAP,\n  RECOGNIZER_FALLBACK_MAP\n} from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // event handlers\n  events: null,\n  // custom recognizers\n  recognizers: null,\n  recognizerOptions: {},\n  // Manager class\n  Manager,\n  // allow browser default touch action\n  // https://github.com/uber/react-map-gl/issues/506\n  touchAction: 'none',\n  tabIndex: 0\n};\n\n// Unified API for subscribing to events about both\n// basic input events (e.g. 'mousemove', 'touchstart', 'wheel')\n// and gestural input (e.g. 'click', 'tap', 'panstart').\n// Delegates gesture related event registration and handling to Hammer.js.\nexport default class EventManager {\n  constructor(element = null, options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n    this.events = new Map();\n\n    this._onBasicInput = this._onBasicInput.bind(this);\n    this._onOtherEvent = this._onOtherEvent.bind(this);\n\n    this.setElement(element);\n\n    // Register all passed events.\n    const {events} = options;\n    if (events) {\n      this.on(events);\n    }\n  }\n\n  setElement(element) {\n    if (this.element) {\n      // unregister all events\n      this.destroy();\n    }\n    this.element = element;\n    if (!element) {\n      return;\n    }\n\n    const {options} = this;\n    const ManagerClass = options.Manager;\n\n    this.manager = new ManagerClass(element, {\n      touchAction: options.touchAction,\n      recognizers: options.recognizers || RECOGNIZERS\n    }).on('hammer.input', this._onBasicInput);\n\n    if (!options.recognizers) {\n      // Set default recognize withs\n      // http://hammerjs.github.io/recognize-with/\n      Object.keys(RECOGNIZER_COMPATIBLE_MAP).forEach(name => {\n        const recognizer = this.manager.get(name);\n        if (recognizer) {\n          RECOGNIZER_COMPATIBLE_MAP[name].forEach(otherName => {\n            recognizer.recognizeWith(otherName);\n          });\n        }\n      });\n    }\n\n    // Set recognizer options\n    for (const recognizerName in options.recognizerOptions) {\n      const recognizer = this.manager.get(recognizerName);\n      if (recognizer) {\n        const recognizerOption = options.recognizerOptions[recognizerName];\n        // `enable` is managed by the event registrations\n        delete recognizerOption.enable;\n        recognizer.set(recognizerOption);\n      }\n    }\n\n    // Handle events not handled by Hammer.js:\n    // - mouse wheel\n    // - pointer/touch/mouse move\n    this.wheelInput = new WheelInput(element, this._onOtherEvent, {\n      enable: false\n    });\n    this.moveInput = new MoveInput(element, this._onOtherEvent, {\n      enable: false\n    });\n    this.keyInput = new KeyInput(element, this._onOtherEvent, {\n      enable: false,\n      tabIndex: options.tabIndex\n    });\n    this.contextmenuInput = new ContextmenuInput(element, this._onOtherEvent, {\n      enable: false\n    });\n\n    // Register all existing events\n    for (const [eventAlias, eventRegistrar] of this.events) {\n      if (!eventRegistrar.isEmpty()) {\n        // Enable recognizer for this event.\n        this._toggleRecognizer(eventRegistrar.recognizerName, true);\n        this.manager.on(eventAlias, eventRegistrar.handleEvent);\n      }\n    }\n  }\n\n  // Tear down internal event management implementations.\n  destroy() {\n    if (this.element) {\n      // wheelInput etc. are created in setElement() and therefore\n      // cannot exist if there is no element\n      this.wheelInput.destroy();\n      this.moveInput.destroy();\n      this.keyInput.destroy();\n      this.contextmenuInput.destroy();\n      this.manager.destroy();\n\n      this.wheelInput = null;\n      this.moveInput = null;\n      this.keyInput = null;\n      this.contextmenuInput = null;\n      this.manager = null;\n      this.element = null;\n    }\n  }\n\n  // Register an event handler function to be called on `event`.\n  on(event, handler, opts) {\n    this._addEventHandler(event, handler, opts, false);\n  }\n\n  // Register an event handler function to be called on `event`, then remove it\n  once(event, handler, opts) {\n    this._addEventHandler(event, handler, opts, true);\n  }\n\n  // Register an event handler function to be called on `event`\n  // This handler does not ask the event to be recognized at all times.\n  // Instead, it only \"intercepts\" the event if some other handler is getting it.\n  watch(event, handler, opts) {\n    this._addEventHandler(event, handler, opts, false, true);\n  }\n\n  /**\n   * Deregister a previously-registered event handler.\n   * @param {string|Object} event   An event name (String) or map of event names to handlers\n   * @param {Function} [handler]    The function to be called on `event`.\n   */\n  off(event, handler) {\n    this._removeEventHandler(event, handler);\n  }\n\n  /*\n   * Enable/disable recognizer for the given event\n   */\n  _toggleRecognizer(name, enabled) {\n    const {manager} = this;\n    if (!manager) {\n      return;\n    }\n    const recognizer = manager.get(name);\n    if (recognizer && recognizer.options.enable !== enabled) {\n      recognizer.set({enable: enabled});\n\n      const fallbackRecognizers = RECOGNIZER_FALLBACK_MAP[name];\n      if (fallbackRecognizers && !this.options.recognizers) {\n        // Set default require failures\n        // http://hammerjs.github.io/require-failure/\n        fallbackRecognizers.forEach(otherName => {\n          const otherRecognizer = manager.get(otherName);\n          if (enabled) {\n            // Wait for this recognizer to fail\n            otherRecognizer.requireFailure(name);\n            /**\n             * This seems to be a bug in hammerjs:\n             * requireFailure() adds both ways\n             * dropRequireFailure() only drops one way\n             * https://github.com/hammerjs/hammer.js/blob/master/src/recognizerjs/\n               recognizer-constructor.js#L136\n             */\n            recognizer.dropRequireFailure(otherName);\n          } else {\n            // Do not wait for this recognizer to fail\n            otherRecognizer.dropRequireFailure(name);\n          }\n        });\n      }\n    }\n    this.wheelInput.enableEventType(name, enabled);\n    this.moveInput.enableEventType(name, enabled);\n    this.keyInput.enableEventType(name, enabled);\n    this.contextmenuInput.enableEventType(name, enabled);\n  }\n\n  /**\n   * Process the event registration for a single event + handler.\n   */\n  _addEventHandler(event, handler, opts, once, passive) {\n    if (typeof event !== 'string') {\n      opts = handler;\n      // If `event` is a map, call `on()` for each entry.\n      for (const eventName in event) {\n        this._addEventHandler(eventName, event[eventName], opts, once, passive);\n      }\n      return;\n    }\n\n    const {manager, events} = this;\n    // Alias to a recognized gesture as necessary.\n    const eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n\n    let eventRegistrar = events.get(eventAlias);\n    if (!eventRegistrar) {\n      eventRegistrar = new EventRegistrar(this);\n      events.set(eventAlias, eventRegistrar);\n      // Enable recognizer for this event.\n      eventRegistrar.recognizerName = EVENT_RECOGNIZER_MAP[eventAlias] || eventAlias;\n      // Listen to the event\n      if (manager) {\n        manager.on(eventAlias, eventRegistrar.handleEvent);\n      }\n    }\n    eventRegistrar.add(event, handler, opts, once, passive);\n    if (!eventRegistrar.isEmpty()) {\n      this._toggleRecognizer(eventRegistrar.recognizerName, true);\n    }\n  }\n\n  /**\n   * Process the event deregistration for a single event + handler.\n   */\n  _removeEventHandler(event, handler) {\n    if (typeof event !== 'string') {\n      // If `event` is a map, call `off()` for each entry.\n      for (const eventName in event) {\n        this._removeEventHandler(eventName, event[eventName]);\n      }\n      return;\n    }\n\n    const {events} = this;\n    // Alias to a recognized gesture as necessary.\n    const eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n\n    const eventRegistrar = events.get(eventAlias);\n\n    if (!eventRegistrar) {\n      return;\n    }\n\n    eventRegistrar.remove(event, handler);\n\n    if (eventRegistrar.isEmpty()) {\n      const {recognizerName} = eventRegistrar;\n      // Disable recognizer if no more handlers are attached to its events\n      let isRecognizerUsed = false;\n      for (const eh of events.values()) {\n        if (eh.recognizerName === recognizerName && !eh.isEmpty()) {\n          isRecognizerUsed = true;\n          break;\n        }\n      }\n      if (!isRecognizerUsed) {\n        this._toggleRecognizer(recognizerName, false);\n      }\n    }\n  }\n\n  /**\n   * Handle basic events using the 'hammer.input' Hammer.js API:\n   * Before running Recognizers, Hammer emits a 'hammer.input' event\n   * with the basic event info. This function emits all basic events\n   * aliased to the \"class\" of event received.\n   * See constants.BASIC_EVENT_CLASSES basic event class definitions.\n   */\n  _onBasicInput(event) {\n    const {srcEvent} = event;\n    const alias = BASIC_EVENT_ALIASES[srcEvent.type];\n    if (alias) {\n      // fire all events aliased to srcEvent.type\n      this.manager.emit(alias, event);\n    }\n  }\n\n  /**\n   * Handle events not supported by Hammer.js,\n   * and pipe back out through same (Hammer) channel used by other events.\n   */\n  _onOtherEvent(event) {\n    // console.log('onotherevent', event.type, event)\n    this.manager.emit(event.type, event);\n  }\n}\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n\n/* global window, global, document, navigator */\nexport const userAgent =\n  typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\n\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\n\nexport {window_ as window, global_ as global, document_ as document};\n\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\nlet passiveSupported = false;\n\n/* eslint-disable accessor-pairs, no-empty */\ntry {\n  const options = {\n    // This function will be called when the browser\n    // attempts to access the passive property.\n    get passive() {\n      passiveSupported = true;\n      return true;\n    }\n  };\n\n  window_.addEventListener('test', options, options);\n  window_.removeEventListener('test', options, options);\n} catch (err) {}\n\nexport {passiveSupported};\n"],"sourceRoot":""}