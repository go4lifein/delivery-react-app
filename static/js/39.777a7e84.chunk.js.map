{"version":3,"sources":["api/v2/admin.js","api/products.js","components/ProductSearchDropdown.js","components/HarvestReportForm.js","components/TraceabilityDashboard.jsx"],"names":["getAllOrders","fromDate","moment","format","endDate","url","API_URL","getRequest","getDeliveryBoysData","assignDrivers","data","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","addDriverData","axios","put","headers","getAllFarmers","getAllProducts","getAllCategories","addHarvestReport","withSnackbar","updateValue","onChange","enqueueSnackbar","product","React","useState","inputValue","setInputValue","options","setOptions","useEffect","cleanedUp","name","searchProducts","then","products","filter","category","catch","err","response","message","anchorOrigin","vertical","horizontal","variant","FormControl","fullWidth","Autocomplete","id","style","minWidth","required","getOptionLabel","option","autoComplete","getOptionSelected","value","event","newValue","console","log","onInputChange","newInputValue","renderInput","params","TextField","label","renderOption","HarvestReportForm","state","loading","onSubmit","e","a","preventDefault","props","farmerId","harvestTime","productId","setState","res","farmer","finally","this","farmers","className","filterOptions","toLowerCase","includes","src","image","alt","width","Typography","color","subregion","region","InputLabel","labelId","target","type","Button","disabled","Component","TraceabilityDashboard","refreshData","categories","error","Loading","connect","dispatch"],"mappings":"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","file":"static/js/39.777a7e84.chunk.js","sourcesContent":["import {API_URL, getRequest, postRequest} from '../../helpers/utils';\r\nimport moment from 'moment-timezone';\r\nimport axios from 'axios';\r\n\r\nexport function getAllOrders(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/v2/order/assignDrivers`;\r\n  return postRequest(url, data);\r\n}\r\n\r\nexport function getOrderedProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderBoxData(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryReport(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function addDriverData(data) {\r\n  let url = `${API_URL}/delivery/addDeliveryPerson`;\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\nexport function getAllFarmers(){\r\n  let url = `${API_URL}/farmers/getAllFarmers`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\n","import {API_URL, getRequest, postRequest} from '../helpers/utils';\r\nimport axios from 'axios';\r\n\r\nexport function getAllProducts() {\r\n  let url = `${API_URL}/products/getAllProducts`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getAllCategories() {\r\n  let url = `${API_URL}/products/getAllCategories`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function searchProducts(name = \"\") {\r\n  let url = `${API_URL}/products/searchProducts?name=${name}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getProductsById(ids = []) {\r\n  let url = `${API_URL}/products/getProductsById`;\r\n  return postRequest(url, {ids});\r\n}\r\n\r\nexport function addHarvestReport(data) {\r\n  \r\n  let url = `${API_URL}/trace/addHarvestReport`;\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {searchProducts} from '../api/products';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nfunction ProductSearch({onChange: updateValue, enqueueSnackbar, product = null}) {\r\n  // const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    let cleanedUp = false;\r\n    try {\r\n      \r\n      searchProducts(inputValue)\r\n      .then(({data: products}) => {\r\n        if(cleanedUp === false) {\r\n          products = products.filter(product => product.category === \"Fruits & Vegetables\");\r\n          setOptions(products)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        enqueueSnackbar(\r\n          `Error in fetching products: ${err.response ? err.response.data : err.message}`, {\r\n          anchorOrigin: {\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          },\r\n          variant : 'error'\r\n        });\r\n      })\r\n    } catch(err) {\r\n      \r\n    }\r\n    return () => {\r\n      cleanedUp = true;\r\n    }\r\n  }, [inputValue, enqueueSnackbar]);\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <Autocomplete\r\n        id=\"product-dropdown\"\r\n        style={{ minWidth: 300 }}\r\n        required\r\n        getOptionLabel={(option) => (typeof option === 'string' ? option : option.name)}\r\n        options={options}\r\n        autoComplete\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        value={product}\r\n        onChange={(event, newValue) => {\r\n          console.log(newValue)\r\n          setOptions(newValue ? [newValue, ...options] : options);\r\n          // setValue(newValue);\r\n          updateValue(event, newValue);\r\n          \r\n        }}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Search Product\" name=\"productId\" required fullWidth />\r\n        )}\r\n        renderOption={option => option.name}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\nexport default withSnackbar(ProductSearch)","import React, { Component } from 'react';\r\nimport { Button, InputLabel, TextField, Typography } from '@material-ui/core';\r\nimport ProductAutocomplete from './ProductSearchDropdown';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {addHarvestReport} from '../api/products';\r\nimport { withSnackbar } from 'notistack';\r\nimport '../css/form.css';\r\n\r\nclass HarvestReportForm extends Component {\r\n  state = {\r\n    loading: false\r\n  }\r\n  onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const {enqueueSnackbar} = this.props;\r\n    const {farmerId, harvestTime, productId} = this.state;\r\n\r\n    if(!(farmerId && productId && harvestTime)) {\r\n      return;\r\n    }\r\n    \r\n    this.setState({\r\n      loading: true\r\n    });\r\n    await addHarvestReport({farmerId, harvestTime, productId})\r\n    .then(res => {\r\n      enqueueSnackbar(\r\n        `Report has been added`, {\r\n        anchorOrigin: {\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        },\r\n        variant : 'success'\r\n      });\r\n      this.setState({\r\n        farmerId: null,\r\n        farmer: null,\r\n        productId: null,\r\n        product: null,\r\n        harvestTime: \"\"\r\n      })\r\n    })\r\n    .catch(err => {\r\n      enqueueSnackbar(\r\n        `Error in adding report: ${err.response ? err.response.data : err.message}`, {\r\n        anchorOrigin: {\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        },\r\n        variant : 'error'\r\n      });\r\n    })\r\n    .finally(() => {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    });\r\n\r\n  }\r\n  render() {\r\n    const { farmers = [] } = this.props;\r\n    const { \r\n      // farmerId, productId, product, \r\n      farmer = {}, product,\r\n      loading ,\r\n      harvestTime\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className=\"responsive-form\">\r\n          <div className=\"p-10\" style={{ minWidth: 200 }}>\r\n            <Autocomplete\r\n              style={{ minWidth: 300 }}\r\n              options={farmers}\r\n              required\r\n              filterOptions={(options, state) => {\r\n                return options.filter(farmer => farmer.name.toLowerCase().includes(state.inputValue.toLowerCase()))\r\n              }}\r\n              value={farmer}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name || \"\"}\r\n              renderInput={(params) => <TextField {...params} label=\"Farmer\" name=\"farmerId\" required fullWidth />}\r\n              onChange={(e, farmer) => {\r\n                console.log(farmer)\r\n                if (farmer) {\r\n                  this.setState({ farmerId: farmer.id, farmer });\r\n                } else {\r\n                  this.setState({\r\n                    farmerId: null,\r\n                    farmer: {}\r\n                  })\r\n                }\r\n              }}\r\n              renderOption={option => {\r\n                return (\r\n                  <div className=\"flex middle\">\r\n                    <div className=\"p-4\">\r\n                      <img src={option.image} alt={option.name} style={{ width: 40 }} />\r\n                    </div>\r\n                    <div>\r\n                      <Typography variant=\"body1\">\r\n                        {option.name}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {option.subregion}, {option.region}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"p-10\">\r\n            <ProductAutocomplete\r\n              product={product}\r\n              onChange={(e, product) => {\r\n                if (product) {\r\n                  this.setState({ productId: product.id, product });\r\n                } else {\r\n                  this.setState({\r\n                    productId: null,\r\n                    product: null\r\n                  })\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"p-10\" style={{ minWidth: 200 }}>\r\n            <InputLabel id=\"harvestTime\">Harvest Time</InputLabel>\r\n            <TextField\r\n              labelId=\"harvestTime\"\r\n              fullWidth\r\n              value={harvestTime || \"\"}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  harvestTime: e.target.value\r\n                });\r\n              }}\r\n              name=\"harvestTime\"\r\n              type=\"datetime-local\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"p-10\">\r\n            <Button \r\n              type=\"submit\" variant=\"contained\" color=\"primary\"\r\n              disabled={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(HarvestReportForm);","\r\nimport React, { Component } from 'react';\r\nimport Loading from \"./Loading\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllProducts, getAllCategories} from '../api/products';\r\nimport {getAllFarmers} from \"../api/v2/admin\"\r\nimport HarvestReportForm from './HarvestReportForm';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t}\r\n\r\n}\r\n\r\nclass TraceabilityDashboard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshData()\r\n\t}\r\n\r\n\trefreshData = async () => {\r\n\r\n\t\tthis.setState({\r\n\t\t\tloading: true\r\n\t\t})\r\n\t\t\r\n\t\ttry {\r\n\t\t\tlet farmers = await getAllFarmers().then(res => res.data);\r\n\t\t\tlet products = await getAllProducts().then(res => res.data);\r\n\t\t\tlet categories = await getAllCategories().then(res => res.data);\r\n\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tproducts,\r\n\t\t\t\tcategories,\r\n\t\t\t\tfarmers,\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t} catch(err) {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: err.response ? err.response.data : err.message\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\taddHarvestReport = (data) => {\r\n\t\tconsole.log(data);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {products, categories, farmers, error, loading} = this.state;\r\n\r\n\t\tif(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tloading ?\r\n\t\t\t\t\t<Loading /> :\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography variant=\"h4\" className=\"p-10\">Add Harvest Report</Typography>\r\n\t\t\t\t\t\t<HarvestReportForm \r\n\t\t\t\t\t\t\tfarmers={farmers}\r\n\t\t\t\t\t\t\tproducts={products}\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tonSubmit={this.addHarvestReport} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(TraceabilityDashboard);"],"sourceRoot":""}