{"version":3,"sources":["api/products.js","components/ProductSearchDropdown.js","components/HarvestReportForm.js","components/TraceabilityDashboard.jsx","api/v2/admin.js"],"names":["getAllProducts","url","API_URL","getRequest","getAllCategories","addHarvestReport","data","axios","put","headers","withSnackbar","updateValue","onChange","enqueueSnackbar","product","React","useState","inputValue","setInputValue","options","setOptions","useEffect","cleanedUp","name","searchProducts","then","products","filter","category","catch","err","response","message","anchorOrigin","vertical","horizontal","variant","FormControl","fullWidth","Autocomplete","id","style","minWidth","required","getOptionLabel","option","autoComplete","getOptionSelected","value","event","newValue","console","log","onInputChange","newInputValue","renderInput","params","TextField","label","renderOption","HarvestReportForm","state","loading","onSubmit","e","a","preventDefault","props","farmerId","harvestTime","productId","setState","res","farmer","finally","this","farmers","className","filterOptions","toLowerCase","includes","src","image","alt","width","Typography","color","subregion","region","InputLabel","labelId","target","type","Button","disabled","Component","TraceabilityDashboard","refreshData","getAllFarmers","categories","error","Loading","connect","dispatch","getAllOrders","fromDate","moment","format","endDate","getDeliveryBoysData","assignDrivers","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","addDriverData"],"mappings":"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","file":"static/js/42.d3840846.chunk.js","sourcesContent":["import {API_URL, getRequest, postRequest} from '../helpers/utils';\nimport axios from 'axios';\n\nexport function getAllProducts() {\n  let url = `${API_URL}/products/getAllProducts`;\n  return getRequest(url);\n}\n\nexport function getAllCategories() {\n  let url = `${API_URL}/products/getAllCategories`;\n  return getRequest(url);\n}\n\nexport function searchProducts(name = \"\") {\n  let url = `${API_URL}/products/searchProducts?name=${name}`;\n  return getRequest(url);\n}\n\nexport function getProductsById(ids = []) {\n  let url = `${API_URL}/products/getProductsById`;\n  return postRequest(url, {ids});\n}\n\nexport function addHarvestReport(data) {\n  \n  let url = `${API_URL}/trace/addHarvestReport`;\n  return axios.put(url, data, {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {searchProducts} from '../api/products';\nimport { FormControl } from '@material-ui/core';\nimport { withSnackbar } from 'notistack';\n\nfunction ProductSearch({onChange: updateValue, enqueueSnackbar, product = null}) {\n  // const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n\n\n  React.useEffect(() => {\n    let cleanedUp = false;\n    try {\n      \n      searchProducts(inputValue)\n      .then(({data: products}) => {\n        if(cleanedUp === false) {\n          products = products.filter(product => product.category === \"Fruits & Vegetables\");\n          setOptions(products)\n        }\n      })\n      .catch(err => {\n        enqueueSnackbar(\n          `Error in fetching products: ${err.response ? err.response.data : err.message}`, {\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n          },\n          variant : 'error'\n        });\n      })\n    } catch(err) {\n      \n    }\n    return () => {\n      cleanedUp = true;\n    }\n  }, [inputValue, enqueueSnackbar]);\n\n  return (\n    <FormControl fullWidth>\n      <Autocomplete\n        id=\"product-dropdown\"\n        style={{ minWidth: 300 }}\n        required\n        getOptionLabel={(option) => (typeof option === 'string' ? option : option.name)}\n        options={options}\n        autoComplete\n        getOptionSelected={(option, value) => option.name === value.name}\n        value={product}\n        onChange={(event, newValue) => {\n          console.log(newValue)\n          setOptions(newValue ? [newValue, ...options] : options);\n          // setValue(newValue);\n          updateValue(event, newValue);\n          \n        }}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Search Product\" name=\"productId\" required fullWidth />\n        )}\n        renderOption={option => option.name}\n      />\n    </FormControl>\n  );\n}\nexport default withSnackbar(ProductSearch)","import React, { Component } from 'react';\nimport { Button, InputLabel, TextField, Typography } from '@material-ui/core';\nimport ProductAutocomplete from './ProductSearchDropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {addHarvestReport} from '../api/products';\nimport { withSnackbar } from 'notistack';\nimport '../css/form.css';\n\nclass HarvestReportForm extends Component {\n  state = {\n    loading: false\n  }\n  onSubmit = async (e) => {\n    e.preventDefault()\n    const {enqueueSnackbar} = this.props;\n    const {farmerId, harvestTime, productId} = this.state;\n\n    if(!(farmerId && productId && harvestTime)) {\n      return;\n    }\n    \n    this.setState({\n      loading: true\n    });\n    await addHarvestReport({farmerId, harvestTime, productId})\n    .then(res => {\n      enqueueSnackbar(\n        `Report has been added`, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left',\n        },\n        variant : 'success'\n      });\n      this.setState({\n        farmerId: null,\n        farmer: null,\n        productId: null,\n        product: null,\n        harvestTime: \"\"\n      })\n    })\n    .catch(err => {\n      enqueueSnackbar(\n        `Error in adding report: ${err.response ? err.response.data : err.message}`, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left',\n        },\n        variant : 'error'\n      });\n    })\n    .finally(() => {\n      this.setState({\n        loading: false\n      })\n    });\n\n  }\n  render() {\n    const { farmers = [] } = this.props;\n    const { \n      // farmerId, productId, product, \n      farmer = {}, product,\n      loading ,\n      harvestTime\n    } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} className=\"responsive-form\">\n          <div className=\"p-10\" style={{ minWidth: 200 }}>\n            <Autocomplete\n              style={{ minWidth: 300 }}\n              options={farmers}\n              required\n              filterOptions={(options, state) => {\n                return options.filter(farmer => farmer.name.toLowerCase().includes(state.inputValue.toLowerCase()))\n              }}\n              value={farmer}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name || \"\"}\n              renderInput={(params) => <TextField {...params} label=\"Farmer\" name=\"farmerId\" required fullWidth />}\n              onChange={(e, farmer) => {\n                console.log(farmer)\n                if (farmer) {\n                  this.setState({ farmerId: farmer.id, farmer });\n                } else {\n                  this.setState({\n                    farmerId: null,\n                    farmer: {}\n                  })\n                }\n              }}\n              renderOption={option => {\n                return (\n                  <div className=\"flex middle\">\n                    <div className=\"p-4\">\n                      <img src={option.image} alt={option.name} style={{ width: 40 }} />\n                    </div>\n                    <div>\n                      <Typography variant=\"body1\">\n                        {option.name}\n                      </Typography>\n\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {option.subregion}, {option.region}\n                      </Typography>\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          </div>\n          <div className=\"p-10\">\n            <ProductAutocomplete\n              product={product}\n              onChange={(e, product) => {\n                if (product) {\n                  this.setState({ productId: product.id, product });\n                } else {\n                  this.setState({\n                    productId: null,\n                    product: null\n                  })\n                }\n              }}\n            />\n          </div>\n          <div className=\"p-10\" style={{ minWidth: 200 }}>\n            <InputLabel id=\"harvestTime\">Harvest Time</InputLabel>\n            <TextField\n              labelId=\"harvestTime\"\n              fullWidth\n              value={harvestTime || \"\"}\n              onChange={(e) => {\n                this.setState({\n                  harvestTime: e.target.value\n                });\n              }}\n              name=\"harvestTime\"\n              type=\"datetime-local\"\n              required\n            />\n          </div>\n          <div className=\"p-10\">\n            <Button \n              type=\"submit\" variant=\"contained\" color=\"primary\"\n              disabled={loading}\n            >\n              Submit\n            </Button>\n          </div>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(HarvestReportForm);","\nimport React, { Component } from 'react';\nimport Loading from \"./Loading\";\nimport { connect } from 'react-redux';\n\nimport {getAllProducts, getAllCategories} from '../api/products';\nimport {getAllFarmers} from \"../api/v2/admin\"\nimport HarvestReportForm from './HarvestReportForm';\nimport { Typography } from '@material-ui/core';\n\nfunction mapStateToProps(state) {\n\treturn {\n\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t}\n\n}\n\nclass TraceabilityDashboard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshData()\n\t}\n\n\trefreshData = async () => {\n\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t})\n\t\t\n\t\ttry {\n\t\t\tlet farmers = await getAllFarmers().then(res => res.data);\n\t\t\tlet products = await getAllProducts().then(res => res.data);\n\t\t\tlet categories = await getAllCategories().then(res => res.data);\n\t\t\n\t\t\tthis.setState({\n\t\t\t\tproducts,\n\t\t\t\tcategories,\n\t\t\t\tfarmers,\n\t\t\t\tloading: false\n\t\t\t})\n\t\t} catch(err) {\n\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\terror: err.response ? err.response.data : err.message\n\t\t\t});\n\t\t}\n\t}\n\taddHarvestReport = (data) => {\n\t\tconsole.log(data);\n\t}\n\n\trender() {\n\t\tconst {products, categories, farmers, error, loading} = this.state;\n\n\t\tif(error) {\n\t\t\treturn error;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tloading ?\n\t\t\t\t\t<Loading /> :\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography variant=\"h4\" className=\"p-10\">Add Harvest Report</Typography>\n\t\t\t\t\t\t<HarvestReportForm \n\t\t\t\t\t\t\tfarmers={farmers}\n\t\t\t\t\t\t\tproducts={products}\n\t\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\t\tonSubmit={this.addHarvestReport} \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(TraceabilityDashboard);","import {API_URL, getRequest, postRequest} from '../../helpers/utils';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\n\nexport function getAllOrders(\n  fromDate = moment().format('YYYY-MM-DD'), \n  endDate = moment().format('YYYY-MM-DD')\n) {\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\n  return getRequest(url);\n}\n\nexport function getDeliveryBoysData() {\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\n  return getRequest(url);\n}\n\nexport function assignDrivers(data) {\n  let url = `${API_URL}/v2/order/assignDrivers`;\n  return postRequest(url, data);\n}\n\nexport function getOrderedProducts(\n  fromDate = moment().format('YYYY-MM-DD'), \n  endDate = moment().format('YYYY-MM-DD')\n) {\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\n  return getRequest(url);\n}\n\nexport function getOrderProducts(\n  fromDate = moment().format('YYYY-MM-DD'), \n  endDate = moment().format('YYYY-MM-DD')\n) {\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\n  return getRequest(url);\n}\n\nexport function getOrderBoxData(\n  fromDate = moment().format('YYYY-MM-DD'), \n  endDate = moment().format('YYYY-MM-DD')\n) {\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\n  return getRequest(url);\n}\n\nexport function getDeliveryReport(\n  fromDate = moment().format('YYYY-MM-DD'), \n  endDate = moment().format('YYYY-MM-DD')\n) {\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\n  return getRequest(url);\n}\n\nexport function addDriverData(data) {\n  let url = `${API_URL}/delivery/addDeliveryPerson`;\n  return axios.put(url, data, {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n}\nexport function getAllFarmers(){\n  let url = `${API_URL}/farmers/getAllFarmers`;\n  return getRequest(url);\n}\n\n\n"],"sourceRoot":""}