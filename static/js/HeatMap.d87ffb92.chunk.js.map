{"version":3,"sources":["components/HeatMap.jsx"],"names":["HeatMap","useState","data","setData","latitude","longitude","zoom","viewport","setViewport","useEffect","getLocationCustomerDensity","then","res","geojson","type","features","forEach","location","customers","push","properties","value","geometry","coordinates","onViewportChange","width","height","mapboxApiAccessToken","process","paint"],"mappings":"sLAmFeA,UAjEf,WAAoB,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEiBF,mBAAS,CACzCG,SAAU,WACVC,UAAW,WACXC,KAAM,KALS,mBAETC,EAFS,KAECC,EAFD,KAQjBC,qBAAU,WACRC,cACCC,MAAK,SAAAC,GACJT,EAAQS,EAAIV,WAEb,IAEH,IAAMW,EAAU,CACdC,KAAM,oBACNC,SAAU,IAoBZ,OAdAb,EAAKc,SAAQ,SAAAC,GAAa,IACjBC,EAAkCD,EAAlCC,UAAWd,EAAuBa,EAAvBb,SAAUC,EAAaY,EAAbZ,UAC5BQ,EAAQE,SAASI,KAAK,CACpBL,KAAM,UACNM,WAAY,CACVC,MAAOH,GAETI,SAAU,CACRR,KAAM,QACNS,YAAa,CAAClB,EAAWD,SAM7B,8BACE,cAAC,IAAD,2BACMG,GADN,IAEEiB,iBAAkB,SAACjB,GACjBC,EAAYD,IAEdkB,MAAM,QACNC,OAAO,qBACPC,qBApDaC,6FA6Cf,SAUE,cAAC,IAAD,CAAQd,KAAK,UAAUZ,KAAMW,EAA7B,SACE,cAAC,IAAD,eAAW,CACTC,KAAM,UACNe,MAAO,CACL,oBAAqB,GACrB,iBAAkB,GAClB,iBAAkB,CAAE,cAAe,CAAE,UAAY,CAAE,MAAO,SAAW,EAAG,EAAG,EAAG,GAC9E,kBAAmB","file":"static/js/HeatMap.d87ffb92.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport MapGL, {Source, Layer} from 'react-map-gl';\nimport {getLocationCustomerDensity} from '../api/admin';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\nconst navControlStyle= {\n  right: 10,\n  top: 10\n};\n\nfunction HeatMap() {\n  const [data, setData] = useState([]);\n  const [ viewport, setViewport ] = useState({\n    latitude: 28.4501751,\n    longitude: 77.0738271,\n    zoom: 10,\n  });\n\n  useEffect(() => {\n    getLocationCustomerDensity()\n    .then(res => {\n      setData(res.data);\n    });\n  }, []);\n\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      // {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\n    ]\n  };\n\n\n  data.forEach(location => {\n    const {customers, latitude, longitude} = location;\n    geojson.features.push({\n      type: 'Feature',\n      properties: {\n        value: customers,\n      },\n      geometry: {\n        type: 'Point', \n        coordinates: [longitude, latitude]\n      }\n    })\n  })\n\n  return (\n    <div>\n      <MapGL\n        {...viewport}\n        onViewportChange={(viewport) => {\n          setViewport(viewport)\n        }}\n        width=\"100vw\"\n        height=\"calc(100vh - 70px)\"\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      >\n        {/* <NavigationControl style={navControlStyle} /> */}\n        <Source type='geojson' data={geojson}>\n          <Layer {...{\n            type: 'heatmap',\n            paint: {\n              'heatmap-intensity': 0.1,\n              'heatmap-radius': 12,\n              'heatmap-weight': [ 'interpolate', [ 'linear' ], [ 'get', 'value' ], 0, 0, 6, 2 ],\n              'heatmap-opacity': 1,\n            },\n          }} />\n        </Source>\n      </MapGL>\n    </div>\n  );\n}\n\nexport default HeatMap;"],"sourceRoot":""}