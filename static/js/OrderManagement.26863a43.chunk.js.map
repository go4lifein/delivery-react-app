{"version":3,"sources":["helpers/exportCSV.js","../node_modules/@material-ui/icons/CloudDownload.js","api/v2/admin.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/OrderTable.js","components/AssignOrders.jsx","constants/config.js","components/OrderManagement.jsx"],"names":["downloadCSV","array","filename","link","document","createElement","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","d","getAllOrders","fromDate","moment","format","endDate","url","API_URL","getRequest","getDeliveryBoysData","assignDrivers","data","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","createSvgIcon","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","sortIcon","OrderDataTable","onSelectionChange","onRowSelect","deliveryBoys","orderBoxData","columns","selector","sortable","width","cell","orderId","boxData","get","parseInt","crateId","idx","driverId","driver","striped","noHeader","selectableRows","onSelectedRowsChange","dense","selectableRowsComponent","highlightOnHover","pointerOnHover","pagination","paginationPerPage","memo","connect","state","setAdmin","dispatch","onUpdateOrdersData","updateOrdersData","deliveryBoysData","Array","from","values","sort","a","b","localeCompare","useState","selectedRows","setSelectedRows","setSelectedCustomer","onSelectCustomer","useCallback","selectedCustomer","changeSelection","allSelected","selectedCount","id","Divider","className","FormControl","InputLabel","Select","labelId","style","length","onChange","e","order_ids","map","item","target","then","res","orders","MenuItem","Button","startIcon","variant","onClick","exportData","POUCH_MILK_PRODUCTS","BOX_MILK_PRODUCTS","OrderManagement","update","setState","loading","onUpdateAdminData","Map","person","set","orderProducts","onAddOrderProducts","products","onAddProducts","onAddOrderBox","error","message","componentDidMount","hideAddress","hiddenAddress","filterData","index","driverName","customerID","phone","region","area","subarea","address","orderProductsData","commonFields","replace","pouchMilkQty","gableTopQty","productId","qty","includes","alert","largeBox","mediumBox","packet","console","log","exportCSV","Date","toLocaleDateString","selectedArea","selectedSubarea","selectedHub","selectedDriver","showWithoutDairy","selectedRow","this","filter","indexOf","toLowerCase","toString","locations","hubs","areas","subareas","hub","hubName","areaName","Loading","padding","marginRight","TextField","fullWidth","label","Autocomplete","options","multiple","renderInput","params","window","location","reload","Component","updateAdminData","addProducts","addOrderProducts","addOrderBox"],"mappings":"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","file":"static/js/OrderManagement.26863a43.chunk.js","sourcesContent":["function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\nexport default downloadCSV;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\n\nexports.default = _default;","import {API_URL, getRequest, postRequest} from '../../helpers/utils';\r\nimport moment from 'moment-timezone';\r\n\r\nexport function getAllOrders(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/v2/order/assignDrivers`;\r\n  return postRequest(url, data);\r\n}\r\n\r\nexport function getOrderedProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderBoxData(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryReport(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport DataTable from \"react-data-table-component\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n\r\nconst sortIcon = <ArrowDownward />;\r\n\r\nfunction OrderDataTable(props) {\r\n  const {data, onRowSelect, onSelectionChange, deliveryBoys, orderBoxData} = props;\r\n\r\n  const columns = [\r\n    // {\r\n    //   name: 'Crate',\r\n    //   selector: 'crate_id',\r\n    //   sortable: true,\r\n    //   width: '70px'\r\n    // },\r\n    {\r\n      name: 'Order Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '130px'\r\n    },\r\n    {\r\n      name: 'Crate Id',\r\n      selector: 'orderId',\r\n      sortable: true,\r\n      width: '120px',\r\n      cell: (row) => {\r\n        const {orderId} = row;\r\n        const boxData = orderBoxData.get(parseInt(orderId));\r\n        return boxData?.crateId;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      selector: 'region',\r\n      width: '100px',\r\n    },\r\n    {\r\n      name: 'Area',\r\n      sortable: true,\r\n      selector: 'area',\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Locality',\r\n      sortable: true,\r\n      selector: 'subarea',\r\n      width: '200px'\r\n    },\r\n    // {\r\n    //   name: 'House',\r\n    //   selector: 'address',\r\n    //   width: '300px'\r\n    // },\r\n    {\r\n      name: 'Driver',\r\n      selector: '_driver',\r\n      cell: (row, idx) => {\r\n        let {driverId} = row;\r\n        if(driverId) {\r\n          let driver = deliveryBoys.get(driverId);\r\n          return driver ? driver.name : '';\r\n        }\r\n        return '';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <DataTable\r\n        striped={true}\r\n        noHeader\r\n        selectableRows\r\n        onSelectedRowsChange={onSelectionChange}\r\n        dense={true}\r\n        selectableRowsComponent={Checkbox}\r\n        sortIcon={sortIcon}\r\n        data={data}\r\n        columns={columns}\r\n        highlightOnHover={true}\r\n        pointerOnHover={true}\r\n        pagination={true}\r\n        paginationPerPage={10}\r\n        // onRowClicked={(row, e) => {\r\n        //   onRowSelect(row);\r\n        // }}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(OrderDataTable);","import React, { useCallback, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nimport OrderDataTable from './OrderTable';\r\nimport {assignDrivers, getAllOrders} from '../api/v2/admin';\r\n// import DeliveryInfo from \"./DeliveryInfo\";\r\nimport {updateOrdersData} from '../actions/admin.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data)),\r\n  };\r\n}\r\n\r\nfunction AssignOrders(props) {\r\n  const {data, deliveryBoys, onUpdateOrdersData, orderBoxData} = props;\r\n\r\n  let deliveryBoysData = Array.from(deliveryBoys.values());\r\n  deliveryBoysData = deliveryBoysData.sort((a, b) => (a.name.localeCompare(b.name)));\r\n  \r\n  let [selectedRows, setSelectedRows] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(false);\r\n\r\n  const onSelectCustomer = useCallback((selectedCustomer) => {\r\n    setSelectedCustomer(selectedCustomer);\r\n  }, []);\r\n  \r\n  const changeSelection = useCallback(({ allSelected, selectedCount, selectedRows }) => {\r\n    setSelectedRows(selectedRows)\r\n  }, []);\r\n\r\n  const updateDriver = (e) => {\r\n    let order_ids = selectedRows.map(item => item.orderId);\r\n    let driver = e.target.value;\r\n    const data = {\r\n      order_ids, driver\r\n    }\r\n    assignDrivers(data)\r\n    .then(res => {\r\n      getAllOrders()\r\n      .then(res => {\r\n        let orders = res.data;\r\n        onUpdateOrdersData(orders);\r\n      });\r\n      setSelectedRows([]);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div id=\"assign-orders\">\r\n      <Divider />\r\n      <div className=\"flex space-bw middle p-10\">\r\n        <div className=\"flex right middle\">\r\n          \r\n          <FormControl size=\"small\">\r\n            <InputLabel id=\"driver-filter\">Select Driver</InputLabel>\r\n            <Select\r\n              labelId=\"driver-filter\"\r\n              style={{width: 200}}\r\n              disabled={selectedRows.length < 1}\r\n              onChange={updateDriver}\r\n            >\r\n              <MenuItem value=\"null\">None</MenuItem>\r\n              {deliveryBoysData.map(item => (\r\n                <MenuItem value={item.id} key={`driver-${item.id}`}>{item.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"p-10\">\r\n            {\r\n              data.length \r\n            } Customers Filtered\r\n          </div>\r\n          <div className=\"p-10\">\r\n            {\r\n              selectedRows.length \r\n            } Customers Selected\r\n          </div>\r\n          <div className=\"p-10\">\r\n            <Button \r\n              startIcon={<DownloadIcon />}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              onClick={props.exportData}\r\n            >\r\n              Download Excel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OrderDataTable\r\n        data={data}\r\n        orderBoxData={orderBoxData}\r\n        onSelectionChange={changeSelection}\r\n        onRowSelect={onSelectCustomer}\r\n        deliveryBoys={deliveryBoys}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AssignOrders);","export const POUCH_MILK_PRODUCTS =  [1, 2, 3, 23];\r\nexport const BOX_MILK_PRODUCTS =    [4, 811, 877];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Switch from '@material-ui/core/Switch';\r\n\r\nimport Loading from './Loading';\r\nimport AssignOrders from './AssignOrders'\r\nimport {updateOrdersData, updateAdminData, addProducts, addOrderProducts, addOrderBox} from '../actions/admin.actions';\r\nimport {getAllOrders, getDeliveryBoysData, getOrderBoxData, getOrderProducts, getOrderedProducts} from '../api/v2/admin';\r\nimport {POUCH_MILK_PRODUCTS, BOX_MILK_PRODUCTS} from '../constants/config';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data)),\r\n    onUpdateAdminData: (data) => dispatch(updateAdminData(data)),\r\n    onAddProducts: (data) => dispatch(addProducts(data)),\r\n    onAddOrderProducts: (data) => dispatch(addOrderProducts(data)),\r\n    onAddOrderBox: (data) => dispatch(addOrderBox(data))\r\n  };\r\n}\r\n\r\nclass OrderManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      phone: \"\",\r\n      selectedArea: [],\r\n      selectedSubarea: [],\r\n      selectedHub: [],\r\n      selectedDriver: \"all\",\r\n      showWithoutDairy: false,\r\n      hiddenAddress: false,\r\n      selectedRow: []\r\n    }\r\n  }\r\n  update = async () => {\r\n\r\n    try {\r\n      this.setState({loading: true});\r\n      let {onUpdateOrdersData, onUpdateAdminData} = this.props;\r\n\r\n      let deliveryBoysData = await getDeliveryBoysData().then(res => res.data);\r\n      let deliveryBoys = new Map();\r\n\r\n      deliveryBoysData.forEach(person => {\r\n        deliveryBoys.set(person.id, person);\r\n      })\r\n      onUpdateAdminData({deliveryBoys});\r\n\r\n      let orders = await getAllOrders().then(res => res.data);\r\n      onUpdateOrdersData(orders);\r\n\r\n      let orderProducts = await getOrderProducts().then(res => res.data);\r\n      this.props.onAddOrderProducts(orderProducts)\r\n      \r\n      let products = await getOrderedProducts().then(res => res.data);\r\n      this.props.onAddProducts(products);\r\n      \r\n      let orderBoxData = await getOrderBoxData().then(res => res.data)\r\n      this.props.onAddOrderBox(orderBoxData)\r\n\r\n      this.setState({loading: false});\r\n\r\n    } catch(err) {\r\n      this.setState({\r\n        error: err.message\r\n      })\r\n    }\r\n  }\r\n  componentDidMount = async () => {\r\n    await this.update();\r\n  }\r\n  hideAddress = () => this.setState({hiddenAddress: true})\r\n  \r\n  exportData = () => {\r\n    \r\n    const { deliveryBoys, orderBoxData, orderProducts } = this.props;\r\n    let rows = [\r\n      ['S.No.', 'Order Id', 'Crate Id', 'Customer Id', 'Name', 'Phone', 'Region', 'Area', 'Locality', 'House', 'Driver', 'Type', 'Qty']\r\n    ];\r\n    let data = this.filterData();\r\n\r\n    for (let index = 0; index < data.length; index++) {\r\n      const item = data[index];\r\n      \r\n      let {driverId} = item;\r\n      let driverName = '';\r\n      if(driverId) {\r\n        driverName = deliveryBoys.get(driverId).name;\r\n      }\r\n      const {customerID, orderId, name, phone, region, area, subarea, address} = item;\r\n      const boxData = orderBoxData.get(parseInt(orderId));\r\n      const orderProductsData = orderProducts.get(parseInt(orderId));\r\n      \r\n      const commonFields = [\r\n        index+1,\r\n        orderId,\r\n        boxData?.crateId,\r\n        customerID,\r\n        `\"${name}\"`,\r\n        phone,\r\n        `\"${region}\"`,\r\n        `\"${area}\"`,\r\n        `\"${subarea}\"`,\r\n        `\"${address.replace(/[^0-9a-zA-Z:/ ]/g, \"\")}\"`,\r\n        `\"${driverName}\"`\r\n      ]\r\n\r\n      let pouchMilkQty = 0;\r\n      let gableTopQty = 0;\r\n\r\n      if(orderProductsData) {\r\n        // console.log(orderProductsData)\r\n        orderProductsData.forEach(item => {\r\n          const {productId, qty} = item;\r\n          if(POUCH_MILK_PRODUCTS.includes(productId)) {\r\n            pouchMilkQty += qty;\r\n          } else if(BOX_MILK_PRODUCTS.includes(productId)) {\r\n            gableTopQty += qty;\r\n          }\r\n        })\r\n\r\n        if(pouchMilkQty) {\r\n          rows.push([\r\n            ...commonFields,\r\n            'Pouch Milk',\r\n            pouchMilkQty\r\n          ])\r\n        }\r\n        \r\n        if(gableTopQty) {\r\n          rows.push([\r\n            ...commonFields,\r\n            'Gable Top',\r\n            gableTopQty\r\n          ])\r\n        } \r\n      } else {\r\n        alert(\"Something wrong with data uploaded for order\", orderId);\r\n      }\r\n\r\n      // Handle LargeBox, MediumBox, Packet\r\n      const {largeBox, mediumBox, packet } = boxData || {};\r\n      if(largeBox) {\r\n        rows.push([\r\n          ...commonFields,\r\n          `Large Box`,\r\n          largeBox\r\n        ]);\r\n      }\r\n\r\n      if(mediumBox) {\r\n        rows.push([\r\n          ...commonFields,\r\n          `Medium Box`,\r\n          mediumBox\r\n        ]);\r\n      }\r\n      \r\n      if(packet) {\r\n        rows.push([\r\n          ...commonFields,\r\n          `Packet`,\r\n          packet\r\n        ]);\r\n      }\r\n\r\n      if(gableTopQty || pouchMilkQty || largeBox || mediumBox || packet ) {\r\n        console.log(\"Already Loaded Customer in the sheet\");\r\n      } else {\r\n        console.log(`This is not ideal. Maybe the packing is not over yet.\\nAn order should have atleast one of gableTopQty || pouchMilkQty || largeBox || mediumBox || packet `)\r\n        // alert(`This is not ideal. Maybe the packing is not over yet.\\nAn order should have atleast one of gableTopQty || pouchMilkQty || largeBox || mediumBox || packet `);\r\n        \r\n        rows.push([\r\n          ...commonFields,\r\n          'Complete', \r\n          ''\r\n        ]);\r\n        // return;\r\n      }  \r\n    }\r\n\r\n    exportCSV(rows, `Delivery Sheet - ${new Date().toLocaleDateString()}.csv`);\r\n  }\r\n  filterData() {\r\n    let {selectedSubarea, selectedArea, selectedHub, selectedDriver, phone } = this.state;\r\n    let { orders} = this.props;\r\n    \r\n    let data = [];\r\n    \r\n    if(orders) {\r\n      data = orders.filter((item) => {\r\n        if(selectedHub.length) {\r\n          if(item.region !== selectedHub) return false;\r\n        }\r\n        if(selectedArea.length) {\r\n          if(!selectedArea.includes(item.area)) return false;\r\n        }\r\n        if(selectedSubarea.length) {\r\n          if(!selectedSubarea.includes(item.subarea)) return false;\r\n        }\r\n        if(selectedDriver !== 'all') {\r\n          if(selectedDriver === 'none') {\r\n            if(item.driverId !== null) return false;\r\n          } else if(item.driverId !== selectedDriver) return false;\r\n        }\r\n        if(phone) {\r\n          if(item.phone.indexOf(phone) !== -1) return true;\r\n          if(item.name.toLowerCase().indexOf(phone.toLowerCase()) !== -1) return true;\r\n          if(item.orderId.toString().indexOf(phone.toLowerCase()) !== -1) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    }\r\n    \r\n    return data;\r\n  }\r\n  render() {\r\n    let {selectedArea, selectedHub, selectedDriver, phone, loading = true } = this.state;\r\n    let {locations, hubs, deliveryBoys, orders, orderBoxData} = this.props;\r\n\r\n    let deliveryBoysData = deliveryBoys ? Array.from(deliveryBoys.values()) : [];\r\n    deliveryBoysData = deliveryBoysData.sort((a, b) => (a.name.localeCompare(b.name)));\r\n\r\n    let areas = [], subareas = [];\r\n    \r\n    if(locations) locations.forEach((hub, hubName) => {\r\n      hub.forEach((area, areaName) => {\r\n        if( (hubName === selectedHub) || (selectedHub.length === 0) ) {\r\n          areas.push(areaName);\r\n        }\r\n        if( selectedArea.includes(areaName) || selectedArea.length === 0 ) {\r\n          subareas = subareas.concat(area);\r\n        }\r\n      });\r\n    });\r\n\r\n    areas = areas.sort((a, b) => a.localeCompare(b));\r\n\r\n    if(orders && deliveryBoys && orderBoxData) {\r\n      loading = false;\r\n    }\r\n\r\n    let data = this.filterData();\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          loading?\r\n          <Loading /> :\r\n          <div>\r\n            <div \r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n              <div style={{marginRight: 20, width: 220}}>\r\n                <TextField\r\n                  value={phone}\r\n                  fullWidth\r\n                  label=\"Phone, Name, Crate, Order Id\"\r\n                  onChange={(e) => this.setState({phone: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div style={{marginRight: 20, width: 120}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"hub-filter\">Hub</InputLabel>\r\n                  <Select\r\n                    labelId=\"hub-filter\"\r\n                    style={{width: 100}}\r\n                    value={selectedHub}\r\n                    onChange={(e) => {\r\n                      let selectedHub = e.target.value;\r\n                      this.setState({selectedHub, selectedArea: [], selectedSubarea: []})\r\n                    }}\r\n                  >\r\n                    {/* <MenuItem value=\"all\">All</MenuItem> */}\r\n                    {hubs.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  </FormControl>\r\n              </div>\r\n              \r\n              <div style={{marginRight: 20, width: 300}}>\r\n                <FormControl style={{width: '100%'}}>\r\n                  <Autocomplete\r\n                    options={areas}\r\n                    multiple={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"Area\" />}\r\n                    onChange={(e, selectedArea) => {\r\n                      this.setState({selectedArea, selectedSubarea: []})\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div style={{marginRight: 20, width: 400}}>\r\n                <FormControl style={{width: '100%'}}>\r\n                  <Autocomplete\r\n                    options={subareas}\r\n                    multiple={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"Locality\" />}\r\n                    onChange={(e, selectedSubarea) => {\r\n                      this.setState({selectedSubarea})\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"driver-filter\">Assigned Driver</InputLabel>\r\n                  <Select\r\n                    labelId=\"driver-filter\"\r\n                    style={{width: 200}}\r\n                    value={selectedDriver || 'all'}\r\n                    onChange={(e, b) => {\r\n                      let selectedDriver = e.target.value;\r\n                      this.setState({selectedDriver});\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"none\">None</MenuItem>\r\n                    {deliveryBoysData.map(item => (\r\n                      <MenuItem value={item.id} key={`driver-${item.id}`}>{item.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <Button\r\n                  color=\"default\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    window.location.reload();\r\n                  }}\r\n                >\r\n                  Remove Filters\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            \r\n            <AssignOrders \r\n              data={data}\r\n              exportData={this.exportData}\r\n              deliveryBoys={deliveryBoys}\r\n            />\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OrderManagement);"],"sourceRoot":""}