{"version":3,"sources":["api/v2/admin.js","../node_modules/@material-ui/icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/icons/Close.js","components/DriverForm.js","components/DriverDataTable.js","components/DriverDashboard.js"],"names":["getAllOrders","fromDate","moment","format","endDate","url","API_URL","getRequest","getDeliveryBoysData","assignDrivers","data","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","addDriverData","axios","put","headers","getAllFarmers","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","DriverForm","onChange","e","setState","target","onSubmit","a","preventDefault","state","phone","then","res","enqueueSnackbar","anchorOrigin","vertical","horizontal","variant","catch","err","refreshData","this","toggleDriverForm","id","TextField","label","required","Button","color","type","style","IconButton","marginLeft","onClick","withSnackbar","sortIcon","DriverDataTable","striped","noHeader","selectableRows","dense","columns","selector","sortable","highlightOnHover","pointerOnHover","pagination","paginationPerPage","memo","DriverDashboard","response","deliveryboys","filterData","search","filter","includes","onSearch","addingDriver","loading","Loading","Card"],"mappings":"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","file":"static/js/35.8f029764.chunk.js","sourcesContent":["import {API_URL, getRequest, postRequest} from '../../helpers/utils';\r\nimport moment from 'moment-timezone';\r\nimport axios from 'axios';\r\n\r\nexport function getAllOrders(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/v2/order/assignDrivers`;\r\n  return postRequest(url, data);\r\n}\r\n\r\nexport function getOrderedProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderBoxData(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryReport(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function addDriverData(data) {\r\n  let url = `${API_URL}/delivery/addDeliveryPerson`;\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\nexport function getAllFarmers(){\r\n  let url = `${API_URL}/farmers/getAllFarmers`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import React, { Component } from 'react'\r\nimport { FormControl, Grid, Select, TextField, Switch, FormControlLabel, CircularProgress, Button, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { addDriverData } from \"../api/v2/admin\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\n\r\n\r\nclass DriverForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            phone: \"\",\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        await addDriverData({\r\n            name: this.state.name,\r\n            phone: this.state.phone\r\n        }).then(res => {\r\n\r\n            this.props.enqueueSnackbar(\r\n                \"Driver Added\",\r\n                {\r\n                    anchorOrigin: {\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    },\r\n                    variant: 'success'\r\n                }\r\n            );\r\n                \r\n            this.setState({\r\n                name: \"\",\r\n                phone: \"\"\r\n            })\r\n        }).catch(err => {\r\n\r\n            this.props.enqueueSnackbar(\r\n            \r\n                \"Driver could not be added\" ,\r\n                    {\r\n                    anchorOrigin: {\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    },\r\n                variant : 'error'});\r\n        })\r\n        this.props.refreshData();\r\n\r\n    };\r\n\r\n    render() {\r\n        const { name, phone } = this.state;\r\n        const { toggleDriverForm } = this.props;\r\n\r\n        return (\r\n\r\n            <div >\r\n                <form id=\"driver-form\" onSubmit={this.onSubmit} className=\"p-10\">\r\n                    <Grid container\r\n                        justify=\"center\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <div className=\"flex middle\">\r\n                                <div className=\"mh-10\">\r\n                                    <TextField\r\n                                        label=\"Driver Name\"\r\n                                        name=\"name\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div >\r\n                                    <TextField\r\n                                        required\r\n                                        label=\"Phone No:\"\r\n                                        name=\"phone\"\r\n                                        variant=\"outlined\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        style={{\r\n                                            margin: 10\r\n                                        }}                            >\r\n                                        Submit\r\n                            </Button>\r\n\r\n                                    <IconButton\r\n                                        style={{ marginLeft: 10 }}\r\n                                        onClick={toggleDriverForm}\r\n                                    >\r\n                                        <CloseIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (withSnackbar(DriverForm));\r\n","import React, { Component } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n\r\nconst sortIcon = <ArrowDownward />;\r\n\r\nfunction DriverDataTable(props){\r\n    const {data} = props; \r\n    const columns = [\r\n        {\r\n            name : \"Driver Name\",\r\n            selector: 'name',\r\n            sortable : true,\r\n            width :'300px',\r\n           \r\n        },\r\n        {\r\n            name : \"Phone No.\",\r\n            selector : 'phone',\r\n            sortable : true, \r\n            width: '300px'\r\n            \r\n        }\r\n\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n          <DataTable\r\n            striped={true}\r\n            noHeader\r\n            selectableRows ={false}\r\n       \r\n            dense={true}\r\n            \r\n            sortIcon={sortIcon}\r\n            data={data}\r\n            columns={columns}\r\n            highlightOnHover={true}\r\n            pointerOnHover={true}\r\n           \r\n            pagination={true}\r\n            paginationPerPage={20}\r\n          />\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default React.memo(DriverDataTable);","import React, { Component } from 'react';\r\nimport { Button, Card, TextField } from '@material-ui/core';\r\nimport Loading from './Loading';\r\nimport DriverForm from \"./DriverForm\"\r\nimport DriverDataTable from \"./DriverDataTable\"\r\nimport { getDeliveryBoysData } from \"../api/v2/admin\";\r\n\r\n\r\nclass DriverDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            addingDriver: false,\r\n            name: \"\",\r\n            phone: \"\",\r\n            deliveryboys: [],\r\n            search : \"\",\r\n        }\r\n    }\r\n     componentDidMount() {\r\n           \r\n        this.setState({\r\n            loading: false,\r\n\r\n        })\r\n          this.refreshData()\r\n    }\r\n\r\n    refreshData = async () =>\r\n    {\r\n        const response = await getDeliveryBoysData();\r\n        this.setState({\r\n            deliveryboys:response.data\r\n        })\r\n      \r\n    }\r\n\r\n    filterData = () => {\r\n        let search = this.state.search ;\r\n        \r\n        let data = [];\r\n        \r\n   \r\n        if(this.state.deliveryboys) {\r\n          data = this.state.deliveryboys.filter((item) => \r\n          {\r\n           \r\n           \r\n              if(!item.name.includes(search) && !item.phone.includes(search))\r\n              \r\n              \r\n              return false;\r\n            \r\n            return true;\r\n          })\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    onSearch = (e) =>{\r\n        this.setState({\r\n            search : e.target.value\r\n        })\r\n        this.filterData()\r\n    }\r\n    toggleDriverForm = () => {\r\n        this.setState((state) => ({\r\n            addingDriver: !state.addingDriver\r\n        }))\r\n    }\r\n\r\n        /*\r\n             filterData() {\r\n        let { name, phone } = this.state;\r\n\r\n\r\n        let data = [];\r\n        // if()\r\n    }\r\n        */\r\n\r\n    render() {\r\n        const { loading, addingDriver, name, phone } = this.state;\r\n        let data = this.filterData();\r\n\r\n        if (loading) {\r\n            return <Loading />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n\r\n                </div>\r\n                <div\r\n                    className=\"flex space-bw m-10 middle\"\r\n                >\r\n                    <div>\r\n                        <TextField \r\n                            label=\"Search by Name or Phone\" \r\n                            value = {this.state.search}\r\n                            onChange = {this.onSearch}\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n\r\n                            onClick={this.toggleDriverForm}\r\n                        >\r\n                            Add Driver\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    addingDriver &&\r\n                    <Card\r\n                        className=\"m-10 p-10\" \r\n                    \r\n                    >\r\n                        <DriverForm \r\n                        toggleDriverForm={this.toggleDriverForm}\r\n                        refreshData = {this.refreshData}\r\n                        />\r\n                    </Card>\r\n                }\r\n                \r\n                <DriverDataTable \r\n                    data = {data}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DriverDashboard;\r\n"],"sourceRoot":""}