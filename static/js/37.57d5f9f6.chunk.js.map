{"version":3,"sources":["api/v2/admin.js","components/FarmerDataTable.js","components/FarmerDashboard.jsx"],"names":["getAllOrders","fromDate","moment","format","endDate","url","API_URL","getRequest","getDeliveryBoysData","assignDrivers","data","postRequest","getOrderedProducts","getOrderProducts","getOrderBoxData","getDeliveryReport","addDriverData","axios","put","headers","getAllFarmers","sortIcon","FarmerDataTable","props","striped","noHeader","selectableRows","dense","columns","name","selector","sortable","width","highlightOnHover","pointerOnHover","pagination","paginationPerPage","React","memo","FarmerDashboard","refreshData","a","response","setState","farmers","filterData","search","state","filter","item","includes","onSearch","e","target","value","loading","region","subregion","this","Loading","className","TextField","label","onChange","FormControl","InputLabel","id","Select","labelId","style","Component"],"mappings":"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","file":"static/js/37.57d5f9f6.chunk.js","sourcesContent":["import {API_URL, getRequest, postRequest} from '../../helpers/utils';\r\nimport moment from 'moment-timezone';\r\nimport axios from 'axios';\r\n\r\nexport function getAllOrders(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getAllOrders?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/v2/order/getDeliveryBoysData`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/v2/order/assignDrivers`;\r\n  return postRequest(url, data);\r\n}\r\n\r\nexport function getOrderedProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderedProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderProducts(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderProducts?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getOrderBoxData(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getOrderBoxData?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function getDeliveryReport(\r\n  fromDate = moment().format('YYYY-MM-DD'), \r\n  endDate = moment().format('YYYY-MM-DD')\r\n) {\r\n  let url = `${API_URL}/v2/order/getDeliveryReport?fromDate=${fromDate}&endDate=${endDate}`;\r\n  return getRequest(url);\r\n}\r\n\r\nexport function addDriverData(data) {\r\n  let url = `${API_URL}/delivery/addDeliveryPerson`;\r\n  return axios.put(url, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\nexport function getAllFarmers(){\r\n  let url = `${API_URL}/farmers/getAllFarmers`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport DataTable from \"react-data-table-component\"\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n\r\nconst sortIcon = <ArrowDownward />;\r\n\r\nfunction FarmerDataTable(props){\r\n    const {data} = props;\r\n    const columns = [\r\n        {\r\n            name : \"Farmer Name\",\r\n            selector: 'name' , \r\n            sortable : true, \r\n            width : '300px'\r\n        },\r\n        \r\n        {\r\n            name : \"Region\", \r\n            selector : 'region',\r\n            sortable:true , \r\n            width : '200px'\r\n\r\n        },\r\n\r\n        {\r\n            name :\"Subregion\",\r\n            selector: 'subregion' , \r\n            sortable :true , \r\n            width : '300px'\r\n\r\n\r\n        },\r\n    ]\r\n\r\n    return(\r\n\r\n        <div>\r\n        <DataTable\r\n          striped={true}\r\n          noHeader\r\n          selectableRows ={false}\r\n     \r\n          dense={true}\r\n          \r\n          sortIcon={sortIcon}\r\n          data={data}\r\n          columns={columns}\r\n          highlightOnHover={true}\r\n          pointerOnHover={true}\r\n         \r\n          pagination={true}\r\n          paginationPerPage={10}\r\n        />\r\n      </div>\r\n    )\r\n\r\n\r\n\r\n};\r\n\r\nexport default React.memo(FarmerDataTable);","import React, { Component } from 'react'\r\nimport {Button , Card ,Select , FormControl, InputLabel, TextField, Textfield} from '@material-ui/core';\r\nimport {getAllFarmers} from \"../api/v2/admin\"\r\nimport Loading from \"./Loading\";\r\nimport FarmerDataTable from \"./FarmerDataTable\"\r\nimport { render } from '@testing-library/react';\r\n\r\n    class FarmerDashboard extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                loading:true, \r\n                name : \"\", \r\n                region : \"\",\r\n                subregion : \"\",\r\n                farmers:[],\r\n                search : \"\",\r\n            }\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.setState({\r\n                loading:false\r\n            })\r\n            this.refreshData()\r\n        }\r\n\r\n        refreshData = async() =>{\r\n            const response = await getAllFarmers();\r\n            this.setState({\r\n                farmers:response.data\r\n            })\r\n        }\r\n        filterData = () =>{\r\n            let search = this.state.search ; \r\n            let data = [];\r\n            \r\n            if(this.state.farmers){\r\n                data = this.state.farmers.filter((item) =>{\r\n                    if(!item.name.includes(search))\r\n                    return false ; \r\n                    return true ; \r\n                })\r\n            }\r\n            return data  ;\r\n        }\r\n\r\n        onSearch = (e) =>{\r\n            this.setState({\r\n                search : e.target.value \r\n            })\r\n            this.filterData()\r\n        }\r\n\r\n        \r\n\r\n        render() {\r\n\r\n            const {loading , name , region , subregion } = this.state ;\r\n            let data = this.filterData();\r\n\r\n            \r\n            if(loading) {\r\n                return <Loading />\r\n            }\r\n            return (\r\n            \r\n            \r\n            <div>\r\n                <div\r\n                    className  =\"flex space-bw m-10 middle\"\r\n                >\r\n                    <TextField \r\n                        label = \"Search by Name\"\r\n                        value = {this.state.search}\r\n                        onChange = {this.onSearch}\r\n\r\n                        />\r\n                             <FormControl>\r\n                            <InputLabel id =\"region-filter\">Region</InputLabel>\r\n                            <Select\r\n                                labelId = \"region-filter\"\r\n                                style = {{width:100}}\r\n                               \r\n                              \r\n                            >\r\n                             \r\n                            </Select>\r\n                        </FormControl>\r\n                </div>\r\n                <FarmerDataTable\r\n                data ={data}\r\n                />\r\n\r\n\r\n            </div>\r\n            \r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    export default FarmerDashboard ; "],"sourceRoot":""}