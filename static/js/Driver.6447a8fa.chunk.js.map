{"version":3,"sources":["helpers/utils.js","images/logo.png","actions/driver.actions.js","api/v2/driver.js","components/DriverNavbar.js","components/DriverLogin.js","containers/Driver.jsx"],"names":["API_URL","getCookies","cookies","document","cookie","split","data","forEach","values","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","setRequestAuthHeader","key","accessToken","axios","defaults","headers","common","initRequestAuthHeader","userAccessToken","request","config","postRequest","url","method","getRequest","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","updateDriver","driver","UPDATE_DRIVER","payload","updateOrders","orders","UPDATE_ORDERS","login","getMyOrders","driverId","submitOrderDelivery","formData","post","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","withRouter","connect","state","setDriver","dispatch","onUpdateDriver","props","classes","className","AppBar","position","color","Toolbar","src","logo","alt","Typography","variant","IconButton","onClick","window","reload","Button","Divider","LoginAdmin","phone","handleSubmit","then","res","catch","err","alert","this","style","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","autoComplete","label","onChange","e","setState","target","to","Component","admin","ChooseOrder","lazy","OrderDeliveryForm","Driver","DriverNavbar","fallback","Loading","path","component","DriverLogin"],"mappings":"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","file":"static/js/Driver.6447a8fa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_URL = 'https://api.deliver.go4life.in/api';\r\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\n// export const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(\";\");\r\n  let data = {};\r\n  cookies.forEach((cookie) => {\r\n    let values = cookie.split(\"=\");\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nexport function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n      var date = new Date();\r\n      date.setTime(date.getTime() + (days*24*60*60*1000));\r\n      expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}\r\n\r\nfunction setRequestAuthHeader(key = \"x-admin-token\", accessToken) {\r\n  // alert(key + \" \" + accessToken)\r\n  axios.defaults.headers.common[key] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-admin-token\"];\r\n\r\nexport function initRequestAuthHeader(key = \"x-admin-token\") {\r\n  let userAccessToken = getCookies()[key];\r\n  if(userAccessToken) setRequestAuthHeader(key, userAccessToken);\r\n}\r\nif(getCookies()[\"x-admin-token\"]) {\r\n  initRequestAuthHeader(\"x-admin-token\");\r\n} else {\r\n  initRequestAuthHeader(\"x-driver-token\");\r\n}\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n\r\nexport function onlyMilkAndPaneer(products) {\r\n  const categories = Object.entries(products);\r\n  categories.forEach(([category, value]) => {\r\n    value.forEach(product => {\r\n      const name = product.product;\r\n      if(name.toLowerCase().includes(\"milk\") === false) return false;\r\n      if(name.toLowerCase().includes(\"paneer\") ===false) return false;\r\n    });\r\n  });\r\n  return true;\r\n}\r\n\r\n\r\nexport function hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function postRequest(url, data) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRequest(url) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'get'\r\n  });\r\n}\r\n\r\nexport function dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";","import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\r\n\r\nexport const updateDriver = (driver) => ({\r\n  type: UPDATE_DRIVER,\r\n  payload: driver\r\n});\r\n\r\nexport const updateOrders = (orders) => ({\r\n  type: UPDATE_ORDERS,\r\n  payload: orders\r\n});","import {API_URL , request, getRequest} from '../../helpers/utils';\r\nimport { post } from 'axios';\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/v2/driver/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDriver() {\r\n  let url = `${API_URL}/v2/driver/getDriver`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\nexport function getMyOrders(driverId) {\r\n  let url = `${API_URL}/v2/driver/getMyOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\n// not used\r\nexport function confirmDelivery(data) {\r\n  let url = `${API_URL}/order/confirmDelivery`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function submitOrderDelivery(formData) {\r\n  let url = `${API_URL}/v2/driver/submitOrderDelivery`;\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n  return post(url, formData, config);\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\n// import { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nimport { Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {updateDriver} from '../actions/driver.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateDriver: (driver) => dispatch(updateDriver(driver))\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction getTitle(location) {\r\n  switch (location.pathname) {\r\n    case '/admin/product':\r\n      return 'Product Sheet';\r\n    case '/admin/manageOrders':\r\n      return 'Manage Orders';\r\n    default:\r\n      return 'Choose Order';\r\n  }\r\n}\r\n\r\nfunction MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const { location} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"warning\">\r\n        <Toolbar>\r\n          <img src={logo} alt=\"logo\" className=\"logo-nav\" />\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {getTitle(location)}\r\n          </Typography>\r\n          \r\n          <div className=\"flex\">\r\n            <IconButton \r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              <RefreshIcon />\r\n            </IconButton>\r\n            <Button\r\n              className=\"nav-link\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                let {onUpdateDriver} = props;\r\n                onUpdateDriver(null);\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n            \r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuAppBar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\r\n\r\nimport {login} from '../api/v2/driver';\r\nimport {updateDriver} from '../actions/driver.actions';\r\nimport {initRequestAuthHeader, setCookie} from '../helpers/utils';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateDriver: (admin) => dispatch(updateDriver(admin))\r\n  };\r\n}\r\n\r\nclass LoginAdmin extends Component {\r\n  state = {\r\n    phone: '',\r\n  }\r\n  handleSubmit = () => {\r\n    let {onUpdateDriver} = this.props;\r\n    let {phone } = this.state;\r\n    login({phone})\r\n    .then(res => {\r\n      setCookie(\"x-driver-token\", phone, 5);\r\n      initRequestAuthHeader(phone);\r\n      onUpdateDriver(res.data);\r\n    })\r\n    .catch(err => alert(\"Please check phone number\"));\r\n  }\r\n  render() {\r\n    let {phone} = this.state;\r\n    return (\r\n      <div \r\n        style={{\r\n          display: \"flex\", \r\n          justifyContent: 'center', \r\n          alignItems: 'center',\r\n          background: 'grey',\r\n          height: '100vh'\r\n        }}\r\n      >\r\n        <Card style={{minWidth: 300}}>\r\n          <CardHeader title=\"Login\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                autoFocus\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                autoComplete=\"true\"\r\n                label=\"Phone Number\"\r\n                type=\"number\"\r\n                name=\"Phone Number\"\r\n                value={phone}\r\n                onChange={(e) => this.setState({phone: e.target.value})}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button \r\n                variant=\"contained\" \r\n                fullWidth\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n          <div>\r\n            <Link to=\"/admin\">\r\n              Login as Admin\r\n            </Link>\r\n          </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport DriverNavbar from \"../components/DriverNavbar\";\r\nimport DriverLogin from '../components/DriverLogin';\r\nimport {getCookie} from '../helpers/utils'\r\n\r\nconst ChooseOrder = lazy(() => import('../components/ChooseOrder'));\r\nconst OrderDeliveryForm = lazy(() => import('../components/OrderDeliveryForm'));\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nclass Driver extends Component {\r\n  componentDidMount() {\r\n    // if()\r\n  }\r\n  render() {\r\n    const {driver} = this.props;\r\n    return (\r\n      <div>\r\n        {driver ?\r\n          <div>\r\n            <DriverNavbar />\r\n            <Suspense fallback={<Loading />}>\r\n              <Switch>\r\n                <Route \r\n                  path=\"/:orderId/deliver\"\r\n                  component={OrderDeliveryForm}\r\n                />\r\n                <Route \r\n                  path=\"/\"\r\n                  component={ChooseOrder} \r\n                />\r\n              </Switch>\r\n            </Suspense>\r\n          </div> :\r\n          <DriverLogin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Driver);"],"sourceRoot":""}