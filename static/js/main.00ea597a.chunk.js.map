{"version":3,"sources":["components/UI/Notifier.js","App.js","index.js","constants/index.js","helpers/utils.js","reducers/notifier.js","components/Loading.js","reducers/admin.reducers.js","reducers/driver.reducers.js","store.js","components/404.js"],"names":["displayed","Notifier","dispatch","useDispatch","notifications","useSelector","store","notifier","useSnackbar","enqueueSnackbar","closeSnackbar","React","useEffect","forEach","id","key","message","options","dismissed","includes","onClose","event","reason","myKey","onExited","removeSnackbar","filter","Admin","lazy","Driver","Visual","TraceMilkBatch","TraceMilkPouch","Customer","Newtrace","Trace","Tracemilk","App","theme","createMuiTheme","palette","secondary","light","main","dark","contrastText","background","default","paper","ThemeProvider","CssBaseline","base","fallback","Loading","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","UPDATE_DRIVER","UPDATE_ORDERS","UPDATE_ADMIN","UPDATE_ORDERS_DATA","UPDATE_ADMIN_DATA","UPDATE_ORDER_CRATE_DATA","ADD_PRODUCTS","ADD_ORDER_PRODUCTS","ADD_ORDER_BOX","UPDATE_DELIVERY_REPORT","API_URL","getCookies","cookies","cookie","split","data","values","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","setRequestAuthHeader","accessToken","axios","defaults","headers","common","initRequestAuthHeader","userAccessToken","request","config","postRequest","url","method","getRequest","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","handleApiErrorMessage","err","console","error","response","Error","status","statusText","ENQUEUE_SNACKBAR","CLOSE_SNACKBAR","REMOVE_SNACKBAR","enqueueAPIErrorSnackbar","Math","random","notification","variant","autoHideDuration","defaultState","state","action","map","dismissAll","className","initialState","admin","products","Map","orderBoxData","loadingOrderData","processProducts","item","image","thumbnail","set","processOrderProducts","orderProducts","orderId","productId","has","get","push","processOrderBoxData","orderBox","processLocations","locations","hubs","order","subarea","area","region","hubAreas","subareas","areaData","driver","createLogger","createStore","combineReducers","setDriver","payload","window","localStorage","setItem","JSON","stringify","orders","setAdmin","applyMiddleware","NotFound","props","style","maxHeight","maxWidth","src","alt"],"mappings":"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","file":"static/js/main.00ea597a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../reducers/notifier';\r\n\r\nlet displayed = [];\r\n\r\nconst Notifier = () => {\r\n  const dispatch = useDispatch();\r\n  const notifications = useSelector(store => store.notifier.notifications || []);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const storeDisplayed = (id) => {\r\n    displayed = [...displayed, id];\r\n  };\r\n\r\n  const removeDisplayed = (id) => {\r\n    displayed = [...displayed.filter(key => id !== key)];\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n      if (dismissed) {\r\n        // dismiss snackbar using notistack\r\n        closeSnackbar(key);\r\n        return;\r\n      }\r\n\r\n      // do nothing if snackbar is already displayed\r\n      if (displayed.includes(key)) return;\r\n\r\n      // display snackbar using notistack\r\n      enqueueSnackbar(message, {\r\n        key,\r\n        ...options,\r\n        onClose: (event, reason, myKey) => {\r\n          if (options.onClose) {\r\n            options.onClose(event, reason, myKey);\r\n          }\r\n        },\r\n        onExited: (event, myKey) => {\r\n          // remove this snackbar from redux store\r\n          dispatch(removeSnackbar(myKey));\r\n          removeDisplayed(myKey);\r\n        },\r\n      });\r\n\r\n      // keep track of snackbars that we've displayed\r\n      storeDisplayed(key);\r\n    });\r\n  }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Notifier;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Notifier from \"./components/UI/Notifier\";\r\n\r\nimport \"./css/style.css\";\r\nimport \"./App.css\";\r\nimport NotFound from './components/404';\r\nimport Loading from \"./components/Loading\";\r\nconst Admin = lazy(() => import(/* webpackChunkName: \"Admin\" */ \"./containers/Admin.jsx\"));\r\nconst Driver = lazy(() => import(/* webpackChunkName: \"Driver\" */ \"./containers/Driver.jsx\"));\r\n\r\n// const TraceProduce = lazy(() => import(/* webpackChunkName: \"TraceProduce\" */ \"./containers/TraceOrder\"));\r\nconst Visual = lazy(() => import(/* webpackChunkName: \"Visual\" */ \"./containers/Visual\"));\r\nconst TraceMilkBatch = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./trace/TraceMilkBatch.js\"))\r\nconst TraceMilkPouch = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./components/TracePouchMilk\"))\r\nconst Customer = lazy(() => import(/* webpackChunkName: \"Customer\" */ \"./containers/Customer\"))\r\n\r\nconst Newtrace = lazy(() => import(/* webpackChunckName: \"Dahi\" */ \"./dahi/containers/dahi\"))\r\nconst Trace = lazy(() => import(/* webpackChunkName: \"NewTrace\" */ \"./new_trace/App\"));\r\nconst Tracemilk = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./milkpouches/containers/pouches\"));\r\n// const Trace = lazy(() => import(\"./components/Traceability.js\"));\r\n\r\nfunction App() {\r\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      // type: 'light',\r\n      // primary: colors.green[400],\r\n      secondary: {\r\n        light: \"#ff4081\",\r\n        main: \"#f50057\",\r\n        dark: \"#c51162\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      background: {\r\n        default: \"#fff\",\r\n        paper: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"app\">\r\n        <ThemeProvider theme={theme}>\r\n          <Notifier />\r\n          <CssBaseline />\r\n          <Router base={\"delivery-react-app\"}>\r\n            <main>\r\n              <Suspense fallback={<Loading />}>\r\n                <Switch>\r\n                  {/* <Route path=\"/trace/produce\" exact component={TraceProduce} /> */}\r\n                  <Route path=\"/trace\" exact component={Trace} />\r\n                  <Route path=\"/trace/:pouch\" component={Newtrace} />\r\n                  <Route path=\"/visual\" component={Visual} />\r\n                 \r\n                  <Route path = \"/traces/:pouch\" exact component={TraceMilkPouch} />  \r\n                  <Route path=\"/trace-milk/:pouch\" exact component={Tracemilk} />\r\n                  <Route path=\"/trace-batch-milk\" exact component={TraceMilkBatch} />\r\n                  <Route path=\"/customer\" component={Customer} />\r\n                  <Route path=\"/admin\" component={Admin} />\r\n                  <Route path=\"/\" exact component={Driver} />\r\n                  <Route path=\"/\" component={Driver} />\r\n            \r\n                </Switch>\r\n              </Suspense>\r\n            </main>\r\n          </Router>\r\n        </ThemeProvider>\r\n      </div>\r\n      <div id=\"printable\">\r\n        {/*  for print utility */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {SnackbarProvider} from 'notistack';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <SnackbarProvider>\r\n      <App />\r\n\r\n      </SnackbarProvider>\r\n   \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// constants for driver\r\nexport const UPDATE_DRIVER = 'UPDATE_DRIVER';\r\nexport const UPDATE_ORDERS = 'UPDATE_ORDERS';\r\n\r\n// admin constants\r\nexport const UPDATE_ADMIN = 'UPDATE_ADMIN';\r\nexport const UPDATE_ORDERS_DATA = 'UPDATE_ORDERS_DATA';\r\nexport const UPDATE_ADMIN_DATA = 'UPDATE_ADMIN_DATA';\r\nexport const UPDATE_ORDER_CRATE_DATA = 'UPDATE_ORDER_CRATE_DATA';\r\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\r\nexport const ADD_ORDER_PRODUCTS = 'ADD_ORDER_PRODUCTS';\r\nexport const ADD_ORDER_BOX = 'ADD_ORDER_BOX';\r\nexport const UPDATE_DELIVERY_REPORT = 'UPDATE_DELIVERY_REPORT';","import axios from \"axios\";\r\n\r\nexport const BASE_API_URL = 'https://api.deliver.go4life.in';\r\n// export const BASE_API_URL = 'http://localhost:5000';\r\nexport const API_URL = `${BASE_API_URL}/api`;\r\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\n// export const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(\";\");\r\n  let data = {};\r\n  cookies.forEach((cookie) => {\r\n    let values = cookie.split(\"=\");\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nexport function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n      var date = new Date();\r\n      date.setTime(date.getTime() + (days*24*60*60*1000));\r\n      expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}\r\n\r\nfunction setRequestAuthHeader(key = \"x-admin-token\", accessToken) {\r\n  // alert(key + \" \" + accessToken)\r\n  axios.defaults.headers.common[key] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-admin-token\"];\r\n\r\nexport function initRequestAuthHeader(key = \"x-admin-token\") {\r\n  let userAccessToken = getCookies()[key];\r\n  if(userAccessToken) setRequestAuthHeader(key, userAccessToken);\r\n}\r\nif(getCookies()[\"x-admin-token\"]) {\r\n  initRequestAuthHeader(\"x-admin-token\");\r\n} else {\r\n  initRequestAuthHeader(\"x-driver-token\");\r\n}\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n\r\nexport function onlyMilkAndPaneer(products) {\r\n  const categories = Object.entries(products);\r\n  categories.forEach(([category, value]) => {\r\n    value.forEach(product => {\r\n      const name = product.product;\r\n      if(name.toLowerCase().includes(\"milk\") === false) return false;\r\n      if(name.toLowerCase().includes(\"paneer\") ===false) return false;\r\n    });\r\n  });\r\n  return true;\r\n}\r\n\r\n\r\nexport function hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function postRequest(url, data) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRequest(url) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'get'\r\n  });\r\n}\r\n\r\nexport function dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\nexport function handleApiErrorMessage(err) {\r\n  console.error(\"API ERROR DATA\", err.response)\r\n  if(!err) {\r\n    throw new Error(\"No error object provided\");\r\n  } else if(err.response && err.response.data) {\r\n    return err.response.data;\r\n  } else if(err.response && err.response.status) {\r\n    return err.response.status + ' ' + err.response.statusText ;\r\n  } else if(err.message) {\r\n    return err.message;\r\n  }\r\n  console.error(err);\r\n  return \"Some error occured.\";\r\n}","// https://codesandbox.io/s/github/iamhosseindhv/notistack/tree/master/examples/redux-example?file=/redux/actions.js:0-674\r\nimport {handleApiErrorMessage} from '../helpers/utils';\r\n// import Button from '@material-ui/core/Button';\r\n\r\n// constants\r\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\n\r\n// Actions\r\nexport const enqueueSnackbar = (notification) => {\r\n  const key = notification.options && notification.options.key;\r\n\r\n  return {\r\n    type: ENQUEUE_SNACKBAR,\r\n    notification: {\r\n      ...notification,\r\n      key: key || new Date().getTime() + Math.random(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const enqueueAPIErrorSnackbar = (error) => {\r\n  const message = handleApiErrorMessage(error);\r\n  const key = new Date().getTime() + Math.random();\r\n  return {\r\n    type: ENQUEUE_SNACKBAR,\r\n    notification: {\r\n      message,\r\n      key,\r\n      options: {\r\n        variant: 'error',\r\n        autoHideDuration: 3*1000,\r\n        key,\r\n        // action: key => (\r\n        //   <Button onClick={() => closeSnackbar(key)}>Dismiss</Button>\r\n        // ),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const enqueueAPISuccessSnackbar = (message = \"Successfully Updated\") => {\r\n  const key = new Date().getTime() + Math.random();\r\n  return {\r\n    type: ENQUEUE_SNACKBAR,\r\n    notification: {\r\n      message,\r\n      key,\r\n      options: {\r\n        variant: 'success',\r\n        autoHideDuration: 3*1000,\r\n        key,\r\n        // action: key => (\r\n        //   <Button onClick={() => closeSnackbar(key)}>Dismiss</Button>\r\n        // ),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const closeSnackbar = key => ({\r\n  type: CLOSE_SNACKBAR,\r\n  dismissAll: !key, // dismiss all if no key has been defined\r\n  key,\r\n});\r\n\r\nexport const removeSnackbar = key => ({\r\n  type: REMOVE_SNACKBAR,\r\n  key,\r\n});\r\n\r\n// reducer\r\nconst defaultState = {\r\n  notifications: [],\r\n};\r\n\r\nexport const notifier = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ENQUEUE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications,\r\n          {\r\n            key: action.key,\r\n            ...action.notification,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case CLOSE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notification => (\r\n          (action.dismissAll || notification.key === action.key)\r\n            ? { ...notification, dismissed: true }\r\n            : { ...notification }\r\n        )),\r\n      };\r\n\r\n    case REMOVE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          notification => notification.key !== action.key,\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"flex center middle p-10\">\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import { \r\n  UPDATE_ADMIN, \r\n  UPDATE_ORDERS_DATA, \r\n  UPDATE_ADMIN_DATA,\r\n  ADD_PRODUCTS,\r\n  ADD_ORDER_PRODUCTS,\r\n  ADD_ORDER_BOX, UPDATE_DELIVERY_REPORT\r\n} from '../constants/index';\r\n\r\nimport {getCookies} from '../helpers/utils'\r\n\r\nlet admin = getCookies()['x-admin-token'];\r\n\r\nconst initialState = {\r\n  admin,\r\n  products : new Map(),\r\n  orderBoxData: new Map(),\r\n  loadingOrderData: true\r\n}\r\n\r\nfunction processProducts(data, products) {\r\n  data.forEach(item => {\r\n    const {id, name, thumbnail: image} = item;\r\n    products.set(id, {\r\n      id, name, image\r\n    })\r\n  })\r\n}\r\n\r\nfunction processOrderProducts(data, orderProducts) {\r\n  data.forEach(item => {\r\n    const {orderId, productId} = item;\r\n    if(orderProducts.has(orderId)) {\r\n      orderProducts.get(orderId).push(item);\r\n    } else {\r\n      orderProducts.set(orderId, [item]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction processOrderBoxData(data, orderBox) {\r\n  data.forEach(item => {\r\n    const {orderId} = item;\r\n    orderBox.set(orderId, item);\r\n  });\r\n}\r\n\r\nfunction processLocations(data) {\r\n\r\n  let locations = new Map();\r\n\r\n  let hubs = [];\r\n\r\n  data.forEach(order => {\r\n    let { subarea, area, region } = order;\r\n    if(!hubs.includes(region)) {\r\n      hubs.push(region)\r\n    }\r\n    \r\n    if(locations.has(region)) {\r\n      let hubAreas = locations.get(region);\r\n      if(hubAreas.has(area)) {\r\n        let subareas = hubAreas.get(area);\r\n        if(!subareas.includes(subarea)) {\r\n          subareas.push(subarea);\r\n        }\r\n        hubAreas.set(area, subareas);\r\n        locations.set(region, hubAreas);\r\n      } else {\r\n        let areaData = [subarea];\r\n        hubAreas.set(area, areaData);\r\n        locations.set(region, hubAreas);\r\n      }\r\n    } else {\r\n      let hubAreas = new Map();\r\n      hubAreas.set(area, [subarea]);\r\n      locations.set(region, hubAreas)\r\n    }\r\n  });\r\n\r\n  return [locations, hubs];\r\n  \r\n}\r\n\r\nexport const setAdmin = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case UPDATE_ADMIN:\r\n      let admin = action.payload;\r\n      window.localStorage.setItem('admin', JSON.stringify(admin));\r\n      return { ...state, admin}\r\n\r\n    case UPDATE_ADMIN_DATA:\r\n      // let {customers, areas, subareas, categories, hubs, orders} = action.payload;\r\n      return { \r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    case UPDATE_ORDERS_DATA:\r\n\r\n      let orders = action.payload;\r\n\r\n      let [locations, hubs] = processLocations(orders);\r\n      return {\r\n        ...state,\r\n        orders,\r\n        locations,\r\n        hubs\r\n      };\r\n    \r\n    case ADD_PRODUCTS:\r\n\r\n      let products = new Map();\r\n      processProducts(action.payload, products);\r\n\r\n      return {\r\n        ...state,\r\n        products\r\n      }\r\n      \r\n    case ADD_ORDER_PRODUCTS:\r\n      let orderProducts = new Map();\r\n      processOrderProducts(action.payload, orderProducts);\r\n\r\n      return {\r\n        ...state,\r\n        orderProducts\r\n      }\r\n    \r\n    case ADD_ORDER_BOX:\r\n      let orderBoxData = new Map();\r\n      processOrderBoxData(action.payload, orderBoxData);\r\n\r\n      return {\r\n        ...state,\r\n        orderBoxData\r\n      }\r\n\r\n    case UPDATE_DELIVERY_REPORT:\r\n      \r\n      {\r\n        let orders = action.payload;\r\n\r\n        let [locations, hubs] = processLocations(orders);\r\n        return {\r\n          ...state,\r\n          orders,\r\n          locations,\r\n          hubs\r\n        };\r\n      }\r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\r\n\r\n\r\nimport {getCookies} from '../helpers/utils'\r\n\r\nlet driver = getCookies()['x-driver-token'];\r\nconst initialState = {\r\n  driver\r\n}\r\n\r\nfunction hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const setDriver = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case UPDATE_DRIVER:\r\n      let driver = action.payload;\r\n      window.localStorage.setItem('driver', JSON.stringify(driver));\r\n      return { ...state, driver}\r\n\r\n    case UPDATE_ORDERS:\r\n\r\n      let orders = action.payload;\r\n      let locations = new Map();\r\n\r\n      let hubs = [];\r\n\r\n      orders.forEach(order => {\r\n        let { subarea, area, region } = order;\r\n        if(!hubs.includes(region)) {\r\n          hubs.push(region)\r\n        }\r\n        \r\n        if(locations.has(region)) {\r\n          let hubAreas = locations.get(region);\r\n          if(hubAreas.has(area)) {\r\n            let subareas = hubAreas.get(area);\r\n            if(!subareas.includes(subarea)) {\r\n              subareas.push(subarea);\r\n            }\r\n            hubAreas.set(area, subareas);\r\n            locations.set(region, hubAreas);\r\n          } else {\r\n            let areaData = [subarea];\r\n            hubAreas.set(area, areaData);\r\n            locations.set(region, hubAreas);\r\n          }\r\n        } else {\r\n          let hubAreas = new Map();\r\n          hubAreas.set(area, [subarea]);\r\n          locations.set(region, hubAreas)\r\n        }\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        orders,\r\n        locations,\r\n        hubs\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport {createLogger} from 'redux-logger';\r\n\r\nimport { setAdmin } from \"./reducers/admin.reducers\";\r\nimport { notifier } from \"./reducers/notifier\";\r\nimport { setDriver } from \"./reducers/driver.reducers\";\r\n\r\nconst logger = createLogger();\r\n\r\nconst middlewares = []\r\n\r\nif(process.env.NODE_ENV !== \"production\") {\r\n  middlewares.push(logger)\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    setDriver,\r\n    setAdmin,\r\n    notifier,\r\n  }),\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <div className=\"p-10\">\r\n      <Typography variant=\"h2\">\r\n        What the 404?\r\n      </Typography>\r\n      <div className=\"flex center\" style={{maxHeight: 400, maxWidth: '100%'}}>\r\n        <img\r\n          style={{maxHeight: 400, maxWidth: '100%'}}\r\n          src=\"https://cdn.dribbble.com/users/21546/screenshots/4815369/yelp_emptystates_business.gif\" \r\n          alt=\"not-found\" \r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default NotFound;"],"sourceRoot":""}