{"version":3,"sources":["images/logo.png","api/misc.js","trace/Header.js","trace/icons/board.svg","trace/Main.js","trace/Journey.js","trace/Facts.js","trace/Date.js","trace/Trace.js"],"names":["getReport","a","type","report_date","moment","format","url","API_URL","request","method","headers","Header","className","src","logo","alt","Main","data","setLoad","load","utc","bmc_receive","plant_receive","plant_dispatch","whs_receive","whs_dispatch","board","onLoad","Journey","useState","journey","setJourney","useEffect","startTime","endTime","duration","diff","hours","parseInt","asHours","minutes","asMinutes","container","useRef","lottie","loadAnimation","current","renderer","loop","autoplay","speed","animationData","require","ref","Facts","style","justifyContent","onClick","window","open","pdf_url","ph","fat","snf","mbrt","GetDate","startDate","flex","Trace","location","Date","setStartDate","isA2","setIsA2","setData","loading","setLoading","console","log","document","title","search","reportDate","URLSearchParams","get","date","response","getData","backgroundColor","Loading","Alert","severity","variant"],"mappings":"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","file":"static/js/12.2a898572.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";","import {API_URL , request} from '../helpers/utils';\r\nimport moment from 'moment';\r\n\r\nexport async function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\r\n  report_date = moment(report_date).format('YYYY-MM-DD');\r\n  // console.log(report_date, type, moment().format('YYYY-MM-DD'));\r\n  \r\n  let url = `${API_URL}/misc/getReport?report_date=${report_date}&milk_type=${type}`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n    \r\n  });\r\n}","import logo from \"./../images/logo.png\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"flex space-bw middle header p-10\">\r\n      <img src={logo} alt=\"logo\" className=\"logo\" />\r\n\r\n      <h1 className=\"heading\">Trace your milk's journey.</h1>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/board.cf3ddb04.svg\";","import React from 'react';\r\nimport \"./main.scss\";\r\nimport board from \"./icons/board.svg\";\r\nimport moment from \"moment-timezone\";\r\n//{moment(data.plant_receive).format('DD MM YYYY')}\r\n//{moment(data.plant_receive).format('hh:mm A')}\r\n\r\nexport default function Main({ data, setLoad, load }) {\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"board\">\r\n        {data && load &&\r\n          <>\r\n            <div className=\"section1\">\r\n\r\n              <div className=\"BMC\">\r\n                <h1 >Recieved at<br></br> BMC</h1>\r\n                <p>{moment.utc(data.bmc_receive).format('hh:mm A')}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"section2\">\r\n              <div className=\"plant-receive\">\r\n                <h1> Milk Pasteurized<br></br>at 85<span>&#176;</span>C</h1>\r\n                <p>{moment.utc(data.plant_receive).format('hh:mm A')}</p>\r\n              </div>\r\n              <div className=\"plant-dispatch\">\r\n                <h1>Packed in a 3-Layer<br></br>Tamper-Proof<br></br> Packaging</h1>\r\n                <p>{moment.utc(data.plant_dispatch).format('hh:mm A')}</p>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"section3\">\r\n              <div className=\"whs-receive\">\r\n                <h1>Arrived at <br></br> Warehouse</h1>\r\n                <p>{moment.utc(data.whs_receive).format('hh:mm A')}</p>\r\n              </div>\r\n              <div className=\"whs-dispatch\">\r\n                <h1>Dispatched for <br></br>Delivery</h1>\r\n                <p>{moment.utc(data.whs_dispatch).format('hh:mm A')}</p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        }   {data &&\r\n          // <div\r\n          //   style={{\r\n          //     backgroundImage: board\r\n          //   }}\r\n          // >\r\n          // </div>\r\n          <img src={board} onLoad={() => setLoad(true)} className=\"timeline\" alt=\"timeline\" />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Journey({ data }) {\r\n  const [journey, setJourney] = useState(\"\");\r\n  useEffect(() => {\r\n\r\n    if (!data)\r\n      return\r\n    let startTime = moment(data.bmc_receive);\r\n    let endTime = moment(data.whs_dispatch);\r\n    let duration = moment.duration(endTime.diff(startTime));\r\n\r\n    let hours = parseInt(duration.asHours());\r\n    let minutes = parseInt(duration.asMinutes()) % 60;\r\n    setJourney(hours + \" hours \" + minutes + \" minutes \");\r\n\r\n  }, [data])\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      speed: \"2.5x\",\r\n      animationData: require(\"./icons/truck.json\"),\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"journey\">\r\n      <div className=\"truck\" ref={container}></div>\r\n      <p className=\"time\">\r\n        Total journey time: <br />\r\n        {journey}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Facts({ data }) {\r\n  return (\r\n    <div className=\"facts\" style={{ justifyContent: 'space-around' }}>\r\n      {/* <img src={milkbox} className=\"Milk\" alt=\"milkboxs\" /> */}\r\n      <div>\r\n        {data && <button className=\"download-btn\" onClick={() => window.open(data.pdf_url)}> Download Full Report</button>}\r\n      </div>\r\n      { data &&\r\n        <div className=\"cards\">\r\n          <div className=\"section1\">\r\n            <div className=\"f1\">\r\n\r\n              <h1>PH</h1>\r\n\r\n              <p>{data.ph}</p>\r\n            </div>\r\n            <div className=\"f2\">\r\n              <h1>FAT</h1>\r\n              <p>{data.fat} %</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"section2\">\r\n            <div className=\"f3\">\r\n              <h1>SNF</h1>\r\n              <p>{data.snf} %</p>\r\n            </div>\r\n            <div className=\"f4\">\r\n              <h1>MBRT</h1>\r\n              <p>{data.mbrt} mins</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from 'moment';\r\n\r\nexport default function GetDate( {startDate}) {\r\n  \r\n  return (\r\n    <div className=\"flex center\">\r\n      <div className=\"box\" style={{flex: 1}}>\r\n        {moment(startDate).format('DD MMM, YYYY')}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React , {useState , useEffect} from \"react\";\r\nimport \"./trace.scss\";\r\nimport Header from \"./Header.js\";\r\nimport Main from \"./Main.js\";\r\nimport Journey from \"./Journey.js\";\r\nimport Facts from \"./Facts.js\";\r\nimport GetDate from \"./Date.js\";\r\nimport {getReport} from \"../api/misc.js\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Loading from \"../components/Loading.js\";\r\n\r\nexport default function Trace({ location }) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [isA2, setIsA2] = useState(true);\r\n  const [data ,setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [load ,setLoad] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    console.log(load);\r\n  },[load])\r\n  useEffect(() => {\r\n    document.title = \"Go4Life - Trace Your Milk\"\r\n    let {search} = location;\r\n    search = new URLSearchParams(search);\r\n    const reportDate = search.get('report_date');\r\n    if(!reportDate)\r\n    return\r\n    const date = new Date(reportDate);\r\n    \r\n    const type = search.get('milk_type');\r\n    \r\n    \r\n    setStartDate(date);\r\n    setIsA2(type === \"a2\" ? true : false);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n  \r\n    async function getData() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getReport(\"a2\", startDate);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      }\r\n      catch (err) {\r\n        console.log(err);\r\n        setData(null);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getData();\r\n  }, [startDate, isA2]);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\"trace\" style={{backgroundColor: '#fdfdfd'}}>\r\n      <Header />\r\n      <GetDate startDate = {startDate} setStartDate ={setStartDate} isA2 = {isA2} setIsA2 = {setIsA2}/>\r\n      {loading ? \r\n        <Loading /> :\r\n        <div>\r\n        {data ? \r\n          <>\r\n            <Main data= {data} load = {load} setLoad = {setLoad} />\r\n            <Journey data = {data} />\r\n            <Facts data= {data}  />\r\n          </>\r\n          :\r\n          <div className=\"flex center\">\r\n            <Alert severity=\"error\" variant=\"outlined\">\r\n              Sorry, we didn't find any report for that date.\r\n            </Alert>\r\n          </div>\r\n        }\r\n      </div>\r\n    }\r\n      \r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}