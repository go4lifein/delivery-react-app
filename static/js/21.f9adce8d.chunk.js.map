{"version":3,"sources":["api/admin.js","actions/admin.actions.js","images/logo.png","components/AdminNavbar.js","components/AdminLogin.js","containers/Admin.jsx"],"names":["getAllOrders","url","API_URL","request","method","headers","getDeliveryBoysData","assignDrivers","data","updateCrateId","prepareOrder","login","addReport","formData","post","getLocationCustomerDensity","updateAdmin","admin","type","UPDATE_ADMIN","payload","updateAdminData","UPDATE_ADMIN_DATA","updateOrdersData","UPDATE_ORDERS_DATA","updateOrderCrateData","UPDATE_ORDER_CRATE_DATA","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","SideNav","logOut","useState","open","setOpen","className","IconButton","onClick","style","color","position","zIndex","SwipeableDrawer","anchor","onClose","onOpen","List","ListItem","button","window","reload","ListItemIcon","ListItemText","primary","to","withRouter","connect","state","setAdmin","dispatch","onUpdateAdmin","props","classes","AppBar","backgroundColor","Toolbar","padding","src","logo","alt","Typography","variant","Box","Divider","LoginAdmin","username","password","handleSubmit","then","res","this","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","label","value","onChange","e","setState","target","Button","Component","CustomerSheet","lazy","ProductSheet","OrderManagement","PackOrders","AddReport","HeatMap","AdminRouter","onUpdateOrdersData","onUpdateAdminData","deliveryBoysData","deliveryBoys","Map","forEach","person","set","id","orders","console","log","AdminNavbar","fallback","Loading","exact","path","component"],"mappings":"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","file":"static/js/21.f9adce8d.chunk.js","sourcesContent":["import {API_URL , request} from '../helpers/utils';\r\nimport { post } from 'axios';\r\n\r\nexport function getAllOrders() {\r\n  let url = `${API_URL}/order/getAllOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/order/getDeliveryBoysData`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/order/assignDrivers`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function updateCrateId(data) {\r\n  let url = `${API_URL}/order/updateCrateId`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function prepareOrder(data) {\r\n  let url = `${API_URL}/order/prepareOrder`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/admin/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function addReport(formData) {\r\n  let url = `${API_URL}/admin/addReport`;\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n  return post(url, formData, config);\r\n}\r\n\r\nexport function getLocationCustomerDensity() {\r\n  let url = `${API_URL}/admin/getLocationCustomerDensity`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","import {UPDATE_ADMIN, UPDATE_ORDERS_DATA, UPDATE_ADMIN_DATA, UPDATE_ORDER_CRATE_DATA} from '../constants/index';\r\n\r\nexport const updateAdmin = (admin) => ({\r\n  type: UPDATE_ADMIN,\r\n  payload: admin\r\n});\r\n\r\nexport const updateAdminData = (data) => ({\r\n  type: UPDATE_ADMIN_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const updateOrdersData = (data) => ({\r\n  type: UPDATE_ORDERS_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const updateOrderCrateData = (data) => ({\r\n  type: UPDATE_ORDER_CRATE_DATA,\r\n  payload: data\r\n});","export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";","import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport MenuIcon from '@material-ui/icons/MenuOpen';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport ExitToApp from '@material-ui/icons/ExitToAppOutlined';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../images/logo.png';\r\n\r\nimport {updateAdmin} from '../actions/admin.actions';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction getTitle(location) {\r\n  switch (location.pathname) {\r\n    case '/admin/product':\r\n      return 'Product Sheet';\r\n    case '/admin/manageOrders':\r\n      return 'Manage Orders';\r\n    case '/admin/pack':\r\n      return 'Pack Orders';\r\n    case '/admin/addReport':\r\n      return 'Add Milk Report'\r\n    case '/admin/customer-density':\r\n      return 'Customer Density'\r\n    default:\r\n      return 'Go4Life';\r\n  }\r\n}\r\n\r\nfunction MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const { location} = props;\r\n  const logOut = () => {\r\n    const {onUpdateAdmin} = props;\r\n    onUpdateAdmin(null);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor: \"#fff\"}} color=\"default\">\r\n        <Toolbar style={{padding: 10}}>\r\n          \r\n          <img src={logo} alt=\"logo\" className=\"logo-nav\" />\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {getTitle(location)}\r\n          </Typography>\r\n          \r\n          {/* <Box display={{ xs: 'none', md: 'block' }} >\r\n            <HorizontalNav logOut={logOut} />\r\n          </Box> */}\r\n          \r\n          <Box >\r\n            <SideNav logOut={logOut} />\r\n          </Box>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SideNav({logOut}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex middle\">\r\n      <IconButton onClick={toggleMenu} >\r\n        <MenuIcon style={{color: \"#000\"}} />\r\n      </IconButton>\r\n      <div style={{position: 'fixed', zIndex: 10}}>\r\n        <SwipeableDrawer\r\n          anchor=\"right\"\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n        >\r\n          <List>\r\n            <ListItem button key=\"Reload\" onClick={() => window.location.reload()}>\r\n              <ListItemIcon>\r\n                <RefreshIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Reload\" />\r\n            </ListItem>\r\n            <Link to=\"/admin/customer-density\" >\r\n              <ListItem button key=\"customer-density\">\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer Density\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/admin/customer\">\r\n              <ListItem button key=\"Customer Sheet\">\r\n                <ListItemIcon>\r\n                  <AccountIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer Sheet\" />\r\n              </ListItem>\r\n            </Link>\r\n            \r\n            <Link to=\"/admin/product\">\r\n              <ListItem button key=\"Product Sheet\">\r\n                <ListItemIcon>\r\n                  <DownloadIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Product Sheet\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/admin/manageOrders\" >\r\n              <ListItem button key=\"Manage Orders\">\r\n                <ListItemIcon>\r\n                  <CreateIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Manage Orders\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/admin/pack\" >\r\n              <ListItem button key=\"Pack Orders\">\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Pack Orders\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/admin/addReport\" >\r\n              <ListItem button key=\"Add Report\">\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Report\" />\r\n              </ListItem>\r\n            </Link>\r\n            <ListItem button key=\"Logout\" onClick={logOut}>\r\n              <ListItemIcon>\r\n                <ExitToApp />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign out\" />\r\n            </ListItem>\r\n          </List>\r\n        </SwipeableDrawer>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuAppBar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\r\n\r\nimport {login} from '../api/admin';\r\nimport {updateAdmin} from '../actions/admin.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nclass LoginAdmin extends Component {\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  }\r\n  handleSubmit = () => {\r\n    let {username, password} = this.state;\r\n    let {onUpdateAdmin} = this.props;\r\n    login({username, password})\r\n    .then(res => {\r\n      onUpdateAdmin(res.data);\r\n    })\r\n    // .catch(err => alert(\"Please check username and password\"));\r\n  }\r\n  render() {\r\n    let {username, password} = this.state;\r\n    return (\r\n      <div \r\n        style={{\r\n          display: \"flex\", \r\n          justifyContent: 'center', \r\n          alignItems: 'center',\r\n          background: 'grey',\r\n          height: '100vh'\r\n        }}\r\n      >\r\n        <Card style={{minWidth: 300}}>\r\n          <CardHeader title=\"Admin Login\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                autoFocus\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                value={username}\r\n                onChange={(e) => this.setState({username: e.target.value})}\r\n              />\r\n            </div>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(e) => this.setState({password: e.target.value})}\r\n              />\r\n            </div>\r\n            <div >\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n            \r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n          <div>\r\n            <Link to=\"/\">\r\n              Login as Driver\r\n            </Link>\r\n          </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport {getAllOrders, getDeliveryBoysData} from '../api/admin';\r\nimport {updateOrdersData, updateAdminData} from '../actions/admin.actions';\r\nimport AdminNavbar from \"../components/AdminNavbar\";\r\nimport LoginAdmin from '../components/AdminLogin';\r\n\r\nconst CustomerSheet = lazy(() => import(/* webpackChunkName: \"CustomerSheet\" */ '../components/CustomerSheet'));\r\nconst ProductSheet = lazy(() => import(/* webpackChunkName: \"ProductSheet\" */ '../components/ProductSheet'));\r\nconst OrderManagement = lazy(() => import(/* webpackChunkName: \"OrderManagement\" */ '../components/OrderManagement'));\r\nconst PackOrders = lazy(() => import(/* webpackChunkName: \"PackOrders\" */ '../components/PackOrders'));\r\nconst AddReport = lazy(() => import(/* webpackChunkName: \"AddReport\" */ '../components/AddReport'));\r\nconst HeatMap = lazy(() => import(/* webpackChunkName: \"HeatMap\" */ '../components/HeatMap'));\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data)),\r\n    onUpdateAdminData: (data) => dispatch(updateAdminData(data))\r\n  };\r\n}\r\n\r\nclass AdminRouter extends Component {\r\n  componentDidMount() {\r\n\r\n    let {onUpdateOrdersData, onUpdateAdminData} = this.props;\r\n\r\n    getDeliveryBoysData()\r\n    .then(res => {\r\n      let deliveryBoysData = res.data;\r\n      let deliveryBoys = new Map();\r\n\r\n      deliveryBoysData.forEach(person => {\r\n        deliveryBoys.set(person.id, person);\r\n      })\r\n      onUpdateAdminData({deliveryBoys});\r\n    })\r\n\r\n    getAllOrders()\r\n    .then(res => {\r\n      let orders = res.data;\r\n      onUpdateOrdersData(orders);\r\n    })\r\n  }\r\n  render() {\r\n    console.log(\"Render admin\");\r\n    const {admin} = this.props;\r\n    return (\r\n      <div>\r\n        \r\n        {admin ?\r\n          <div>\r\n            <AdminNavbar />\r\n              <Suspense fallback={<Loading />}>\r\n                <Switch>\r\n                  <Route \r\n                    exact\r\n                    path=\"/admin/product\"\r\n                    component={ProductSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/manageOrders\"\r\n                    exact\r\n                    component={OrderManagement} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/customer\"\r\n                    exact\r\n                    component={CustomerSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/pack\"\r\n                    exact\r\n                    component={PackOrders}\r\n                  />\r\n                  <Route \r\n                    path=\"/admin/addReport\"\r\n                    component={AddReport} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/customer-density\"\r\n                    component={HeatMap}\r\n                  />\r\n                  <Route \r\n                    path=\"/admin\"\r\n                    component={CustomerSheet} \r\n                  />\r\n                </Switch>\r\n              </Suspense>\r\n          </div>\r\n          :\r\n          <LoginAdmin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminRouter);"],"sourceRoot":""}