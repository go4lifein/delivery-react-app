{"version":3,"sources":["api/misc.js","trace/fonts/logo.webp","trace/header.js","trace/icons/board.svg","trace/Main.js","trace/Journey.js","trace/icons/milkbox.svg","trace/Facts.js","trace/getDate.js","trace/Trace.js"],"names":["getReport","type","report_date","moment","format","url","API_URL","request","method","headers","Header","className","src","logo","alt","Main","data","bmc_receive","plant_receive","plant_dispatch","whs_receive","whs_dispatch","board","Journey","useState","journey","setJourney","useEffect","startTime","endTime","duration","diff","hours","parseInt","asHours","minutes","asMinutes","container","useRef","lottie","loadAnimation","current","renderer","loop","autoplay","speed","animationData","require","ref","Facts","milkbox","onClick","window","open","pdf_url","ph","fat","snf","mbrt","GetDate","startDate","setStartDate","setIsA2","isA2","selected","dateFormat","onChange","date","Trace","location","Date","setData","loading","setLoading","search","URLSearchParams","get","a","response","console","log","getData","Loading"],"mappings":"oHAAA,gEAGO,SAASA,IAAqE,IAA3DC,EAA0D,uDAAnD,KAAMC,EAA6C,uDAA/BC,MAASC,OAAO,cACnEF,EAAcC,IAAOD,GAAaE,OAAO,cAEzC,IAAIC,EAAG,UAAMC,IAAN,uCAA4CJ,EAA5C,sBAAqED,GAC5E,OAAOM,YAAQ,CACbF,IAAKA,EACLG,OAAQ,MACRC,QAAS,CACP,eAAgB,wB,0ufCXP,G,cAAA,IAA0B,mCCE1B,SAASC,IACtB,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,SAErC,oBAAIA,UAAU,UAAd,2C,WCPS,MAA0B,kC,kBCU1B,SAASI,EAAT,GAAuB,IAARC,EAAO,EAAPA,KAE5B,OACE,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAY,QAAjB,UACE,sBAAKA,UAAY,MAAjB,UACE,6CAAgB,uBAAhB,UACA,4BAAIR,IAAOa,EAAKC,aAAab,OAAO,gBAGtC,sBAAKO,UAAY,gBAAjB,UACE,mDAAqB,uBAArB,QAAmC,wCAAnC,OACA,4BAAIR,IAAOa,EAAKE,eAAed,OAAO,gBAExC,sBAAKO,UAAY,iBAAjB,UACF,qDAAuB,uBAAvB,eAA4C,uBAA5C,gBACE,4BAAIR,IAAOa,EAAKG,gBAAgBf,OAAO,gBAGvC,sBAAKO,UAAY,cAAjB,UACA,6CAAe,uBAAf,gBACA,4BAAIR,IAAOa,EAAKI,aAAahB,OAAO,gBAEtC,sBAAKO,UAAY,eAAjB,UACE,iDAAmB,uBAAnB,cACA,4BAAIR,IAAOa,EAAKK,cAAcjB,OAAO,gBAGvC,qBAAKQ,IAAMU,EAAOX,UAAY,WAAWG,IAAM,kB,6BCjCtC,SAASS,EAAT,GAA0B,IAARP,EAAO,EAAPA,KAAO,EACPQ,mBAAS,IADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAExCC,qBAAU,WAEN,GAAIX,EAAJ,CAEA,IAAIY,EAAYzB,IAAOa,EAAKC,aAC1BY,EAAU1B,IAAOa,EAAKK,cACtBS,EAAW3B,IAAO2B,SAASD,EAAQE,KAAKH,IAExCI,EAAQC,SAASH,EAASI,WAC1BC,EAAUF,SAASH,EAASM,aAAe,GAC/CV,EAAWM,EAAQ,UAAaG,EAAU,gBAEzC,CAACnB,IACF,IAAMqB,EAAYC,iBAAO,MAYzB,OAVAX,qBAAU,WACRY,IAAOC,cAAc,CACnBH,UAAWA,EAAUI,QACrBC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,MAAO,OACPC,cAAeC,EAAQ,SAExB,IAED,sBAAKpC,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAQqC,IAAKX,IAC5B,oBAAG1B,UAAU,OAAb,oCAA4Cc,Q,WCnCnC,MAA0B,oCCK1B,SAASwB,EAAT,GAA0B,IAATjC,EAAQ,EAARA,KAI9B,OACE,sBAAKL,UAAU,QAAf,UACE,qBAAKC,IAAKsC,EAASvC,UAAU,OAAOG,IAAI,aACzCE,GAAO,wBAAQL,UAAU,eAAewC,QAAW,kBAAMC,OAAOC,KAAKrC,EAAKsC,UAAnE,mCACNtC,GACA,sBAAKL,UAAU,QAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,KAAf,UAEE,oCAEA,4BAAIK,EAAKuC,QAEX,sBAAK5C,UAAU,KAAf,UACE,sCACA,8BAAIK,EAAKwC,IAAT,eAGJ,sBAAK7C,UAAU,WAAf,UACE,sBAAKA,UAAU,KAAf,UACE,qCACA,8BAAIK,EAAKyC,IAAT,WAEF,sBAAK9C,UAAU,KAAf,UACE,sCACA,8BAAIK,EAAK0C,KAAT,uB,oCC7BG,SAASC,EAAT,GAA6D,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,aAA8B,EAAhBC,QAAgB,EAAPC,KAElE,OACE,qBAAKpD,UAAU,aAAf,SACE,cAAC,IAAD,CACEA,UAAU,MACVqD,SAAUJ,EACVK,WAAW,eAEXC,SAAU,SAACC,GAAD,OAAUN,EAAaM,Q,qBCF1B,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAAY,EACR7C,mBAAS,IAAI8C,MADL,mBACnCV,EADmC,KACxBC,EADwB,OAElBrC,oBAAS,GAFS,mBAEnCuC,EAFmC,KAE7BD,EAF6B,OAGlBtC,mBAAS,MAHS,mBAGnCR,EAHmC,KAG7BuD,EAH6B,OAIZ/C,oBAAS,GAJG,mBAInCgD,EAJmC,KAI1BC,EAJ0B,KAiC1C,OA3BA9C,qBAAU,WAAO,IACV+C,EAAUL,EAAVK,OACLA,EAAS,IAAIC,gBAAgBD,GAC7B,IAAMP,EAAO,IAAIG,KAAKI,EAAOE,IAAI,gBAC3B3E,EAAOyE,EAAOE,IAAI,aACxBf,EAAaM,GACbL,EAAiB,OAAT7D,KACP,CAACoE,IAEJ1C,qBAAU,WAAM,4CAEd,4BAAAkD,EAAA,sEAEIJ,GAAW,GAFf,SAG2BzE,YAAU,KAAM4D,GAH3C,OAGUkB,EAHV,OAIIP,EAAQO,EAAS9D,MACjByD,GAAW,GALf,gDAQIM,QAAQC,IAAR,MACAT,EAAQ,MACRE,GAAW,GAVf,0DAFc,uBAAC,WAAD,wBAedQ,KACC,CAACrB,EAAWG,IAGb,sBAAKpD,UAAU,QAAf,UACE,cAACD,EAAD,IACA,cAACiD,EAAD,CAASC,UAAaA,EAAWC,aAAeA,EAAcE,KAAQA,EAAMD,QAAWA,IACtFU,GAAW,cAACU,EAAA,EAAD,KACVlE,GAAQ,iDACTA,GACC,qCACE,cAACD,EAAD,CAAMC,KAAOA,IACb,cAACO,EAAD,CAASP,KAAQA,IACjB,cAACiC,EAAD,CAAOjC,KAAOA","file":"static/js/8.1151f429.chunk.js","sourcesContent":["import {API_URL , request} from '../helpers/utils';\r\nimport moment from 'moment';\r\n\r\nexport function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\r\n  report_date = moment(report_date).format('YYYY-MM-DD');\r\n  // console.log(report_date, type, moment().format('YYYY-MM-DD'));\r\n  let url = `${API_URL}/misc/getReport?report_date=${report_date}&milk_type=${type}`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","export default __webpack_public_path__ + \"static/media/logo.06af865d.webp\";","import \"./header.scss\";\r\nimport logo from \"./fonts/logo.webp\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={logo} alt=\"logo\" className=\"logo\" />\r\n\r\n      <h1 className=\"heading\">Trace your milk's journey.</h1>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/board.cf3ddb04.svg\";","import React from 'react'\r\n\r\n\r\n\r\nimport \"./main.scss\";\r\nimport board from \"./icons/board.svg\";\r\nimport moment from \"moment\";\r\n//{moment(data.plant_receive).format('DD MM YYYY')}\r\n//{moment(data.plant_receive).format('hh:mm A')}\r\n\r\nexport default function Main({data}) {\r\n\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className = \"board\">\r\n        <div className = \"BMC\">\r\n          <h1 >Recieved at<br></br> BMC</h1>\r\n          <p>{moment(data.bmc_receive).format('hh:mm A')}</p>\r\n        </div>\r\n       \r\n        <div className = \"plant-receive\">\r\n          <h1> Milk Pasteurized<br></br>at 85<span>&#176;</span>C</h1>\r\n          <p>{moment(data.plant_receive).format('hh:mm A')}</p>\r\n        </div>\r\n        <div className = \"plant-dispatch\">\r\n      <h1>Packed in a 3-Layer<br></br>Tamper-Proof<br></br> Packaging</h1>\r\n        <p>{moment(data.plant_dispatch).format('hh:mm A')}</p>\r\n\r\n        </div>\r\n        <div className = \"whs-receive\">\r\n        <h1>Arrived at <br></br> Warehouse</h1>\r\n        <p>{moment(data.whs_receive).format('hh:mm A')}</p>\r\n      </div>\r\n      <div className = \"whs-dispatch\">\r\n        <h1>Dispatched for <br></br>Delivery</h1>\r\n        <p>{moment(data.whs_dispatch).format('hh:mm A')}</p>\r\n      </div>\r\n     \r\n      <img src= {board} className = \"timeline\" alt = \"timeline\" />\r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef , useState } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport moment from \"moment\";\r\nimport \"./journey.scss\";\r\n\r\nexport default function Journey({data}) {\r\n  const [ journey ,setJourney ] =useState(\"\");\r\nuseEffect(() => {\r\n\r\n    if(!data)\r\n    return\r\n    let startTime = moment(data.bmc_receive);\r\n  let endTime = moment(data.whs_dispatch);\r\n  let duration = moment.duration(endTime.diff(startTime));\r\n\r\n  let hours = parseInt(duration.asHours());\r\n  let minutes = parseInt(duration.asMinutes()) % 60;\r\n  setJourney(hours + \" hours \" +  minutes + \" minutes \");\r\n\r\n} ,[data])\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      speed: \"2.5x\",\r\n      animationData: require(\"./icons/truck.json\"),\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"journey\">\r\n      <div className=\"truck\" ref={container}></div>\r\n      <p className=\"time\">Total  journey  time : {journey}</p>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/milkbox.0109d595.svg\";","import  React , { useEffect } from \"react\";\r\nimport \"./facts.scss\";\r\n\r\nimport milkbox from \"./icons/milkbox.svg\";\r\n\r\nexport default function Facts( {data} ) {\r\n\r\n   \r\n   \r\n  return (\r\n    <div className=\"facts\">\r\n      <img src={milkbox} className=\"Milk\" alt=\"milkboxs\" />\r\n    {data &&<button className=\"download-btn\" onClick = {() => window.open(data.pdf_url)}> Download Full Report</button>}\r\n    { data&& \r\n      <div className=\"cards\">\r\n        <div className=\"section1\">\r\n          <div className=\"f1\">\r\n    \r\n            <h1>pH</h1>\r\n            \r\n            <p>{data.ph}</p>\r\n          </div>\r\n          <div className=\"f2\">\r\n            <h1>Fat </h1>\r\n            <p>{data.fat} mg</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"section2\">\r\n          <div className=\"f3\">\r\n            <h1>SNF</h1>\r\n            <p>{data.snf} %</p>\r\n          </div>\r\n          <div className=\"f4\">\r\n            <h1>MBRT</h1>\r\n            <p>{data.mbrt} mins</p>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DatePicker , {subDays} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./getdate.scss\";\r\n\r\nexport default function GetDate( {startDate ,setStartDate ,setIsA2 ,isA2}) {\r\n  \r\n  return (\r\n    <div className=\"datepicker\">\r\n      <DatePicker\r\n        className=\"box\"\r\n        selected={startDate}\r\n        dateFormat=\"MMMM d, yyyy\"\r\n      \r\n        onChange={(date) => setStartDate(date)}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React , {useState , useEffect} from \"react\";\r\nimport \"./trace.scss\";\r\nimport Header from \"./header.js\";\r\nimport {location ,search} from \"react-router\";\r\nimport Main from \"./Main.js\";\r\nimport moment from \"moment\";\r\nimport Journey from \"./Journey.js\";\r\nimport Facts from \"./Facts.js\";\r\nimport GetDate from \"./getDate.js\";\r\nimport {getReport} from \"../api/misc.js\";\r\nimport Loading from \"../components/Loading.js\";\r\n\r\nexport default function Trace({ location }) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [isA2, setIsA2] = useState(true);\r\n  const [data ,setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let {search} = location;\r\n    search = new URLSearchParams(search);\r\n    const date = new Date(search.get('report_date'));\r\n    const type = search.get('milk_type');\r\n    setStartDate(date);\r\n    setIsA2(type === \"a2\" ? true : false);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n  \r\n    async function getData() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getReport(\"a2\", startDate);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      }\r\n      catch (err) {\r\n        console.log(err);\r\n        setData(null);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getData();\r\n  }, [startDate, isA2]);\r\n\r\n  return (\r\n    <div className=\"trace\">\r\n      <Header />\r\n      <GetDate startDate = {startDate} setStartDate ={setStartDate} isA2 = {isA2} setIsA2 = {setIsA2}/>\r\n      {loading && <Loading />}\r\n      {!data && <p>Record Not Found</p>}\r\n      {data &&\r\n        <>\r\n          <Main data= {data}  />\r\n          <Journey data = {data} />\r\n          <Facts data= {data}  />\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}