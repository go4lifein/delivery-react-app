{"version":3,"sources":["helpers/exportCSV.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","components/CustomerSheet.jsx"],"names":["downloadCSV","array","filename","link","document","createElement","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","d","Switch","_props$color","_props$edge","edge","_props$size","size","icon","thumb","edgeStart","edgeEnd","SwitchBase","type","checkedIcon","switchBase","input","track","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","colorAdjust","top","left","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","CustomerSheet","updateState","state","setState","selectedRows","createCrateNumbers","Date","localStorage","getItem","toISOString","setHours","alert","setItem","creatingCrate","customers","orderCrateIds","item","order_id","crateId","crate_id","updateCrateId","then","res","window","location","reload","columns","selector","sortable","cell","idx","address","hub","phone","allProducts","style","textAlign","id","map","product","total","unit","quantity","toString","Math","random","exportData","data","Array","from","values","removeSelectedDairy","sort","c1","c2","customer","products","house_number","subarea","area","addressString","categories","entries","category","toLowerCase","includes","i","exportCSV","toLocaleDateString","loading","alreadyCreatedCratedToday","this","cratesLastCreated","today","console","log","valueOf","search","filter","length","minWidth","sortIcon","actions","e","target","variant","startIcon","onClick","Component","connect","setAdmin","dispatch","onUpdateOrdersData","updateOrdersData"],"mappings":"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","file":"static/js/CustomerSheet.afaf86d4.chunk.js","sourcesContent":["function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\nexport default downloadCSV;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from \"react-data-table-component\";\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { TextField, Switch, FormControlLabel } from '@material-ui/core';\r\n\r\nimport {updateOrdersData} from '../actions/admin.actions';\r\nimport {updateCrateId} from '../api/admin';\r\nimport Loading from './Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data))\r\n  };\r\n}\r\nclass CustomerSheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      removeSelectedDairy: true\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let {alreadyCreatedCratedToday} = this.props;\r\n\r\n    let cratesLastCreated = new Date(localStorage.getItem('cratesLastCreated'));\r\n\r\n    if(cratesLastCreated) {\r\n      cratesLastCreated = new Date(cratesLastCreated);\r\n      let today = new Date().setHours(0);\r\n\r\n      console.log(today, cratesLastCreated.valueOf())\r\n      if(cratesLastCreated > today) {\r\n        alreadyCreatedCratedToday = true;\r\n      }\r\n    }\r\n    this.setState({\r\n      alreadyCreatedCratedToday\r\n    })\r\n  }\r\n  updateState = state => {\r\n    this.setState({ selectedRows: state.selectedRows });\r\n  }\r\n  createCrateNumbers = () => {\r\n    let cratesLastCreated = new Date(localStorage.getItem('cratesLastCreated', new Date().toISOString()));\r\n    let today = new Date().setHours(0);\r\n    if(cratesLastCreated > today) {\r\n      alert(\"Crates IDs Already created\");\r\n      return;\r\n    }\r\n    localStorage.setItem('cratesLastCreated', new Date().toISOString());\r\n    this.setState({\r\n      creatingCrate: true\r\n    });\r\n    let {customers } = this.props;\r\n    let orderCrateIds = [\r\n      /*\r\n      {\r\n        order_id: \r\n        crate_id: \r\n      } \r\n      */\r\n    ];\r\n\r\n    customers.forEach(item => {\r\n      const {order_id, crateId} = item;\r\n      orderCrateIds.push({order_id, crate_id: crateId});\r\n    });\r\n    updateCrateId({orderCrateIds})\r\n    .then(res => {\r\n      window.location.reload();\r\n    })\r\n  }\r\n  columns = [\r\n    {\r\n      name: 'Crate',\r\n      selector: 'crate_id',\r\n      sortable: true,\r\n      width: '90px'\r\n    },\r\n    {\r\n      name: 'Order Id',\r\n      selector: 'order_id',\r\n      sortable: true,\r\n      width: '90px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      width: '100px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.hub;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n      \r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Product',\r\n      selector: 'products',\r\n      sortable: false,\r\n      cell: (row, idx) => {\r\n        const {phone, allProducts} = row;\r\n        \r\n        return (\r\n          <table style={{width: '100%', textAlign: 'left'}} id=\"customer-sheet-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th >Total</th>\r\n              <th >Qty</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n              allProducts.map(product => {\r\n                const { total, unit, quantity} = product;\r\n                const name = product.product;\r\n                return (\r\n                  <tr key={phone.toString() + Math.random().toString()}>\r\n                    <td>{name}</td>\r\n                    <td className=\"fixed-width-column\">{total} {unit}</td>\r\n                    <td className=\"fixed-width-column\">{quantity}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n  exportData = () => {\r\n    let {customers } = this.props;\r\n    let data = Array.from(customers.values());\r\n    const {removeSelectedDairy} = this.state;\r\n\r\n    data.sort((c1, c2) => c1.crate_id - c2.crate_id);\r\n\r\n    let rows = [\r\n      ['Crate', 'Hub', 'Name', 'Phone', 'Address', 'Product', 'Category', 'Total', 'Qty'],\r\n    ];\r\n    data.forEach(customer => {\r\n      const {products, phone, address} = customer;\r\n      const {house_number, subarea, area, hub} = address;\r\n      let addressString = `\"${house_number}, ${subarea}, ${area}\"`;\r\n      const categories = Object.entries(products);\r\n      let allProducts = [];\r\n      categories.forEach(([category, value]) => {\r\n        value.forEach(product => {\r\n          product.category = category;\r\n          if(removeSelectedDairy) {\r\n            if(product.product.toLowerCase().includes(\"milk\") || product.product.toLowerCase().includes(\"paneer\")) return;\r\n          }\r\n          allProducts.push(product);\r\n        });\r\n      });\r\n      allProducts.forEach((product, i) => {\r\n        const { total, unit, quantity, category} = product;\r\n        if(i === 0) {\r\n          let row = [\r\n            customer.crate_id, \r\n            `${hub}`, \r\n            `${customer.name}`, \r\n            `${phone}`,\r\n            addressString,\r\n            `\"${product.product}\"`,\r\n            `${category}`,\r\n            `${total} ${unit}`, \r\n            `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        } else {\r\n          let row = [\r\n            '', '', '', '', '',\r\n            `\"${product.product}\"`, \r\n            `${category}`,\r\n            `${total} ${unit}`, `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        }\r\n      });\r\n    });\r\n    exportCSV(rows, `Customer Sheet - ${new Date().toLocaleDateString()}.csv`);\r\n  }\r\n  render() {\r\n    let loading = true;\r\n\r\n    let {customers } = this.props;\r\n    let {creatingCrate, removeSelectedDairy, search, alreadyCreatedCratedToday } = this.state;\r\n\r\n    alreadyCreatedCratedToday = alreadyCreatedCratedToday || this.props.alreadyCreatedCratedToday;\r\n\r\n    \r\n    let data = [];\r\n\r\n    if(customers) {\r\n      loading = false;\r\n      data = Array.from(customers.values());\r\n\r\n      data.forEach(customer => {\r\n        const {products} = customer;\r\n        const categories = Object.entries(products);\r\n        let allProducts = [];\r\n        categories.forEach(([category, value]) => {\r\n          value.forEach(product => {\r\n            product.category = category;\r\n            if(removeSelectedDairy) {\r\n              if(product.product.toLowerCase().includes(\"milk\") || product.product.toLowerCase().includes(\"paneer\")) return;\r\n            }\r\n            allProducts.push(product);\r\n          });\r\n        });\r\n        customer.allProducts = allProducts;\r\n      });\r\n\r\n      data = data.filter(item => {\r\n        const {name, phone, allProducts, crate_id} = item;\r\n        if(allProducts.length === 0) return false;\r\n        if(alreadyCreatedCratedToday) {\r\n          if(crate_id) return true;\r\n          return false;\r\n        }\r\n        if(search) {\r\n          if(name.toLowerCase().includes(search.toLowerCase())) return true;\r\n          if(phone.toLowerCase().includes(search.toLowerCase())) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            loading?\r\n            <Loading /> :\r\n            <div id=\"customer-sheet-table\" style={{minWidth: 1000}}>\r\n              <DataTable\r\n                data={data}\r\n                columns={this.columns}\r\n                sortIcon={<ArrowDownward />}\r\n                actions={\r\n                  <div className=\"flex middle\">\r\n                    \r\n                    <TextField \r\n                      label=\"Search Customer\"\r\n                      style={{\r\n                        marginRight: 10\r\n                      }}\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          search: e.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={removeSelectedDairy}\r\n                          onChange={(e, removeSelectedDairy) => this.setState({ removeSelectedDairy })}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Remove Milk and Paneer\"\r\n                    />\r\n                    \r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      startIcon={\r\n                        // <CircularProgress size={12} />\r\n                        creatingCrate ? <CircularProgress size={12} /> : null\r\n                      }\r\n                      disabled={creatingCrate || alreadyCreatedCratedToday}\r\n                      style={{\r\n                        marginRight: 4\r\n                      }}\r\n                      onClick={this.createCrateNumbers}\r\n                    >\r\n                      Create Crate Numbers\r\n                    </Button>\r\n\r\n                    <Button \r\n                      startIcon={<DownloadIcon />}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                      onClick={this.exportData}\r\n                    >\r\n                      Download Excel\r\n                    </Button>\r\n                  </div>\r\n                }\r\n                // onSelectedRowsChange={this.updateState}\r\n                // selectableRows\r\n              />\r\n            </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CustomerSheet);"],"sourceRoot":""}