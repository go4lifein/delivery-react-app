{"version":3,"sources":["components/AdminNavbar.js","components/AdminLogin.js","containers/Admin.jsx","actions/admin.actions.js","api/admin.js","images/logo.png"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","SideNav","logOut","useState","open","setOpen","className","IconButton","onClick","style","color","position","zIndex","SwipeableDrawer","anchor","onClose","onOpen","List","ListItem","button","window","reload","ListItemIcon","ListItemText","primary","to","Divider","withRouter","connect","state","setAdmin","dispatch","onUpdateAdmin","admin","updateAdmin","props","classes","AppBar","backgroundColor","Toolbar","padding","src","logo","alt","Typography","variant","Box","setCookie","LoginAdmin","username","password","handleSubmit","login","then","res","token","data","initRequestAuthHeader","document","catch","err","alert","this","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","label","value","onChange","e","setState","target","type","Button","Component","CustomerSheet","lazy","ProductSheet","OrderManagement","DeliveryDashboard","PackOrders","AddReport","HeatMap","DriverDashboard","FarmerDashboard","Traceability","CustomerInactivityTrend","DeliveryInstructions","AdminRouter","AdminNavbar","fallback","Loading","exact","path","component","UPDATE_ADMIN","payload","updateAdminData","UPDATE_ADMIN_DATA","updateOrdersData","UPDATE_ORDERS_DATA","updateOrderCrateData","UPDATE_ORDER_CRATE_DATA","addProducts","ADD_PRODUCTS","addOrderProducts","ADD_ORDER_PRODUCTS","addOrderBox","ADD_ORDER_BOX","updateDeliveryReport","UPDATE_DELIVERY_REPORT","getAllOrders","url","API_URL","getRequest","updateCrateId","postRequest","prepareOrder","addReport","formData","post","headers","getLocationCustomerDensity","getCustomersOrderHistory","getCustomers"],"mappings":"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","file":"static/js/Admin.6d2ffdbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from \"react-router\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/MenuOpen';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport ExitToApp from '@material-ui/icons/ExitToAppOutlined';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { connect } from 'react-redux';\nimport logo from '../images/logo.png';\n\nimport {updateAdmin} from '../actions/admin.actions';\nimport Box from '@material-ui/core/Box';\nimport {setCookie} from '../helpers/utils';\n\nfunction mapStateToProps(state) {\n  let {setAdmin} = state;\n  return {\n    ...setAdmin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction getTitle(location) {\n  switch (location.pathname) {\n    case '/admin/product':\n      return 'Product Sheet';\n    case '/admin/manageOrders':\n      return 'Manage Orders';\n    case '/admin/pack':\n      return 'Pack Orders';\n    case '/admin/addReport':\n      return 'Add Milk Report'\n    case '/admin/customer-density':\n      return 'Customer Density'\n    case '/admin/delivery':\n      return 'Delivery Dashboard'\n      case '/admin/DriverDashboard':\n        return 'Driver Dashboard'\n    case '/admin/FarmerDashboard':\n      return 'Farmer Dashboard'\n    case '/admin/traceability':\n        return 'Traceability'\n    default:\n      return '';\n  }\n}\n\nfunction MenuAppBar(props) {\n  const classes = useStyles();\n  const { location} = props;\n  const logOut = () => {\n    const {onUpdateAdmin} = props;\n    setCookie('x-admin-token', '', 0);\n    onUpdateAdmin(null);\n\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor: \"#fff\"}} color=\"default\">\n        <Toolbar style={{padding: 10}}>\n          \n          <img src={logo} alt=\"logo\" className=\"logo-nav\" />\n          <Typography variant=\"h5\" className={classes.title}>\n            {getTitle(location)}\n          </Typography>\n          \n          {/* <Box display={{ xs: 'none', md: 'block' }} >\n            <HorizontalNav logOut={logOut} />\n          </Box> */}\n          \n          <Box >\n            <SideNav logOut={logOut} />\n          </Box>\n          \n        </Toolbar>\n      </AppBar>\n      <Divider />\n    </div>\n  );\n}\n\nfunction SideNav({logOut}) {\n  const [open, setOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setOpen(!open);\n  }\n\n  return (\n    <div className=\"flex middle\">\n      <IconButton onClick={toggleMenu} >\n        <MenuIcon style={{color: \"#000\"}} />\n      </IconButton>\n      <div style={{position: 'fixed', zIndex: 10}}>\n        <SwipeableDrawer\n          anchor=\"right\"\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <List>\n            <ListItem button key=\"Reload\" onClick={() => window.location.reload()}>\n              <ListItemIcon>\n                <RefreshIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Reload\" />\n            </ListItem>\n            <Link to=\"/admin/customer-density\" >\n              <ListItem button key=\"customer-density\">\n                <ListItemIcon>\n                  <InfoIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Customer Density\" />\n              </ListItem>\n            </Link>\n            <Divider />\n            <Link to = '/admin/traceability'>\n              <ListItem button key = \"traceability\">\n                <ListItemIcon>\n                <FavoriteBorderIcon />\n                </ListItemIcon>\n                <ListItemText primary = \"Traceability\" />\n              </ListItem>\n            </Link>\n            <Link to = '/admin/FarmerDashboard'>\n              <ListItem button key = \"FarmerDashboard\">\n                <ListItemIcon>\n                <ArchiveIcon />\n                </ListItemIcon>\n              \n                <ListItemText primary = \"Farmer Dashboard\" />\n              </ListItem>\n            </Link>\n            \n            <Link to=\"/admin/addReport\" >\n              <ListItem button key=\"Add Report\">\n                <ListItemIcon>\n                  <InfoIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Add Milk Report\" />\n              </ListItem>\n            </Link>\n            {/* <Link to=\"/admin/customer\">\n              <ListItem button key=\"Customer Sheet\">\n                <ListItemIcon>\n                  <AccountIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Customer Sheet\" />\n              </ListItem>\n            </Link>\n            \n            <Link to=\"/admin/product\">\n              <ListItem button key=\"Product Sheet\">\n                <ListItemIcon>\n                  <DownloadIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Product Sheet\" />\n              </ListItem>\n            </Link> */}\n            <Divider />\n            <Link to=\"/admin/manageOrders\" >\n              <ListItem button key=\"Manage Orders\">\n                <ListItemIcon>\n                  <CreateIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Manage Orders\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/admin/delivery\" >\n              <ListItem button key=\"Delivery Dashboard\">\n                <ListItemIcon>\n                  <ArchiveIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Delivery Dashboard\" />\n              </ListItem>\n            </Link>\n            <Link to = '/admin/DriverDashboard'>\n              <ListItem button key = \"DriverDashboard\">\n                <ListItemIcon>\n                <ArchiveIcon />\n                </ListItemIcon>\n                <ListItemText primary = \"Driver Dashboard\" />\n              </ListItem>\n            </Link>\n            <Divider />\n            {/* <Link to=\"/admin/pack\" >\n              <ListItem button key=\"Pack Orders\">\n                <ListItemIcon>\n                  <ArchiveIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Pack Orders\" />\n              </ListItem>\n            </Link> */}\n            <ListItem button key=\"Logout\" onClick={logOut}>\n              <ListItemIcon>\n                <ExitToApp />\n              </ListItemIcon>\n              <ListItemText primary=\"Sign out\" />\n            </ListItem>\n          </List>\n        </SwipeableDrawer>\n      </div>\n      \n    </div>\n  );\n\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuAppBar));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\n\nimport {login} from '../api/admin';\nimport {updateAdmin} from '../actions/admin.actions';\nimport {initRequestAuthHeader, setCookie} from '../helpers/utils';\n\nfunction mapStateToProps(state) {\n  let {setAdmin} = state;\n  return {\n    ...setAdmin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\n  };\n}\n\nclass LoginAdmin extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n  handleSubmit = () => {\n    let {username, password} = this.state;\n    let {onUpdateAdmin} = this.props;\n    login({username, password})\n    .then(res => {\n      let token = res.data['token'];\n      setCookie(\"x-admin-token\", token, 5);\n      initRequestAuthHeader(\"x-admin-token\", token);\n      onUpdateAdmin(res.data.username);\n      document.location.reload();\n    })\n    .catch(err => alert(\"Please check username and password\"));\n  }\n  render() {\n    let {username, password} = this.state;\n    return (\n      <div \n        style={{\n          display: \"flex\", \n          justifyContent: 'center', \n          alignItems: 'center',\n          background: 'grey',\n          height: '100vh'\n        }}\n      >\n        <Card style={{minWidth: 300}}>\n          <CardHeader title=\"Admin Login\" />\n          <Divider />\n          <CardContent>\n            <div style={{marginBottom: 10}}>\n              <TextField\n                autoFocus\n                fullWidth\n                variant=\"outlined\"\n                label=\"Username\"\n                value={username}\n                onChange={(e) => this.setState({username: e.target.value})}\n              />\n            </div>\n            <div style={{marginBottom: 10}}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                type=\"password\"\n                label=\"Password\"\n                value={password}\n                onChange={(e) => this.setState({password: e.target.value})}\n              />\n            </div>\n            <div >\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                fullWidth\n                onClick={this.handleSubmit}\n              >\n                Login\n              </Button>\n            </div>\n            \n          </CardContent>\n          <Divider />\n          <CardContent>\n          <div>\n            <Link to=\"/\">\n              Login as Driver\n            </Link>\n          </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Loading from '../components/Loading';\nimport AdminNavbar from \"../components/AdminNavbar\";\nimport LoginAdmin from '../components/AdminLogin';\n\nconst CustomerSheet = lazy(() => import(/* webpackChunkName: \"CustomerSheet\" */ '../components/CustomerSheet'));\nconst ProductSheet = lazy(() => import(/* webpackChunkName: \"ProductSheet\" */ '../components/ProductSheet'));\nconst OrderManagement = lazy(() => import(/* webpackChunkName: \"OrderManagement\" */ '../components/OrderManagement'));\nconst DeliveryDashboard = lazy(() => import(/* webpackChunkName: \"DeliveryDashboard\" */ '../components/DeliveryDashboard'));\nconst PackOrders = lazy(() => import(/* webpackChunkName: \"PackOrders\" */ '../components/PackOrders'));\nconst AddReport = lazy(() => import(/* webpackChunkName: \"AddReport\" */ '../components/AddReport'));\nconst HeatMap = lazy(() => import(/* webpackChunkName: \"HeatMap\" */ '../components/HeatMap'));\nconst DriverDashboard = lazy(() => import (/*webpackChunkName : \"DriverDashboard\"*/ '../components/DriverDashboard'));\nconst FarmerDashboard = lazy(() => import (/*webpackChunkName : \"FarmerDashboard\"*/ '../components/FarmerDashboard'));\nconst Traceability = lazy(() => import (/*webpackChunkName : \"Traceability\"*/ '../components/TraceabilityDashboard'));\nconst CustomerInactivityTrend = lazy(() => import (/*webpackChunkName : \"CustomerInactivityTrend\"*/ '../components/Analytics/CustomerInactivityTrend'));\nconst DeliveryInstructions = lazy(() => import (/*webpackChunkName : \"DeliveryInstructions\"*/ '../components/Customer/DeliveryInstructions'));\n\nfunction mapStateToProps(state) {\n  let {setAdmin} = state;\n  return {\n    ...setAdmin\n  };\n}\n\nclass AdminRouter extends Component {\n  render() {\n    const {admin} = this.props;\n    return (\n      <div>\n        \n        {admin ?\n          <div>\n            <AdminNavbar />\n              <Suspense fallback={<Loading />}>\n                <Switch>\n                  <Route \n                    exact\n                    path=\"/admin/product\"\n                    component={ProductSheet} \n                  />\n                  <Route \n                    path=\"/admin/manageOrders\"\n                    exact\n                    component={OrderManagement} \n                  />\n                  <Route \n                    path=\"/admin/customer\"\n                    exact\n                    component={CustomerSheet} \n                  />\n                  <Route \n                    path=\"/admin/pack\"\n                    exact\n                    component={PackOrders}\n                  />\n                  <Route \n                    path=\"/admin/addReport\"\n                    component={AddReport} \n                  />\n                  <Route \n                    path=\"/admin/customer-density\"\n                    component={HeatMap}\n                  />\n                  <Route \n                    path=\"/admin/delivery/instructions\"\n                    component={DeliveryInstructions}\n                  />\n                  <Route \n                    path=\"/admin/delivery\"\n                    component={DeliveryDashboard}\n                  />\n                  <Route\n                    path =\"/admin/DriverDashboard\"\n                    component = {DriverDashboard}\n                  />\n                  <Route \n                    path = \"/admin/FarmerDashboard\"\n                    component = {FarmerDashboard}\n                  />\n                  \n                  <Route \n                    path = \"/admin/traceability\"\n                    component = {Traceability}\n                  />\n                  <Route \n                    path = \"/admin/trends/inactive\"\n                    component = {CustomerInactivityTrend}\n                  />\n                  \n                  {/* Fallback */}\n                  <Route \n                    path=\"/admin\"\n                    component={OrderManagement} \n                  />\n                </Switch>\n              </Suspense>\n          </div>\n          :\n          <LoginAdmin />\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AdminRouter);","import { \n  UPDATE_ADMIN, \n  UPDATE_ORDERS_DATA, \n  UPDATE_ADMIN_DATA, \n  UPDATE_ORDER_CRATE_DATA,\n  ADD_PRODUCTS,\n  ADD_ORDER_PRODUCTS,\n  ADD_ORDER_BOX,\n  UPDATE_DELIVERY_REPORT\n} from '../constants/index';\n\nexport const updateAdmin = (admin) => ({\n  type: UPDATE_ADMIN,\n  payload: admin\n});\n\nexport const updateAdminData = (data) => ({\n  type: UPDATE_ADMIN_DATA,\n  payload: data\n});\n\nexport const updateOrdersData = (data) => ({\n  type: UPDATE_ORDERS_DATA,\n  payload: data\n});\n\nexport const updateOrderCrateData = (data) => ({\n  type: UPDATE_ORDER_CRATE_DATA,\n  payload: data\n});\n\nexport const addProducts = (data) => ({\n  type: ADD_PRODUCTS,\n  payload: data\n});\n\nexport const addOrderProducts = (data) => ({\n  type: ADD_ORDER_PRODUCTS,\n  payload: data\n});\n\nexport const addOrderBox = (data) => ({\n  type: ADD_ORDER_BOX,\n  payload: data\n});\n\nexport const updateDeliveryReport = (data) => ({\n  type: UPDATE_DELIVERY_REPORT,\n  payload: data\n});","import {API_URL, getRequest, postRequest} from '../helpers/utils';\nimport { post } from 'axios';\n\nexport function getAllOrders() {\n  let url = `${API_URL}/order/getAllOrders`;\n  return getRequest(url);\n}\n\nexport function getDeliveryBoysData() {\n  let url = `${API_URL}/order/getDeliveryBoysData`;\n  return getRequest(url);\n}\n\nexport function assignDrivers(data) {\n  let url = `${API_URL}/order/assignDrivers`;\n  return postRequest(url, data);\n}\n\nexport function updateCrateId(data) {\n  let url = `${API_URL}/order/updateCrateId`;\n  return postRequest(url, data);\n}\n\nexport function prepareOrder(data) {\n  let url = `${API_URL}/order/prepareOrder`;\n  return postRequest(url, data);\n}\n\nexport function login(data) {\n  let url = `${API_URL}/admin/login`;\n  return postRequest(url, data);\n}\n\nexport function addReport(formData) {\n  let url = `${API_URL}/admin/addReport`;\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  }\n  return post(url, formData, config);\n}\n\nexport function getLocationCustomerDensity() {\n  let url = `${API_URL}/admin/getLocationCustomerDensity`;\n  return getRequest(url);\n}\n\nexport function getCustomersOrderHistory() {\n  let url = `${API_URL}/analytics/getCustomersOrderHistory`;\n  return getRequest(url);\n}\n\nexport function getCustomers(data) {\n  let url = `${API_URL}/customers/getCustomers`;\n  return postRequest(url, data);\n}","export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";"],"sourceRoot":""}