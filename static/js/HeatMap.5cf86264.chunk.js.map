{"version":3,"sources":["components/HeatMap.jsx"],"names":["mapboxgl","workerClass","require","default","navControlStyle","right","top","HeatMap","useState","data","setData","latitude","longitude","zoom","viewport","setViewport","useEffect","getLocationCustomerDensity","then","res","geojson","type","features","CurrentZoomLevel","context","React","MapContext","forEach","location","customers","push","properties","value","geometry","coordinates","onViewportChange","width","height","mapboxApiAccessToken","process","style","paint","position","left"],"mappings":"uMAQAA,IAASC,YAAcC,EAAQ,KAAqDC,QAGpF,IACMC,EAAiB,CACrBC,MAAO,GACPC,IAAK,IA6EQC,UA1Ef,WAAoB,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEiBF,mBAAS,CACzCG,SAAU,WACVC,UAAW,WACXC,KAAM,KALS,mBAETC,EAFS,KAECC,EAFD,KAQjBC,qBAAU,WACRC,cACCC,MAAK,SAAAC,GACJT,EAAQS,EAAIV,WAEb,IAEH,IAAMW,EAAU,CACdC,KAAM,oBACNC,SAAU,IAoBZ,SAASC,IACP,IAAMC,EAAUC,aAAiBC,KAEjC,OAAO,8BAAMF,EAAQV,SAASD,OAGhC,OApBAJ,EAAKkB,SAAQ,SAAAC,GAAa,IACjBC,EAAkCD,EAAlCC,UAAWlB,EAAuBiB,EAAvBjB,SAAUC,EAAagB,EAAbhB,UAC5BQ,EAAQE,SAASQ,KAAK,CACpBT,KAAM,UACNU,WAAY,CACVC,MAAOH,GAETI,SAAU,CACRZ,KAAM,QACNa,YAAa,CAACtB,EAAWD,SAY7B,8BACE,eAAC,IAAD,2BACMG,GADN,IAEEqB,iBAAkB,SAACrB,GACjBC,EAAYD,IAEdsB,MAAM,QACNC,OAAO,qBACPC,qBA1DaC,6FAmDf,UASE,cAAC,IAAD,CAAmBC,MAAOpC,IAC1B,cAAC,IAAD,CAAQiB,KAAK,UAAUZ,KAAMW,EAA7B,SACE,cAAC,IAAD,eAAW,CACTC,KAAM,UACNoB,MAAO,CACL,oBAAqB,GACrB,iBAAkB,GAClB,iBAAkB,CAAE,cAAe,CAAE,UAAY,CAAE,MAAO,SAAW,EAAG,EAAG,EAAG,GAC9E,kBAAmB,QAIzB,qBAAKD,MAAO,CAACE,SAAU,WAAYC,KAAM,GAAIrC,IAAK,IAAlD,SACE,cAACiB,EAAD","file":"static/js/HeatMap.5cf86264.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport mapboxgl from '!mapbox-gl';\r\nimport MapGL, {NavigationControl, Source, Layer, MapContext} from 'react-map-gl';\r\nimport {getLocationCustomerDensity} from '../api/admin';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\nconst navControlStyle= {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\nfunction HeatMap() {\r\n  const [data, setData] = useState([]);\r\n  const [ viewport, setViewport ] = useState({\r\n    latitude: 28.4501751,\r\n    longitude: 77.0738271,\r\n    zoom: 10,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getLocationCustomerDensity()\r\n    .then(res => {\r\n      setData(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const geojson = {\r\n    type: 'FeatureCollection',\r\n    features: [\r\n      // {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\r\n    ]\r\n  };\r\n\r\n\r\n  data.forEach(location => {\r\n    const {customers, latitude, longitude} = location;\r\n    geojson.features.push({\r\n      type: 'Feature',\r\n      properties: {\r\n        value: customers,\r\n      },\r\n      geometry: {\r\n        type: 'Point', \r\n        coordinates: [longitude, latitude]\r\n      }\r\n    })\r\n  })\r\n\r\n  function CurrentZoomLevel() {\r\n    const context = React.useContext(MapContext);\r\n  \r\n    return <div>{context.viewport.zoom}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MapGL\r\n        {...viewport}\r\n        onViewportChange={(viewport) => {\r\n          setViewport(viewport)\r\n        }}\r\n        width=\"100vw\"\r\n        height=\"calc(100vh - 70px)\"\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      >\r\n        <NavigationControl style={navControlStyle} />\r\n        <Source type='geojson' data={geojson}>\r\n          <Layer {...{\r\n            type: 'heatmap',\r\n            paint: {\r\n              'heatmap-intensity': 0.1,\r\n              'heatmap-radius': 12,\r\n              'heatmap-weight': [ 'interpolate', [ 'linear' ], [ 'get', 'value' ], 0, 0, 6, 2 ],\r\n              'heatmap-opacity': 1,\r\n            },\r\n          }} />\r\n        </Source>\r\n        <div style={{position: 'absolute', left: 10, top: 10}}>\r\n          <CurrentZoomLevel />\r\n        </div>\r\n      </MapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeatMap;"],"sourceRoot":""}