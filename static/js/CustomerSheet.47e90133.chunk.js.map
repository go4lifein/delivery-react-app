{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/icons/ArrowDownward.js","helpers/exportCSV.js","../node_modules/@material-ui/icons/CloudDownload.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","components/CustomerSheet.jsx"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","_default","createElement","d","downloadCSV","array","filename","link","document","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","key","concat","capitalize","Typography","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","CustomerSheet","updateState","setState","selectedRows","createCrateNumbers","Date","localStorage","getItem","toISOString","setHours","alert","setItem","creatingCrate","customers","orderCrateIds","item","order_id","crateId","crate_id","updateCrateId","then","res","window","location","reload","columns","selector","sortable","cell","idx","address","hub","phone","allProducts","style","textAlign","map","product","total","unit","quantity","toString","Math","random","exportData","data","Array","from","values","removeSelectedDairy","sort","c1","c2","customer","products","house_number","subarea","area","addressString","categories","entries","category","toLowerCase","includes","i","exportCSV","toLocaleDateString","loading","alreadyCreatedCratedToday","this","cratesLastCreated","today","console","log","valueOf","search","filter","length","minWidth","sortIcon","actions","e","variant","startIcon","onClick","Component","connect","setAdmin","dispatch","onUpdateOrdersData","updateOrdersData"],"mappings":"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","file":"static/js/CustomerSheet.47e90133.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\nexport default downloadCSV;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from \"react-data-table-component\";\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { TextField, Switch, FormControlLabel } from '@material-ui/core';\r\n\r\nimport {updateOrdersData} from '../actions/admin.actions';\r\nimport {updateCrateId} from '../api/admin';\r\nimport Loading from './Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data))\r\n  };\r\n}\r\nclass CustomerSheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      removeSelectedDairy: true\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let {alreadyCreatedCratedToday} = this.props;\r\n\r\n    let cratesLastCreated = new Date(localStorage.getItem('cratesLastCreated'));\r\n\r\n    if(cratesLastCreated) {\r\n      cratesLastCreated = new Date(cratesLastCreated);\r\n      let today = new Date().setHours(0);\r\n\r\n      console.log(today, cratesLastCreated.valueOf())\r\n      if(cratesLastCreated > today) {\r\n        alreadyCreatedCratedToday = true;\r\n      }\r\n    }\r\n    this.setState({\r\n      alreadyCreatedCratedToday\r\n    })\r\n  }\r\n  updateState = state => {\r\n    this.setState({ selectedRows: state.selectedRows });\r\n  }\r\n  createCrateNumbers = () => {\r\n    let cratesLastCreated = new Date(localStorage.getItem('cratesLastCreated', new Date().toISOString()));\r\n    let today = new Date().setHours(0);\r\n    if(cratesLastCreated > today) {\r\n      alert(\"Crates IDs Already created\");\r\n      return;\r\n    }\r\n    localStorage.setItem('cratesLastCreated', new Date().toISOString());\r\n    this.setState({\r\n      creatingCrate: true\r\n    });\r\n    let {customers } = this.props;\r\n    let orderCrateIds = [\r\n      /*\r\n      {\r\n        order_id: \r\n        crate_id: \r\n      } \r\n      */\r\n    ];\r\n\r\n    customers.forEach(item => {\r\n      const {order_id, crateId} = item;\r\n      orderCrateIds.push({order_id, crate_id: crateId});\r\n    });\r\n    updateCrateId({orderCrateIds})\r\n    .then(res => {\r\n      window.location.reload();\r\n    })\r\n  }\r\n  columns = [\r\n    {\r\n      name: 'Crate',\r\n      selector: 'crate_id',\r\n      sortable: true,\r\n      width: '90px'\r\n    },\r\n    {\r\n      name: 'Order Id',\r\n      selector: 'order_id',\r\n      sortable: true,\r\n      width: '90px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      width: '100px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.hub;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n      \r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Product',\r\n      selector: 'products',\r\n      sortable: false,\r\n      cell: (row, idx) => {\r\n        const {phone, allProducts} = row;\r\n        \r\n        return (\r\n          <table style={{width: '100%', textAlign: 'left'}} id=\"customer-sheet-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th >Total</th>\r\n              <th >Qty</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n              allProducts.map(product => {\r\n                const { total, unit, quantity} = product;\r\n                const name = product.product;\r\n                return (\r\n                  <tr key={phone.toString() + Math.random().toString()}>\r\n                    <td>{name}</td>\r\n                    <td className=\"fixed-width-column\">{total} {unit}</td>\r\n                    <td className=\"fixed-width-column\">{quantity}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n  exportData = () => {\r\n    let {customers } = this.props;\r\n    let data = Array.from(customers.values());\r\n    const {removeSelectedDairy} = this.state;\r\n\r\n    data.sort((c1, c2) => c1.crate_id - c2.crate_id);\r\n\r\n    let rows = [\r\n      ['Crate', 'Hub', 'Name', 'Phone', 'Address', 'Product', 'Category', 'Total', 'Qty'],\r\n    ];\r\n    data.forEach(customer => {\r\n      const {products, phone, address} = customer;\r\n      const {house_number, subarea, area, hub} = address;\r\n      let addressString = `\"${house_number}, ${subarea}, ${area}\"`;\r\n      const categories = Object.entries(products);\r\n      let allProducts = [];\r\n      categories.forEach(([category, value]) => {\r\n        value.forEach(product => {\r\n          product.category = category;\r\n          if(removeSelectedDairy) {\r\n            if(product.product.toLowerCase().includes(\"milk\") || product.product.toLowerCase().includes(\"paneer\")) return;\r\n          }\r\n          allProducts.push(product);\r\n        });\r\n      });\r\n      allProducts.forEach((product, i) => {\r\n        const { total, unit, quantity, category} = product;\r\n        if(i === 0) {\r\n          let row = [\r\n            customer.crate_id, \r\n            `${hub}`, \r\n            `${customer.name}`, \r\n            `${phone}`,\r\n            addressString,\r\n            `\"${product.product}\"`,\r\n            `${category}`,\r\n            `${total} ${unit}`, \r\n            `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        } else {\r\n          let row = [\r\n            '', '', '', '', '',\r\n            `\"${product.product}\"`, \r\n            `${category}`,\r\n            `${total} ${unit}`, `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        }\r\n      });\r\n    });\r\n    exportCSV(rows, `Customer Sheet - ${new Date().toLocaleDateString()}.csv`);\r\n  }\r\n  render() {\r\n    let loading = true;\r\n\r\n    let {customers } = this.props;\r\n    let {creatingCrate, removeSelectedDairy, search, alreadyCreatedCratedToday } = this.state;\r\n\r\n    alreadyCreatedCratedToday = alreadyCreatedCratedToday || this.props.alreadyCreatedCratedToday;\r\n\r\n    \r\n    let data = [];\r\n\r\n    if(customers) {\r\n      loading = false;\r\n      data = Array.from(customers.values());\r\n\r\n      data.forEach(customer => {\r\n        const {products} = customer;\r\n        const categories = Object.entries(products);\r\n        let allProducts = [];\r\n        categories.forEach(([category, value]) => {\r\n          value.forEach(product => {\r\n            product.category = category;\r\n            if(removeSelectedDairy) {\r\n              if(product.product.toLowerCase().includes(\"milk\") || product.product.toLowerCase().includes(\"paneer\")) return;\r\n            }\r\n            allProducts.push(product);\r\n          });\r\n        });\r\n        customer.allProducts = allProducts;\r\n      });\r\n\r\n      data = data.filter(item => {\r\n        const {name, phone, allProducts, crate_id} = item;\r\n        if(allProducts.length === 0) return false;\r\n        if(alreadyCreatedCratedToday) {\r\n          if(crate_id) return true;\r\n          return false;\r\n        }\r\n        if(search) {\r\n          if(name.toLowerCase().includes(search.toLowerCase())) return true;\r\n          if(phone.toLowerCase().includes(search.toLowerCase())) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            loading?\r\n            <Loading /> :\r\n            <div id=\"customer-sheet-table\" style={{minWidth: 1000}}>\r\n              <DataTable\r\n                data={data}\r\n                columns={this.columns}\r\n                sortIcon={<ArrowDownward />}\r\n                actions={\r\n                  <div className=\"flex middle\">\r\n                    \r\n                    <TextField \r\n                      label=\"Search Customer\"\r\n                      style={{\r\n                        marginRight: 10\r\n                      }}\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          search: e.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={removeSelectedDairy}\r\n                          onChange={(e, removeSelectedDairy) => this.setState({ removeSelectedDairy })}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Remove Milk and Paneer\"\r\n                    />\r\n                    \r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      startIcon={\r\n                        // <CircularProgress size={12} />\r\n                        creatingCrate ? <CircularProgress size={12} /> : null\r\n                      }\r\n                      disabled={creatingCrate || alreadyCreatedCratedToday}\r\n                      style={{\r\n                        marginRight: 4\r\n                      }}\r\n                      onClick={this.createCrateNumbers}\r\n                    >\r\n                      Create Crate Numbers\r\n                    </Button>\r\n\r\n                    <Button \r\n                      startIcon={<DownloadIcon />}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                      onClick={this.exportData}\r\n                    >\r\n                      Download Excel\r\n                    </Button>\r\n                  </div>\r\n                }\r\n                // onSelectedRowsChange={this.updateState}\r\n                // selectableRows\r\n              />\r\n            </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CustomerSheet);"],"sourceRoot":""}