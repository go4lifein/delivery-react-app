{"version":3,"sources":["components/WebCam.js","components/OrderDeliveryForm.js"],"names":["videoConstraints","facingMode","WebcamCapture","onCapture","image","React","useState","takingPhoto","setTakingPhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","style","background","position","audio","width","height","ref","screenshotFormat","bottom","display","justifyContent","IconButton","onClick","color","src","alt","tutorialSteps","label","Transition","forwardRef","props","Slide","direction","Review","state","delivery_type","delivery_img","complete_delivery","boxes","milk_packets","history","match","driver","params","order_id","parseInt","orderId","loading","setLoading","className","Card","variant","Typography","mapDeliveryType","Divider","mapCompleteDelivery","Button","photoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","dataURItoBlob","formData","FormData","append","id","submitOrderDelivery","then","res","push","catch","err","alert","message","disabled","startIcon","CircularProgress","size","OrderDeliveryForm","handleNext","setState","activeStep","handleBack","DeliveryType","FormControl","component","RadioGroup","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","DeliveryPhoto","WebCam","CompleteDelivery","BoxNumbers","Slider","valueLabelDisplay","step","marks","min","max","onChangeCommitted","MilkPackets","defaultValue","this","orders","customers","window","location","order","find","item","customer","get","customer_id","console","log","Dialog","fullScreen","open","TransitionComponent","AppBar","Toolbar","edge","goBack","margin","padding","MobileStepper","steps","nextButton","maxSteps","backButton","Component","withRouter","connect","setDriver"],"mappings":"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","file":"static/js/21.4a1cb3cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CameraIcon from '@material-ui/icons/Camera';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nconst videoConstraints = {\r\n  // width: 1280,\r\n  // height: 720,\r\n  // facingMode: \"user\",\r\n  facingMode: \"environment\"\r\n};\r\n \r\nconst WebcamCapture = ({onCapture, image}) => {\r\n  const [takingPhoto, setTakingPhoto] = React.useState(image ? false : true);\r\n  const webcamRef = React.useRef(null);\r\n \r\n  const capture = React.useCallback(\r\n    () => {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      onCapture(imageSrc);\r\n      setTakingPhoto(false);\r\n    },\r\n    [webcamRef, onCapture]\r\n  );\r\n \r\n  return (\r\n    <div style={{background: '#000'}}>\r\n      {takingPhoto ?\r\n        <div style={{position: 'relative'}}>\r\n          <Webcam\r\n            audio={false}\r\n            width={282}\r\n            height={500}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            videoConstraints={videoConstraints}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={capture}>\r\n              <CameraIcon style={{color: 'white'}} />\r\n            </IconButton>\r\n          </div>\r\n        </div>:\r\n        <div style={{\r\n          position: 'relative'\r\n        }}>\r\n          <img \r\n            src={image} \r\n            alt=\"order_photo\"\r\n            width={282}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={() => setTakingPhoto(true)}>\r\n              <ReplayIcon style={{color: 'white'}} /> \r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;","import React, { useState } from 'react';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport WebCam from \"./WebCam\";\r\nimport {submitOrderDelivery} from '../api/driver';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी'\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n  },\r\n  {\r\n    label: 'Boxes - कितने डब्बे डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Milk Packets - कितने दूध के पैकेट डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें'\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\n\r\nfunction Review ({state, props}) {\r\n  const {delivery_type, delivery_img, complete_delivery, boxes, milk_packets} = state;\r\n\r\n  const {history, match, driver} = props;\r\n  const {params} = match;\r\n  let order_id = parseInt(params.orderId);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    const photoBlob = dataURItoBlob(delivery_img);\r\n    const formData = new FormData();\r\n    formData.append(\"delivery_img\", photoBlob);\r\n    formData.append(\"order_id\", order_id);\r\n    formData.append(\"driver_id\", driver.id);\r\n    formData.append(\"delivery_type\", delivery_type);\r\n    formData.append(\"complete_delivery\", complete_delivery);\r\n    formData.append(\"boxes\", boxes);\r\n    formData.append(\"milk_packets\", milk_packets);\r\n    submitOrderDelivery(formData)\r\n    .then(res => {\r\n      history.push('/');\r\n      setLoading(false);\r\n    })\r\n    .catch(err => {\r\n      setLoading(false);\r\n      alert(err.message);\r\n    });\r\n\r\n  }\r\n\r\n  function mapDeliveryType(delivery_type) {\r\n    switch (delivery_type) {\r\n      \r\n      case \"in_hand\":\r\n        return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n      case \"doorstep\":\r\n        return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n      case \"society_guard\":\r\n        return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n      case \"tower_guard\":\r\n        return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n      case \"order_cancelled\":\r\n        return \"Order Cancelled - आर्डर कैंसिल\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n    }\r\n  }\r\n  function mapCompleteDelivery(complete_delivery) {\r\n    switch (complete_delivery) {\r\n      \r\n      case \"yes\":\r\n        return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n      case \"no\":\r\n        return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n      default:\r\n        return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pv-10\">\r\n      <Card variant=\"outlined\">\r\n        \r\n        <div className=\"p-10\">\r\n            <Typography variant=\"body\">Select Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n            <Typography variant=\"h6\">\r\n              {mapDeliveryType(delivery_type)}\r\n            </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n          <Typography variant=\"body\">Take Photo - आर्डर की फोटो लीजिये</Typography>\r\n          {\r\n            delivery_img ?\r\n            <div>\r\n              <img alt=\"order\" src={delivery_img} width={300} /> \r\n            </div> :\r\n            <Typography variant=\"h6\"><span style={{color: 'red'}}>Please take picture</span></Typography>\r\n          }\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</Typography>\r\n          <Typography variant=\"h6\">\r\n            {mapCompleteDelivery(complete_delivery)}\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Boxes - कितने डब्बे डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{boxes}</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"p-10\">\r\n        <Typography variant=\"body\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n          <Typography variant=\"h6\">{milk_packets}</Typography>\r\n        </div>\r\n      </Card>\r\n      <div className=\"pv-10\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onSubmit}\r\n          disabled={loading}\r\n          startIcon={loading ? <CircularProgress size={12} /> : null}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      delivery_type: null,\r\n      delivery_img: null,\r\n      complete_delivery: null,\r\n      milk_packets: 0,\r\n      boxes: 0\r\n    }\r\n  }\r\n  handleNext = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n  handleBack = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n  DeliveryType = () => {\r\n    const onChange = (event) => {\r\n      this.setState({\r\n        delivery_type: event.target.value\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\" value={this.state.delivery_type} onChange={onChange}>\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n  DeliveryPhoto = () => {\r\n    const onCapture = (image) => {\r\n      // console.log(image)\r\n      this.setState({\r\n        delivery_img: image\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <div className=\"flex center\" >\r\n          <WebCam \r\n            onCapture={onCapture} \r\n            image={this.state.delivery_img}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  CompleteDelivery = () => {\r\n    \r\n    const onChange = (event) => {\r\n      this.setState({\r\n        complete_delivery: event.target.value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\" value={this.state.complete_delivery} onChange={onChange}>\r\n            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n            <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n  BoxNumbers = () => {\r\n    const onChange = (event, value) => {\r\n      this.setState({\r\n        boxes: value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <Slider\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={12}\r\n          value={this.state.boxes}\r\n          onChangeCommitted={onChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  MilkPackets = () => {\r\n    const onChange = (event, value) => {\r\n      this.setState({\r\n        milk_packets: value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <Slider\r\n          defaultValue={0}\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          value={this.state.milk_packets}\r\n          onChangeCommitted={onChange}\r\n          max={12}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    const {history, match, orders, customers} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n    if(!orders) {\r\n      window.location = '/';\r\n    }\r\n    let order = orders.find((item) => item.order_id === order_id);\r\n    let customer = customers.get(order.customer_id);\r\n\r\n    if(!customer) {\r\n      console.log(order);\r\n      window.location = '/';\r\n    }\r\n\r\n    const {activeStep} = this.state;\r\n    const maxSteps = 6;\r\n    // console.log(this.state);\r\n    return (\r\n      <div >\r\n        <Dialog \r\n          fullScreen \r\n          open\r\n          TransitionComponent={Transition}\r\n        >\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                history.goBack();\r\n              }} \r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              {customer.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{margin: '60px 10px 20px 10px', padding: '30px 10px'}}>\r\n          <Typography variant=\"h4\" >\r\n            {tutorialSteps[activeStep].label}\r\n          </Typography>\r\n          <Divider />\r\n          {\r\n            activeStep === 0 &&\r\n            <this.DeliveryType />\r\n          }\r\n          \r\n          {\r\n            activeStep === 1 &&\r\n            <this.DeliveryPhoto />\r\n          }\r\n          {\r\n            activeStep === 2 &&\r\n            <this.CompleteDelivery />\r\n          }\r\n          {\r\n            activeStep === 3 &&\r\n            <this.BoxNumbers />\r\n          }\r\n          {\r\n            activeStep === 4 &&\r\n            <this.MilkPackets />\r\n          }\r\n          {\r\n            activeStep === 5 &&\r\n            <Review \r\n              state={this.state}\r\n              props={this.props}\r\n            />\r\n          }\r\n        </div>\r\n        <MobileStepper\r\n          steps={maxSteps}\r\n          position=\"bottom\"\r\n          variant=\"progress\"\r\n          activeStep={activeStep}\r\n          color=\"default\"\r\n          nextButton={\r\n            <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n              <KeyboardArrowLeft />\r\n              Previous\r\n            </Button>\r\n          }\r\n        />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n"],"sourceRoot":""}