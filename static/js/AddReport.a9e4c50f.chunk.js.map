{"version":3,"sources":["components/ReportForm.js","components/AddReport.js","api/misc.js"],"names":["ReportForm","props","onSubmit","e","preventDefault","data","FormData","target","onChange","setState","name","value","onDateTimeChange","onFileChange","pdf","state","report_date","moment","format","milk_type","ph","snf","fat","sodium_content","mbrt","antibiotics1","antibiotics2","antibiotics3","aflatoxin","bmc_receive","subtract","bmc_dispatch","plant_receive","plant_dispatch","whs_receive","whs_dispatch","this","loading","filename","path","split","length","console","log","id","className","Grid","container","justify","spacing","item","xs","sm","md","lg","FormControl","fullWidth","TextField","label","type","InputLabel","Select","labelId","MenuItem","style","backgroundColor","color","required","FormControlLabel","control","Switch","disabled","checked","htmlFor","Button","variant","startIcon","CircularProgress","size","Component","AddReport","addReport","then","res","alert","catch","err","response","status","report","getReport","Box","m","connect","a","date","url","API_URL","request","method","headers","result","getBatchMilkReport","batchNo","getRequest","getOrderDetails","orderId","parseInt","btoa","getMyOrderItemDetails"],"mappings":"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","file":"static/js/AddReport.a9e4c50f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {FormControl, Grid, Select, TextField, Switch, FormControlLabel, CircularProgress, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport UploadIcon from '@material-ui/icons/CloudUpload';\nimport moment from 'moment';\n\nclass ReportForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      report_date: moment().format('YYYY-MM-DD'),\n      milk_type: 'a2',\n      ph: 7,\n      snf: 9,\n      fat: 4,\n      sodium_content: 496,\n      mbrt: 40,\n      antibiotics1: false,\n      antibiotics2: false,\n      antibiotics3: false,\n      aflatoxin: false,\n      // bmc_receive: null,\n      // bmc_dispatch: null,\n      // plant_receive: null,\n      // plant_dispatch: null,\n      // whs_receive: null,\n      // whs_dispatch: null,\n      pdf: null,\n      bmc_receive: moment().subtract(7, 'hour').format('YYYY-MM-DDTHH:MM'),\n      bmc_dispatch: moment().subtract(5, 'hour').format('YYYY-MM-DDTHH:MM'),\n      plant_receive: moment().subtract(4, 'hour').format('YYYY-MM-DDTHH:MM'),\n      plant_dispatch: moment().subtract(3, 'hour').format('YYYY-MM-DDTHH:MM'),\n      whs_receive: moment().subtract(1, 'hour').format('YYYY-MM-DDTHH:MM'),\n      whs_dispatch: moment().format('YYYY-MM-DDTHH:MM'),\n    }\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const {onSubmit} = this.props;\n    onSubmit(data);\n\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  \n  onDateTimeChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  onFileChange = (e) => {\n    this.setState({\n      pdf: e.target.value\n    })\n  }\n  render() {\n    const {\n      report_date, \n      milk_type,\n      ph,\n      snf,\n      fat,\n      sodium_content,\n      mbrt,\n      antibiotics1,\n      antibiotics2,\n      antibiotics3,\n      aflatoxin,\n      bmc_receive,\n      bmc_dispatch,\n      plant_receive,\n      plant_dispatch,\n      whs_receive,\n      whs_dispatch,\n      pdf\n    } = this.state;\n    \n    const {loading} = this.props;\n    let filename = null;\n    if(pdf) {\n      let path = pdf.split(\"\\\\\");\n      filename = path[path.length - 1];\n    }\n\n    console.log(this.state);\n\n    return (\n      <div id=\"report-form\" className=\"flex column middle\">\n        <form id=\"milk-report-form\" onSubmit={this.onSubmit}>\n        <Grid container \n          justify=\"center\" \n          spacing={2}\n        >\n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <FormControl fullWidth>\n              <TextField\n                fullWidth\n                label=\"Report Date *\"\n                type=\"date\"\n                value={report_date}\n                name=\"report_date\"\n                onChange={this.onDateTimeChange}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <FormControl fullWidth>\n              <InputLabel id=\"milk_type\">Milk Type *</InputLabel>\n              <Select\n                labelId=\"milk_type\"\n                fullWidth\n                name=\"milk_type\"\n                value={milk_type}\n                onChange={(e) => {\n                  this.setState({\n                    milk_type: e.target.value\n                  })\n                }}\n              >\n                <MenuItem \n                  value=\"a2\"\n                >A2 Gable Top</MenuItem>\n                <MenuItem \n                  value=\"a2-cow-toned\"\n                >A2 Cow Toned</MenuItem>\n                <MenuItem \n                  value=\"toned-milk\" \n                  style={{backgroundColor: '#2c90cf', color: 'white'}}>\n                    Toned Milk\n                </MenuItem>\n                <MenuItem \n                  value=\"full-cream-milk\" \n                  style={{backgroundColor: '#c92029', color: 'white'}}>\n                  Full Cream Milk\n                </MenuItem>\n                <MenuItem \n                  value=\"double-toned-milk\" \n                  style={{backgroundColor: '#7650a0', color: 'white'}}>\n                    Double Toned Milk\n                </MenuItem>\n                <MenuItem \n                  value=\"cow-milk\" \n                  style={{backgroundColor: '#f277a0', color: 'white'}}>\n                    Cow Milk\n                </MenuItem> \n                <MenuItem value=\"dahi\" >Dahi</MenuItem>\n                <MenuItem value=\"dahi-lite\" >Lite Dahi</MenuItem>\n                <MenuItem value=\"chach\" >Chach</MenuItem>\n                <MenuItem value=\"chach-masala\" >Chach Masala</MenuItem>\n                {/* <MenuItem value=\"buffalo-full\">Buffalo Full</MenuItem> */}\n                {/* <MenuItem value=\"double-toned\">Double Toned</MenuItem> */}\n                {/* <MenuItem value=\"toned\">Toned</MenuItem> */}\n                {/* <MenuItem value=\"mix\">Mix</MenuItem> */}\n                {/* 'a2-cow-toned', 'buffalo-full', 'toned', 'double-toned' */}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <TextField fullWidth\n              label=\"pH *\"\n              name='ph'\n              onChange={this.onChange}\n              type=\"number\"\n              value={ph}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <TextField fullWidth\n              label=\"FAT *\"\n              name=\"fat\"\n              value={fat}\n              type=\"number\"\n              onChange={this.onChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <TextField fullWidth\n              label=\"SNF *\"\n              name=\"snf\"\n              value={snf}\n              type=\"number\"\n              onChange={this.onChange}\n            />\n          </Grid>\n        </Grid>\n\n\n        <Grid container \n          justify=\"center\" \n          spacing={2}\n        >  \n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <TextField fullWidth\n              label=\"Sodium Content *\"\n              name=\"sodium_content\"\n              value={sodium_content}\n              type=\"number\"\n              onChange={this.onChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={2}>\n            <TextField fullWidth\n              label=\"MBRT *\"\n              name=\"mbrt\"\n              type=\"number\"\n              value={mbrt}\n              onChange={this.onChange}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >BMC Received</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={bmc_receive}\n              name=\"bmc_receive\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >BMC Dispatched</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={bmc_dispatch}\n              name=\"bmc_dispatch\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container \n          justify=\"center\" \n          spacing={2}\n        >\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >Plant Received</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={plant_receive}\n              name=\"plant_receive\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >Plant Dispatched</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={plant_dispatch}\n              name=\"plant_dispatch\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >WHS Received</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={whs_receive}\n              name=\"whs_receive\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <InputLabel className=\"required\" >WHS Dispatched</InputLabel>\n            <TextField fullWidth\n              type=\"datetime-local\"\n              required\n              onChange={this.onDateTimeChange}\n              value={whs_dispatch}\n              name=\"whs_dispatch\"\n            />\n          </Grid>\n        </Grid>\n        \n        \n        <Grid container \n          justify=\"center\" \n          spacing={2}\n        >  \n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <FormControlLabel\n              control={\n                <Switch disabled\n                  checked={antibiotics1}\n                  onChange={(e, antibiotics1) => this.setState({ antibiotics1 })}\n                  color=\"primary\"\n                />\n              }\n              label=\"Antibiotics (B & T) *\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <FormControlLabel\n              control={\n                <Switch disabled\n                  checked={antibiotics2}\n                  onChange={(e, antibiotics2) => this.setState({ antibiotics2 })}\n                  color=\"primary\"\n                />\n              }\n              label=\"Antibiotics (Chloramphenicol) *\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <FormControlLabel\n              control={\n                <Switch disabled\n                  checked={antibiotics3}\n                  onChange={(e, antibiotics3) => this.setState({ antibiotics3 })}\n                  color=\"primary\"\n                />\n              }\n              label=\"Antibiotics (Sulphonamide) *\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3} lg={3}>\n            <FormControlLabel\n              control={\n                <Switch disabled\n                  checked={aflatoxin}\n                  onChange={(e, aflatoxin) => this.setState({ aflatoxin })}\n                  color=\"primary\"\n                />\n              }\n              label=\"Aflatoxin M1 *\"\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container \n          justify=\"center\" \n          spacing={2}\n        >\n          <Grid item>\n            <div>\n              <input \n                type=\"file\" \n                id=\"milk-report-file-input\" \n                className=\"file-input\"\n                name=\"pdf\"\n                onChange={this.onChange}\n              />\n              <label className=\"file\" htmlFor=\"milk-report-file-input\">\n                <div className=\"flex middle\">\n                  <div className=\"icon\">\n                    <UploadIcon />\n                  </div>\n                  Upload Report\n                </div>\n              </label>\n            </div>\n            {filename}\n          </Grid>\n          \n          <Grid item>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              // onClick={onSubmit}\n              disabled={loading}\n              startIcon={loading ? <CircularProgress size={12} /> : null}\n            >\n              Submit\n            </Button>\n              \n          </Grid>\n          \n          <Grid item>\n            <Button\n              color=\"primary\"\n              // onClick={onSubmit}\n              // disabled={loading}\n              // startIcon={loading ? <CircularProgress size={12} /> : null}\n            >\n              Cancel\n            </Button>\n              \n          </Grid>\n          \n        </Grid>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default ReportForm;","import { Box} from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {getReport} from '../api/misc';\nimport {addReport} from '../api/admin';\nimport ReportForm from './ReportForm';\n\nfunction mapStateToProps(state) {\n  return {\n\n  };\n}\n\nclass AddReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      report: null,\n      loading: false\n    }\n  }\n  componentDidMount() {\n    getReport()\n    .then(res => {\n      console.log(res.data);\n      this.setState({\n        report: res.data\n      });\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  onSubmit = (data) => {\n    this.setState({\n      loading: true\n    })\n    addReport(data)\n    .then(res => {\n      console.log(res);\n      this.setState({\n        loading: false\n      })\n      alert('Done');\n    })\n    .catch(err => {\n      if(err.response && err.response.status === 400) {\n        alert(err.response.data)\n      }\n      console.log(err);\n      this.setState({\n        loading: false\n      })\n    })\n  }\n  render() {\n    const {loading, report} = this.state;\n    if(report) {\n      // alert(\"Already a report for today\");\n    }\n    return (\n      <div >\n        <Box m={1}>\n          <ReportForm onSubmit={this.onSubmit} loading={loading} />\n        </Box>\n        \n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(AddReport);","import {API_URL , request, getRequest} from '../helpers/utils';\nimport moment from 'moment';\n\nexport async function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\n\n  let date = moment(report_date).format('YYYY-MM-DD');\n    \n  let url = `${API_URL}/misc/getReport?report_date=${date}&milk_type=${type}`;\n  let result =  await request({\n\n    url: url,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n\n  });\n\n  return result ;\n}\n\nexport async function getBatchMilkReport(batchNo) {\n  let url = `${API_URL}/misc/getBatchMilkReport?batchNo=${batchNo}`;\n  return getRequest(url);\n}\n\nexport function getOrderDetails(orderId = '') {\n  orderId = parseInt(orderId)\n  orderId = btoa(orderId);\n  let url = `${API_URL}/order/getMyOrderDetails?orderId=${orderId}`;\n  return getRequest(url);\n}\n\nexport function getMyOrderItemDetails(orderId = '') {\n  orderId = parseInt(orderId)\n  orderId = btoa(orderId);\n  let url = `${API_URL}/order/getMyOrderItemDetails?orderId=${orderId}`;\n  return getRequest(url);\n}"],"sourceRoot":""}