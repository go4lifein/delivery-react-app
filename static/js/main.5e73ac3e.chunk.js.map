{"version":3,"sources":["constants/index.js","components/Loading.js","App.js","reducers/admin.reducers.js","reducers/driver.reducers.js","store.js","index.js"],"names":["UPDATE_DRIVER","UPDATE_ORDERS","UPDATE_ADMIN","UPDATE_ORDERS_DATA","UPDATE_ADMIN_DATA","UPDATE_ORDER_CRATE_DATA","ADD_PRODUCTS","ADD_ORDER_PRODUCTS","ADD_ORDER_BOX","UPDATE_DELIVERY_REPORT","Loading","className","Admin","lazy","Driver","Trace","TraceProduce","Visual","Tracemilk","App","theme","createMuiTheme","palette","secondary","light","main","dark","contrastText","background","default","paper","id","ThemeProvider","CssBaseline","base","fallback","path","exact","component","admin","window","localStorage","getItem","initialState","JSON","parse","undefined","products","Map","orderBoxData","loadingOrderData","processProducts","data","forEach","item","name","image","thumbnail","set","processOrderProducts","orderProducts","orderId","productId","has","get","push","processOrderBoxData","orderBox","processLocations","locations","hubs","order","subarea","area","region","includes","hubAreas","subareas","areaData","driver","logger","createLogger","store","createStore","combineReducers","setDriver","state","action","type","payload","setItem","stringify","orders","setAdmin","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e73ac3e.chunk.js","sourcesContent":["// constants for driver\r\nexport const UPDATE_DRIVER = 'UPDATE_DRIVER';\r\nexport const UPDATE_ORDERS = 'UPDATE_ORDERS';\r\n\r\n// admin constants\r\nexport const UPDATE_ADMIN = 'UPDATE_ADMIN';\r\nexport const UPDATE_ORDERS_DATA = 'UPDATE_ORDERS_DATA';\r\nexport const UPDATE_ADMIN_DATA = 'UPDATE_ADMIN_DATA';\r\nexport const UPDATE_ORDER_CRATE_DATA = 'UPDATE_ORDER_CRATE_DATA';\r\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\r\nexport const ADD_ORDER_PRODUCTS = 'ADD_ORDER_PRODUCTS';\r\nexport const ADD_ORDER_BOX = 'ADD_ORDER_BOX';\r\nexport const UPDATE_DELIVERY_REPORT = 'UPDATE_DELIVERY_REPORT';","import { CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"flex center middle p-10\">\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React, { Suspense, lazy } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport \"./css/style.css\";\r\nimport \"./App.css\";\r\nimport Loading from \"./components/Loading\";\r\nconst Admin = lazy(() => import(/* webpackChunkName: \"Admin\" */ \"./containers/Admin.jsx\"));\r\nconst Driver = lazy(() => import(/* webpackChunkName: \"Driver\" */ \"./containers/Driver.jsx\"));\r\nconst Trace = lazy(() => import(/* webpackChunkName: \"Trace\" */ \"./trace/Trace.js\"));\r\nconst TraceProduce = lazy(() => import(/* webpackChunkName: \"TraceProduce\" */ \"./containers/TraceProduce\"));\r\nconst Visual = lazy(() => import(/* webpackChunkName: \"Visual\" */ \"./containers/Visual\"));\r\nconst Tracemilk = lazy(() => import(/* webpackChunkName: \"Tracemilk\" */ \"./trace/Tracemilk.js\"))\r\n// const Trace = lazy(() => import(\"./components/Traceability.js\"));\r\n\r\nfunction App() {\r\n  // const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      // type: 'light',\r\n      // primary: colors.green[400],\r\n      secondary: {\r\n        light: \"#ff4081\",\r\n        main: \"#f50057\",\r\n        dark: \"#c51162\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      background: {\r\n        default: \"#fff\",\r\n        paper: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"app\">\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <Router base={\"delivery-react-app\"}>\r\n            <main>\r\n              <Suspense fallback={<Loading />}>\r\n                <Switch>\r\n                  <Route path=\"/trace/produce\" exact component={TraceProduce} />\r\n                  <Route path=\"/trace\" exact component={Trace} />\r\n                  <Route path=\"/visual\" component={Visual} />\r\n                  <Route path=\"/trace-milk\" exact component={Tracemilk} />\r\n                  <Route path=\"/admin\" component={Admin} />\r\n                  <Route path=\"/\" component={Driver} />\r\n            \r\n                </Switch>\r\n              </Suspense>\r\n            </main>\r\n          </Router>\r\n        </ThemeProvider>\r\n      </div>\r\n      <div id=\"printable\">\r\n        {/*  for print utility */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { \r\n  UPDATE_ADMIN, \r\n  UPDATE_ORDERS_DATA, \r\n  UPDATE_ADMIN_DATA,\r\n  ADD_PRODUCTS,\r\n  ADD_ORDER_PRODUCTS,\r\n  ADD_ORDER_BOX, UPDATE_DELIVERY_REPORT\r\n} from '../constants/index';\r\n\r\n\r\nlet admin = window.localStorage.getItem('admin');\r\nif(admin) {\r\n  admin = JSON.parse(admin);\r\n} else {\r\n  admin = undefined;\r\n}\r\n\r\nconst initialState = {\r\n  admin,\r\n  products : new Map(),\r\n  orderBoxData: new Map(),\r\n  loadingOrderData: true\r\n}\r\n\r\nfunction processProducts(data, products) {\r\n  data.forEach(item => {\r\n    const {id, name, thumbnail: image} = item;\r\n    products.set(id, {\r\n      id, name, image\r\n    })\r\n  })\r\n}\r\n\r\nfunction processOrderProducts(data, orderProducts) {\r\n  data.forEach(item => {\r\n    const {orderId, productId} = item;\r\n    if(orderProducts.has(orderId)) {\r\n      orderProducts.get(orderId).push(item);\r\n    } else {\r\n      orderProducts.set(orderId, [item]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction processOrderBoxData(data, orderBox) {\r\n  data.forEach(item => {\r\n    const {orderId} = item;\r\n    orderBox.set(orderId, item);\r\n  });\r\n}\r\n\r\nfunction processLocations(data) {\r\n\r\n  let locations = new Map();\r\n\r\n  let hubs = [];\r\n\r\n  data.forEach(order => {\r\n    let { subarea, area, region } = order;\r\n    if(!hubs.includes(region)) {\r\n      hubs.push(region)\r\n    }\r\n    \r\n    if(locations.has(region)) {\r\n      let hubAreas = locations.get(region);\r\n      if(hubAreas.has(area)) {\r\n        let subareas = hubAreas.get(area);\r\n        if(!subareas.includes(subarea)) {\r\n          subareas.push(subarea);\r\n        }\r\n        hubAreas.set(area, subareas);\r\n        locations.set(region, hubAreas);\r\n      } else {\r\n        let areaData = [subarea];\r\n        hubAreas.set(area, areaData);\r\n        locations.set(region, hubAreas);\r\n      }\r\n    } else {\r\n      let hubAreas = new Map();\r\n      hubAreas.set(area, [subarea]);\r\n      locations.set(region, hubAreas)\r\n    }\r\n  });\r\n\r\n  return [locations, hubs];\r\n  \r\n}\r\n\r\nexport const setAdmin = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case UPDATE_ADMIN:\r\n      let admin = action.payload;\r\n      window.localStorage.setItem('admin', JSON.stringify(admin));\r\n      return { ...state, admin}\r\n\r\n    case UPDATE_ADMIN_DATA:\r\n      // let {customers, areas, subareas, categories, hubs, orders} = action.payload;\r\n      return { \r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    case UPDATE_ORDERS_DATA:\r\n\r\n      let orders = action.payload;\r\n\r\n      let [locations, hubs] = processLocations(orders);\r\n      return {\r\n        ...state,\r\n        orders,\r\n        locations,\r\n        hubs\r\n      };\r\n    \r\n    case ADD_PRODUCTS:\r\n\r\n      let products = new Map();\r\n      processProducts(action.payload, products);\r\n\r\n      return {\r\n        ...state,\r\n        products\r\n      }\r\n      \r\n    case ADD_ORDER_PRODUCTS:\r\n      let orderProducts = new Map();\r\n      processOrderProducts(action.payload, orderProducts);\r\n\r\n      return {\r\n        ...state,\r\n        orderProducts\r\n      }\r\n    \r\n    case ADD_ORDER_BOX:\r\n      let orderBoxData = new Map();\r\n      processOrderBoxData(action.payload, orderBoxData);\r\n\r\n      return {\r\n        ...state,\r\n        orderBoxData\r\n      }\r\n\r\n    case UPDATE_DELIVERY_REPORT:\r\n      \r\n      {\r\n        let orders = action.payload;\r\n\r\n        let [locations, hubs] = processLocations(orders);\r\n        return {\r\n          ...state,\r\n          orders,\r\n          locations,\r\n          hubs\r\n        };\r\n      }\r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\r\n\r\nlet driver = window.localStorage.getItem('driver');\r\nif(driver) {\r\n  driver = JSON.parse(driver);\r\n} else {\r\n  driver = undefined;\r\n}\r\nconst initialState = {\r\n  driver\r\n}\r\n\r\nfunction hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const setDriver = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case UPDATE_DRIVER:\r\n      let driver = action.payload;\r\n      window.localStorage.setItem('driver', JSON.stringify(driver));\r\n      return { ...state, driver}\r\n\r\n    case UPDATE_ORDERS:\r\n\r\n      let orders = action.payload;\r\n      let locations = new Map();\r\n\r\n      let hubs = [];\r\n\r\n      orders.forEach(order => {\r\n        let { subarea, area, region } = order;\r\n        if(!hubs.includes(region)) {\r\n          hubs.push(region)\r\n        }\r\n        \r\n        if(locations.has(region)) {\r\n          let hubAreas = locations.get(region);\r\n          if(hubAreas.has(area)) {\r\n            let subareas = hubAreas.get(area);\r\n            if(!subareas.includes(subarea)) {\r\n              subareas.push(subarea);\r\n            }\r\n            hubAreas.set(area, subareas);\r\n            locations.set(region, hubAreas);\r\n          } else {\r\n            let areaData = [subarea];\r\n            hubAreas.set(area, areaData);\r\n            locations.set(region, hubAreas);\r\n          }\r\n        } else {\r\n          let hubAreas = new Map();\r\n          hubAreas.set(area, [subarea]);\r\n          locations.set(region, hubAreas)\r\n        }\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        orders,\r\n        locations,\r\n        hubs\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport {createLogger} from 'redux-logger';\r\n\r\nimport { setAdmin } from \"./reducers/admin.reducers\";\r\nimport { setDriver } from \"./reducers/driver.reducers\";\r\n\r\nconst logger = createLogger();\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    setDriver,\r\n    setAdmin,\r\n  }),\r\n  applyMiddleware(logger)\r\n);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {SnackbarProvider} from 'notistack';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <SnackbarProvider>\r\n      <App />\r\n\r\n      </SnackbarProvider>\r\n   \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}