{"version":3,"sources":["images/logo.png","actions/driver.actions.js","api/v2/driver.js","components/DriverNavbar.js","components/DriverLogin.js","containers/Driver.jsx"],"names":["updateDriver","driver","type","UPDATE_DRIVER","payload","updateOrders","orders","UPDATE_ORDERS","login","data","url","API_URL","request","method","headers","getMyOrders","driverId","submitOrderDelivery","formData","post","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","withRouter","connect","state","setDriver","dispatch","onUpdateDriver","props","classes","className","AppBar","position","color","Toolbar","src","logo","alt","Typography","variant","IconButton","onClick","window","reload","Button","setCookie","Divider","LoginAdmin","phone","handleSubmit","then","res","initRequestAuthHeader","catch","err","alert","this","style","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","autoComplete","label","name","value","onChange","e","setState","target","to","Component","admin","ChooseOrder","lazy","OrderDeliveryForm","Driver","DriverNavbar","fallback","Loading","path","component","DriverLogin"],"mappings":"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","file":"static/js/Driver.e1d4e9ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";","import {UPDATE_DRIVER, UPDATE_ORDERS} from '../constants/index';\r\n\r\nexport const updateDriver = (driver) => ({\r\n  type: UPDATE_DRIVER,\r\n  payload: driver\r\n});\r\n\r\nexport const updateOrders = (orders) => ({\r\n  type: UPDATE_ORDERS,\r\n  payload: orders\r\n});","import {API_URL , request, getRequest} from '../../helpers/utils';\r\nimport { post } from 'axios';\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/v2/driver/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDriver() {\r\n  let url = `${API_URL}/v2/driver/getDriver`;\r\n  return getRequest(url);\r\n}\r\n\r\n\r\nexport function getMyOrders(driverId) {\r\n  let url = `${API_URL}/v2/driver/getMyOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\n// not used\r\nexport function confirmDelivery(data) {\r\n  let url = `${API_URL}/order/confirmDelivery`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function submitOrderDelivery(formData) {\r\n  let url = `${API_URL}/v2/driver/submitOrderDelivery`;\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n  return post(url, formData, config);\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\n// import { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nimport { Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {updateDriver} from '../actions/driver.actions';\r\nimport {setCookie} from '../helpers/utils';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateDriver: (driver) => dispatch(updateDriver(driver))\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction getTitle(location) {\r\n  switch (location.pathname) {\r\n    case '/admin/product':\r\n      return 'Product Sheet';\r\n    case '/admin/manageOrders':\r\n      return 'Manage Orders';\r\n    default:\r\n      return 'Choose Order';\r\n  }\r\n}\r\n\r\nfunction MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const { location} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"warning\">\r\n        <Toolbar>\r\n          <img src={logo} alt=\"logo\" className=\"logo-nav\" />\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {getTitle(location)}\r\n          </Typography>\r\n          \r\n          <div className=\"flex\">\r\n            <IconButton \r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              <RefreshIcon />\r\n            </IconButton>\r\n            <Button\r\n              className=\"nav-link\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                let {onUpdateDriver} = props;\r\n                setCookie('x-driver-token', '', 0);\r\n                onUpdateDriver(null);\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n            \r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuAppBar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\r\n\r\nimport {login} from '../api/v2/driver';\r\nimport {updateDriver} from '../actions/driver.actions';\r\nimport {initRequestAuthHeader, setCookie} from '../helpers/utils';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateDriver: (admin) => dispatch(updateDriver(admin))\r\n  };\r\n}\r\n\r\nclass LoginAdmin extends Component {\r\n  state = {\r\n    phone: '',\r\n  }\r\n  handleSubmit = () => {\r\n    let {onUpdateDriver} = this.props;\r\n    let {phone } = this.state;\r\n    login({phone})\r\n    .then(res => {\r\n      setCookie(\"x-driver-token\", phone, 5);\r\n      initRequestAuthHeader(\"x-driver-token\");\r\n      onUpdateDriver(res.data);\r\n    })\r\n    .catch(err => alert(\"Please check phone number\"));\r\n  }\r\n  render() {\r\n    let {phone} = this.state;\r\n    return (\r\n      <div \r\n        style={{\r\n          display: \"flex\", \r\n          justifyContent: 'center', \r\n          alignItems: 'center',\r\n          background: 'grey',\r\n          height: '100vh'\r\n        }}\r\n      >\r\n        <Card style={{minWidth: 300}}>\r\n          <CardHeader title=\"Login\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                autoFocus\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                autoComplete=\"true\"\r\n                label=\"Phone Number\"\r\n                type=\"number\"\r\n                name=\"Phone Number\"\r\n                value={phone}\r\n                onChange={(e) => this.setState({phone: e.target.value})}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button \r\n                variant=\"contained\" \r\n                fullWidth\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n          <div>\r\n            <Link to=\"/admin\">\r\n              Login as Admin\r\n            </Link>\r\n          </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport DriverNavbar from \"../components/DriverNavbar\";\r\nimport DriverLogin from '../components/DriverLogin';\r\nimport {getCookie} from '../helpers/utils'\r\n\r\nconst ChooseOrder = lazy(() => import('../components/ChooseOrder'));\r\nconst OrderDeliveryForm = lazy(() => import('../components/OrderDeliveryForm'));\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nclass Driver extends Component {\r\n  componentDidMount() {\r\n    // if()\r\n  }\r\n  render() {\r\n    const {driver} = this.props;\r\n    return (\r\n      <div>\r\n        {driver ?\r\n          <div>\r\n            <DriverNavbar />\r\n            <Suspense fallback={<Loading />}>\r\n              <Switch>\r\n                <Route \r\n                  path=\"/:orderId/deliver\"\r\n                  component={OrderDeliveryForm}\r\n                />\r\n                <Route \r\n                  path=\"/\"\r\n                  component={ChooseOrder} \r\n                />\r\n              </Switch>\r\n            </Suspense>\r\n          </div> :\r\n          <DriverLogin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Driver);"],"sourceRoot":""}