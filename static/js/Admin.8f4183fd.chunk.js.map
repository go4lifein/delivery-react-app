{"version":3,"sources":["helpers/utils.js","actions/admin.actions.js","api/admin.js","images/logo.png","components/AdminNavbar.js","components/AdminLogin.js","containers/Admin.jsx"],"names":["API_URL","getCookies","cookies","document","cookie","split","data","forEach","values","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","setRequestAuthHeader","key","accessToken","axios","defaults","headers","common","initRequestAuthHeader","userAccessToken","request","config","postRequest","url","method","getRequest","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","updateAdmin","admin","UPDATE_ADMIN","payload","updateAdminData","UPDATE_ADMIN_DATA","updateOrdersData","UPDATE_ORDERS_DATA","updateOrderCrateData","UPDATE_ORDER_CRATE_DATA","addProducts","ADD_PRODUCTS","addOrderProducts","ADD_ORDER_PRODUCTS","addOrderBox","ADD_ORDER_BOX","updateDeliveryReport","UPDATE_DELIVERY_REPORT","getAllOrders","updateCrateId","prepareOrder","login","addReport","formData","post","getLocationCustomerDensity","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","SideNav","logOut","useState","open","setOpen","className","IconButton","onClick","style","color","position","zIndex","SwipeableDrawer","anchor","onClose","onOpen","List","ListItem","button","window","reload","ListItemIcon","ListItemText","primary","to","withRouter","connect","state","setAdmin","dispatch","onUpdateAdmin","props","classes","AppBar","backgroundColor","Toolbar","padding","src","logo","alt","Typography","variant","Box","Divider","LoginAdmin","username","password","handleSubmit","then","res","token","catch","err","alert","this","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","label","onChange","e","setState","target","Button","Component","CustomerSheet","lazy","ProductSheet","OrderManagement","DeliveryDashboard","PackOrders","AddReport","HeatMap","DriverDashboard","FarmerDashboard","AdminRouter","AdminNavbar","fallback","Loading","exact","path","component"],"mappings":"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","file":"static/js/Admin.8f4183fd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_URL = 'https://api.deliver.go4life.in/api';\r\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\n// export const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(\";\");\r\n  let data = {};\r\n  cookies.forEach((cookie) => {\r\n    let values = cookie.split(\"=\");\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nexport function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n      var date = new Date();\r\n      date.setTime(date.getTime() + (days*24*60*60*1000));\r\n      expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}\r\n\r\nfunction setRequestAuthHeader(key = \"x-admin-token\", accessToken) {\r\n  // alert(key + \" \" + accessToken)\r\n  axios.defaults.headers.common[key] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-admin-token\"];\r\n\r\nexport function initRequestAuthHeader(key = \"x-admin-token\") {\r\n  let userAccessToken = getCookies()[key];\r\n  if(userAccessToken) setRequestAuthHeader(key, userAccessToken);\r\n}\r\nif(getCookies()[\"x-admin-token\"]) {\r\n  initRequestAuthHeader(\"x-admin-token\");\r\n} else {\r\n  initRequestAuthHeader(\"x-driver-token\");\r\n}\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n\r\nexport function onlyMilkAndPaneer(products) {\r\n  const categories = Object.entries(products);\r\n  categories.forEach(([category, value]) => {\r\n    value.forEach(product => {\r\n      const name = product.product;\r\n      if(name.toLowerCase().includes(\"milk\") === false) return false;\r\n      if(name.toLowerCase().includes(\"paneer\") ===false) return false;\r\n    });\r\n  });\r\n  return true;\r\n}\r\n\r\n\r\nexport function hasOnlyDairyProducts(products) {\r\n  if('Dairy' in products && Object.entries(products).length === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasNoDairy(products) {\r\n  if(!('Dairy' in products)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function postRequest(url, data) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRequest(url) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'get'\r\n  });\r\n}\r\n\r\nexport function dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\n","import { \r\n  UPDATE_ADMIN, \r\n  UPDATE_ORDERS_DATA, \r\n  UPDATE_ADMIN_DATA, \r\n  UPDATE_ORDER_CRATE_DATA,\r\n  ADD_PRODUCTS,\r\n  ADD_ORDER_PRODUCTS,\r\n  ADD_ORDER_BOX,\r\n  UPDATE_DELIVERY_REPORT\r\n} from '../constants/index';\r\n\r\nexport const updateAdmin = (admin) => ({\r\n  type: UPDATE_ADMIN,\r\n  payload: admin\r\n});\r\n\r\nexport const updateAdminData = (data) => ({\r\n  type: UPDATE_ADMIN_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const updateOrdersData = (data) => ({\r\n  type: UPDATE_ORDERS_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const updateOrderCrateData = (data) => ({\r\n  type: UPDATE_ORDER_CRATE_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const addProducts = (data) => ({\r\n  type: ADD_PRODUCTS,\r\n  payload: data\r\n});\r\n\r\nexport const addOrderProducts = (data) => ({\r\n  type: ADD_ORDER_PRODUCTS,\r\n  payload: data\r\n});\r\n\r\nexport const addOrderBox = (data) => ({\r\n  type: ADD_ORDER_BOX,\r\n  payload: data\r\n});\r\n\r\nexport const updateDeliveryReport = (data) => ({\r\n  type: UPDATE_DELIVERY_REPORT,\r\n  payload: data\r\n});","import {API_URL , request} from '../helpers/utils';\r\nimport { post } from 'axios';\r\n\r\nexport function getAllOrders() {\r\n  let url = `${API_URL}/order/getAllOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/order/getDeliveryBoysData`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/order/assignDrivers`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function updateCrateId(data) {\r\n  let url = `${API_URL}/order/updateCrateId`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function prepareOrder(data) {\r\n  let url = `${API_URL}/order/prepareOrder`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/admin/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function addReport(formData) {\r\n  let url = `${API_URL}/admin/addReport`;\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n  return post(url, formData, config);\r\n}\r\n\r\n\r\n\r\n\r\nexport function getLocationCustomerDensity() {\r\n  let url = `${API_URL}/admin/getLocationCustomerDensity`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","export default __webpack_public_path__ + \"static/media/logo.8f39d4d2.png\";","import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport MenuIcon from '@material-ui/icons/MenuOpen';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport ExitToApp from '@material-ui/icons/ExitToAppOutlined';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../images/logo.png';\r\n\r\nimport {updateAdmin} from '../actions/admin.actions';\r\nimport Box from '@material-ui/core/Box';\r\nimport {setCookie} from '../helpers/utils';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction getTitle(location) {\r\n  switch (location.pathname) {\r\n    case '/admin/product':\r\n      return 'Product Sheet';\r\n    case '/admin/manageOrders':\r\n      return 'Manage Orders';\r\n    case '/admin/pack':\r\n      return 'Pack Orders';\r\n    case '/admin/addReport':\r\n      return 'Add Milk Report'\r\n    case '/admin/customer-density':\r\n      return 'Customer Density'\r\n    case '/admin/delivery':\r\n      return 'Delivery Dashboard'\r\n      case '/admin/DriverDashboard':\r\n        return 'Driver Dashboard'\r\n    case '/admin/FarmerDashboard':\r\n      return 'Farmer Dashboard'\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const { location} = props;\r\n  const logOut = () => {\r\n    const {onUpdateAdmin} = props;\r\n    setCookie('x-admin-token', '', 0);\r\n    onUpdateAdmin(null);\r\n\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor: \"#fff\"}} color=\"default\">\r\n        <Toolbar style={{padding: 10}}>\r\n          \r\n          <img src={logo} alt=\"logo\" className=\"logo-nav\" />\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {getTitle(location)}\r\n          </Typography>\r\n          \r\n          {/* <Box display={{ xs: 'none', md: 'block' }} >\r\n            <HorizontalNav logOut={logOut} />\r\n          </Box> */}\r\n          \r\n          <Box >\r\n            <SideNav logOut={logOut} />\r\n          </Box>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SideNav({logOut}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex middle\">\r\n      <IconButton onClick={toggleMenu} >\r\n        <MenuIcon style={{color: \"#000\"}} />\r\n      </IconButton>\r\n      <div style={{position: 'fixed', zIndex: 10}}>\r\n        <SwipeableDrawer\r\n          anchor=\"right\"\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n        >\r\n          <List>\r\n            <ListItem button key=\"Reload\" onClick={() => window.location.reload()}>\r\n              <ListItemIcon>\r\n                <RefreshIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Reload\" />\r\n            </ListItem>\r\n            <Link to=\"/admin/customer-density\" >\r\n              <ListItem button key=\"customer-density\">\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer Density\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to = '/admin/DriverDashboard'>\r\n              <ListItem button key = \"DriverDashboard\">\r\n                <ListItemIcon>\r\n                <ArchiveIcon />\r\n                </ListItemIcon>\r\n              \r\n                <ListItemText primary = \"Driver Dashboard\" />\r\n              </ListItem>\r\n          \r\n            </Link>\r\n            <Link to = '/admin/FarmerDashboard'>\r\n              <ListItem button key = \"FarmerDashboard\">\r\n                <ListItemIcon>\r\n                <ArchiveIcon />\r\n                </ListItemIcon>\r\n              \r\n                <ListItemText primary = \"Farmer Dashboard\" />\r\n              </ListItem>\r\n          \r\n            </Link>\r\n            {/* <Link to=\"/admin/customer\">\r\n              <ListItem button key=\"Customer Sheet\">\r\n                <ListItemIcon>\r\n                  <AccountIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customer Sheet\" />\r\n              </ListItem>\r\n            </Link>\r\n            \r\n            <Link to=\"/admin/product\">\r\n              <ListItem button key=\"Product Sheet\">\r\n                <ListItemIcon>\r\n                  <DownloadIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Product Sheet\" />\r\n              </ListItem>\r\n            </Link> */}\r\n            <Link to=\"/admin/manageOrders\" >\r\n              <ListItem button key=\"Manage Orders\">\r\n                <ListItemIcon>\r\n                  <CreateIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Manage Orders\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/admin/delivery\" >\r\n              <ListItem button key=\"Delivery Dashboard\">\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Delivery Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            {/* <Link to=\"/admin/pack\" >\r\n              <ListItem button key=\"Pack Orders\">\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Pack Orders\" />\r\n              </ListItem>\r\n            </Link> */}\r\n            <Link to=\"/admin/addReport\" >\r\n              <ListItem button key=\"Add Report\">\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Report\" />\r\n              </ListItem>\r\n            </Link>\r\n            <ListItem button key=\"Logout\" onClick={logOut}>\r\n              <ListItemIcon>\r\n                <ExitToApp />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign out\" />\r\n            </ListItem>\r\n          </List>\r\n        </SwipeableDrawer>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuAppBar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\r\n\r\nimport {login} from '../api/admin';\r\nimport {updateAdmin} from '../actions/admin.actions';\r\nimport {initRequestAuthHeader, setCookie} from '../helpers/utils';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nclass LoginAdmin extends Component {\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  }\r\n  handleSubmit = () => {\r\n    let {username, password} = this.state;\r\n    let {onUpdateAdmin} = this.props;\r\n    login({username, password})\r\n    .then(res => {\r\n      let token = res.data['token'];\r\n      setCookie(\"x-admin-token\", token, 5);\r\n      initRequestAuthHeader(\"x-admin-token\", token);\r\n      onUpdateAdmin(res.data.username);\r\n      document.location.reload();\r\n    })\r\n    .catch(err => alert(\"Please check username and password\"));\r\n  }\r\n  render() {\r\n    let {username, password} = this.state;\r\n    return (\r\n      <div \r\n        style={{\r\n          display: \"flex\", \r\n          justifyContent: 'center', \r\n          alignItems: 'center',\r\n          background: 'grey',\r\n          height: '100vh'\r\n        }}\r\n      >\r\n        <Card style={{minWidth: 300}}>\r\n          <CardHeader title=\"Admin Login\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                autoFocus\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                value={username}\r\n                onChange={(e) => this.setState({username: e.target.value})}\r\n              />\r\n            </div>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(e) => this.setState({password: e.target.value})}\r\n              />\r\n            </div>\r\n            <div >\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n            \r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n          <div>\r\n            <Link to=\"/\">\r\n              Login as Driver\r\n            </Link>\r\n          </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport AdminNavbar from \"../components/AdminNavbar\";\r\nimport LoginAdmin from '../components/AdminLogin';\r\n\r\nconst CustomerSheet = lazy(() => import(/* webpackChunkName: \"CustomerSheet\" */ '../components/CustomerSheet'));\r\nconst ProductSheet = lazy(() => import(/* webpackChunkName: \"ProductSheet\" */ '../components/ProductSheet'));\r\nconst OrderManagement = lazy(() => import(/* webpackChunkName: \"OrderManagement\" */ '../components/OrderManagement'));\r\nconst DeliveryDashboard = lazy(() => import(/* webpackChunkName: \"DeliveryDashboard\" */ '../components/DeliveryDashboard'));\r\nconst PackOrders = lazy(() => import(/* webpackChunkName: \"PackOrders\" */ '../components/PackOrders'));\r\nconst AddReport = lazy(() => import(/* webpackChunkName: \"AddReport\" */ '../components/AddReport'));\r\nconst HeatMap = lazy(() => import(/* webpackChunkName: \"HeatMap\" */ '../components/HeatMap'));\r\nconst DriverDashboard = lazy(() => import (/*webpackChunkName : \"DriverDashboard\"*/ '../components/DriverDashboard'));\r\nconst FarmerDashboard = lazy(() => import (/*webpackChunkName : \"FarmerDashboard\"*/ '../components/FarmerDashboard'));\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nclass AdminRouter extends Component {\r\n  render() {\r\n    const {admin} = this.props;\r\n    return (\r\n      <div>\r\n        \r\n        {admin ?\r\n          <div>\r\n            <AdminNavbar />\r\n              <Suspense fallback={<Loading />}>\r\n                <Switch>\r\n                  <Route \r\n                    exact\r\n                    path=\"/admin/product\"\r\n                    component={ProductSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/manageOrders\"\r\n                    exact\r\n                    component={OrderManagement} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/customer\"\r\n                    exact\r\n                    component={CustomerSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/pack\"\r\n                    exact\r\n                    component={PackOrders}\r\n                  />\r\n                  <Route \r\n                    path=\"/admin/addReport\"\r\n                    component={AddReport} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/customer-density\"\r\n                    component={HeatMap}\r\n                  />\r\n                  <Route \r\n                    path=\"/admin/delivery\"\r\n                    component={DeliveryDashboard}\r\n                  />\r\n                  <Route\r\n                    path =\"/admin/DriverDashboard\"\r\n                    component = {DriverDashboard}\r\n                  />\r\n                  <Route \r\n                    path = \"/admin/FarmerDashboard\"\r\n                    component = {FarmerDashboard}\r\n                  />\r\n                  {/* Fallback */}\r\n                  <Route \r\n                    path=\"/admin\"\r\n                    component={OrderManagement} \r\n                  />\r\n                </Switch>\r\n              </Suspense>\r\n          </div>\r\n          :\r\n          <LoginAdmin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(AdminRouter);"],"sourceRoot":""}